*--------------------------------------------------------------------*
*                                                                    *
*              PROGRAM TO LIST LINKLIST DATASETS AND ITS VOLSER      *
*                   OR TO LIST LPA      DATASETS AND ITS VOLSER      *
*                                                                    *
*        ATTRIBUTES: AMODE31 RMODE24 REENTRANT                       *
*                                                                    *
* WRITTEN BY:  SAM BASS                                              *
*                                                                    *
*        KBASS: 03/22/2011 ADDED SUPPORT FOR DYNAMIC LNKLIST DSNS    *
*                                                                    *
* NOTE:  IF THIS WAS LINKEDITED WITH AN OLDER RELEASE OF BINDER      *
*        YOU WILL HAVE TO DELETE THE LPALIST ALIAS BEFORE YOU        *
*        LINKEDIT THIS MEMBER.                                       *
*                                                                    *
*--------------------------------------------------------------------*
LNKLIST  AMODE 31
LNKLIST  RMODE 24
LNKLIST  CSECT
         SAVE  (14,12),T,'LNK/LPA-LIST_&SYSDATC._&SYSTIME.'
         LA    R1,1
         B     START-LNKLIST(R15)
         ENTRY LPALIST
LPALIST  DS    0H
         STM   R14,R12,12(R13)
         LA    R1,2
         B     START-LPALIST(R15)
START    DS    0H
         BALR  R12,0               SET BASE REG
         LA    R0,*-LNKLIST         AND RESET IT
         SLR   R12,R0                TO BEGINNING OF PROGRAM
         USING LNKLIST,R12
         LR    R11,R1              SAVE FUNCTION
*
         L     R0,=A(WORKLEN)
         STORAGE OBTAIN,LENGTH=(0),LOC=BELOW,SP=1
         ST    R1,8(,R13)          STORE OUR SAVE AREA
         LR    R2,R1
         LR    R3,R0               ZERO
         SLR   R15,R15               AREA
         MVCL  R2,R14              ...
*
         ST    R13,4(,R1)          SAVE THEIR'S IN OUR'S
         LR    R13,R1
         USING WORK,R13
         MVC   WREC,BLANKS
*
         STC   R11,WFUNCT
         CLI   WFUNCT,1            IS IT LNKLIST
         BE    LINK                 YES
         CLI   WFUNCT,2            IS IT LPALIST
         BE    LPA                  YES
         ABEND 1                    NO, UNSUPPORTED ENTRY
*--------------------------------------------------------------------*
*              LINKLIST                                              *
*--------------------------------------------------------------------*
LINK     DS    0H
         L     R2,X'10'            CVT
         USING CVT,R2
         L     R3,CVTLLTA          LNKLIST TABLE POINTER
         LA    R0,30
         LA    R1,=CL30'*** LINK LIST DATA SETS ***'
         BAL   R9,PUTMSG
         TM    CVTOSLV1,CVTDYNL    DYNAMIC LNKLIST?
         BO    LINKDYN
         DROP  R2
         CLC   =C'LLT',0(R3)       IS IT REALLY LLT
         BE    LLTOK
         LA    R0,31
         LA    R1,=CL31'*** LINK LIST TABLE INVALID ***'
         BAL   R9,PUTMSG
         B     RETURN
*--------------------------------------------------------------------*
* 03/11/2011   DYNAMIC LINKLIST SUPPORT                              *
*--------------------------------------------------------------------*
LINKDYN  DS    0H
         ZAP   WDSNUM,=P'0'        ZERO COUNTER
         CSVDYNL REQUEST=LIST,ANSAREA=WCSVWORK,ANSLEN==A(WCSVWRKL),    X
               MF=(E,WCSVLNK)
         LTR   R15,R15
         BNZ   DYNERR
*
         LA    R4,WCSVWORK
         USING DLAAHDR,R4          LINKLIST SET
         L     R5,DLAAH#LS         NUMBER OF DLAALS ENTRIES
         L     R6,DLAAHFIRSTLSADDR ADDRESS TO FIRST DLAA
         DROP  R4
*
         USING DLAALS,R6
LNKDY100 DS    0H
         TM    DLAALSFLAGS,DLAALSWASCURRENT IS THIS CURRENT LNKLIST?
         BO    LNKDY190
         L     R6,DLAALSNEXTADDR
         BCT   R5,LNKDY100
         B     RETURN              NONE FOUND
LNKDY190 DS    0H                  GET LNKLIST DATASETS
         MVC   WLNKNAM,DLAALSNAME
         MVC   WREC+$DSN(8),=CL8'DYNAMIC'
         MVC   WREC+$DSN+9(16),WLNKNAM
         LA    R0,30
         LA    R1,WREC
         BAL   R9,PUTMSG
         LH    R5,DLAALS#DS        NUMBER OF DLAADS ENTRIES
         L     R6,DLAALSFIRSTDSADDR FIRST DLAADS FOR THIS DLAALS
         DROP  R6
*
LNKDY210 DS    0H
         USING DLAADS,R6
         MVC   WDSNVOL,DLAADSVOLID
         MVC   WDSNAME,BLANKS
         LH    R2,DLAADSNAMELEN    DS LENGTH
         S     R2,=F'1'
         MVC   WDSNAME(0),DLAADSNAME
         EX    R2,*-6               FOR REAL
         MVC   WREC+$VOL(06),WDSNVOL
         MVC   WREC+$DSN(44),WDSNAME
         TM    DLAADSFLAGS,DLAADSAPF IS IT APF?
         BZ    LNKDY220            NO
         MVC   WREC+$APF(3),=C'APF'
LNKDY220 DS    0H
         TM    DLAADSFLAGS,DLAADSSMSMANAGED IS IT SMS
         BZ    LNKDY230            NO
         MVC   WREC+$SMS(3),=C'SMS'
LNKDY230 DS    0H

         MVC   WREC+$OFF(4),=X'F0212020'
         ED    WREC+$OFF(4),WDSNUM
         MVI   WREC+$OFF,C'+'
         LA    R0,70
         LA    R1,WREC
         BAL   R9,PUTMSG
         L     R6,DLAADSNEXTADDR
         AP    WDSNUM,=P'1'        ADD 1 TO DSN COUNT
         BCT   R5,LNKDY210
         B     RETURN
         DROP  R6
*--------------------------------------------------------------------*
*              LPALIST                                               *
*--------------------------------------------------------------------*
LPA      DS    0H
         L     R2,X'10'            CVT
         USING CVT,R2
         L     R2,CVTSMEXT
         DROP  R2
         USING CVTVSTGX,R2
         L     R3,CVTEPLPS         LPALIST TABLE POINTER
         DROP  R2
         LA    R0,30
         LA    R1,=CL30'*** LIST OF LPA DATASETS ***'
         BAL   R9,PUTMSG
         CLC   =C'LPAT',0(R3)      IS IT REALLY LPA TABLE
         BE    LLTOK
         LA    R0,30
         LA    R1,=CL30'*** LPA LIST TABLE INVALID ***'
         BAL   R9,PUTMSG
         B     RETURN
LLTOK    DS    0H
         SPACE 1
         ZAP   WDSNUM,=P'0'        ZERO COUNTER
         LA    R3,4(,R3)           BYPASS 'LLT '
         L     R4,0(,R3)           GET NUMBER OF ENTRIES
         LA    R5,4(,R3)           POINT AT ENTRIES
*--------------------------------------------------------------------*
*              LOOP THRU LLT TO GET EACH DATASET                     *
*--------------------------------------------------------------------*
LOOP     DS    0H
         SLR   R2,R2
         IC    R2,0(,R5)           ENTRY LENGTH
         S     R2,=F'1'
         MVC   WREC+$DSN(0),1(R5)  MOVE IN DSN
         EX    R2,*-6               FOR REAL
*--------------------------------------------------------------------*
*              ISSUE LOCATE TO FIND VOLSER OF DATASET                *
*--------------------------------------------------------------------*
         MVI   WCAMWRK2,X'FF'
         MVC   WCAMWRK2+1(255),WCAMWRK2
         XC    WCAMLST,WCAMLST     ZERO WCAMLST
         MVC   WCAMLST(4),=XL4'44000000' LOCATE PARMS
         LA    R0,WREC+$DSN
         ST    R0,WCAMLST+4        @ OF DATASET
         LA    R0,WCAMWRK
         ST    R0,WCAMLST+12       @ OF WCAMLST WORK AREA
         SPACE 1
         LA    R1,WCAMLST
LOCATE   SVC   26                  LOCATE DATASET
         SPACE 1
         MVC   WREC+$OFF(4),=X'F0212020'
         ED    WREC+$OFF(4),WDSNUM
         MVI   WREC+$OFF,C'+'
         MVC   WREC+$VOL(6),WCAMWRK+6
         LA    R0,L'WREC
         LA    R1,WREC
         BAL   R9,PUTMSG
         LA    R5,1+44(,R5)        POINT AT NEXT ENTRY
         AP    WDSNUM,=P'1'        ADD ONE TO COUNTER
         BCT   R4,LOOP
RETURN   DS    0H
         L     R0,=A(WORKLEN)
         LR    R1,R13
         L     R13,4(,R13)
         STORAGE RELEASE,LENGTH=(0),ADDR=(1),SP=1
         RETURN (14,12),RC=0
DYNERR   DS    0H
         LA    R0,30
         LA    R1,=CL30'LNKLST04 DYNAMIC LNKLIST ERROR'
         BAL   R9,PUTMSG
         B     RETURN
*--------------------------------------------------------------------*
*              PUTMSG              BAL   R9,PUTMSG                   *
*--------------------------------------------------------------------*
PUTMSG   DS    0H
         TPUT  (1),(0),R
         MVC   WREC,BLANKS
         BR    R9
*--------------------------------------------------------------------*
*              DATA AREA                                             *
*--------------------------------------------------------------------*
         LTORG ,
$OFF     EQU   1        ---+       OFFSETS INTO WREC FOR PRINT
$VOL     EQU   6           |
$DSN     EQU   $VOL+7,44   |
$APF     EQU   $DSN+45,3   |
$SMS     EQU   $APF+4,3 <--+
BLANKS   DC    CL80' '
*--------------------------------------------------------------------*
*              DSECTS                                                *
*--------------------------------------------------------------------*
WORK     DSECT
WSAVE    DS    9D
WREC     DC    CL80' '
WDSNUM   DC    PL2'0'
WFUNCT   DC    X'0'
         DS    0D                  ALIGNMENT
WDEC     DS    2D'0'
WWDSNUM  DS    PL2'0'
WLNKNAM  DS    CL16' '             LNKLIST SET NAME
WDSNAME  DS    CL44' '
WDSNVOL  DS    CL6' '
         DS    0D                  ALIGNMENT
WCAMLST  DS    XL256'00',0D
WCAMWRK  DS    XL256'00',0D
WCAMWRK2 DS    XL256'00',0D        NEEDED FOR WCAMWRK OVERLAY
WCSVLNKX CSVDYNL MF=(L,WCSVLNK)
WCSVWORK DS    (1000)CL60
WCSVWRKL EQU   *-WCSVWORK
         DS    0D
WORKLEN  EQU   *-WORK
         PRINT NOGEN
         YREGS
         CVT   DSECT=YES
         PRINT GEN
         CSVDLAA DSECT=YES,LIST=YES
         END   ,
         PUNCH ' ENTRY LNKLIST '
         PUNCH ' ALIAS LPALIST     '
         PUNCH ' NAME  LNKLIST(R)  '
         END   ,
