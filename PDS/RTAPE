         TITLE ' TAPE UTILITY SUBROUTINES CALLABLE FROM FORTRAN'
*--------------------------------------------------------------------*
*        WRTTEN BY SAM BASS ABOUT 1974                               *
*        ORIGINALLY WRITTEN TO BE CALLED FROM FORTRAN.               *
*        THIS SUPPORTS 64K BLOCKS                                    *
*--------------------------------------------------------------------*
* CALL   RTAPE(K,BUF,N,&99,&999)       READ       TAPE
*        K   = 1 OR 2 (WHICH TAPE)
*        BUF   = INPUT ARRAY
*        N   = NUMBER OF BYTES READ   R15 = 0  GOOD READ
*        &99   = EOF LABEL            R15 = 4  EOF  READ
*        &999   = ERR EXIT LABEL      R15 = 8  ERR ON READ
* ----------------------------------------------------------
* CALL   WTAPE(K,BUF,N,&9999)          WRITE      TAPE
*        K   = 1 OR 2 (WHICH TAPE)
*        BUF   = OUTPUT ARRAY
*        N = NUMBER OF BYTES TO WRITE R15 = 0  GOOD WRITE
*        &9999  = ERR EXIT LABEL      R15 = 4  ERR ON WRITE
* ----------------------------------------------------------
* CALL   OPENT(K,L)                    OPEN       TAPE
*        K   = 1 OR 2 (WHICH TAPE)
*        L   = 1 FOR INPUT
*        L   = 2 FOR OUTPUT
* ----------------------------------------------------------
* CALL   CLOSET(K,L)                   CLOSE      TAPE
*        K   = 1 OR 2 (WHICH TAPE)
*        L   = 1 FOR INPUT
*        L   = 2 FOR OUTPUT
* ----------------------------------------------------------
* CALL   RWTAPE(K)                     REWIND     TAPE
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
* CALL   SFILE(K)                      SKIP       FILE
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
* CALL   FSREC(K,N)                    FORWARD-SPACE   RECORD
*        K   = 1 OR 2 (WHICH TAPE)
*        N   = NUMBER OF REC (INPUT)  (MUST BE A VARIABLE)
*            = NUMBER OF REC (OUTPUT) NOT PROCESSED
*              BECAUSE OF EOF
* ----------------------------------------------------------
* CALL   BSREC(K,N)                    BACKWARD-SPACE   RECORD
*        K   = 1 OR 2 (WHICH TAPE)
*        N   = NUMBER OF REC (INPUT) (MUST BE A VARIABLE)
*            = NUMBER OF REC (OUTPUT) NOT PROCESSED
*              BECAUSE OF EOF
* ----------------------------------------------------------
* CALL   FSFILE(K)                     FORWARD-SPACE   FILE
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
* CALL   BSFILE(K)                     BACKWARD-SPACE   FILE
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
* CALL   WTMARK(K)                     WRITE TAPE MARK
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
*
*
*        IF K = 1 THEN  THE SUBROUTINES DOES ITS PROCESSING FROM
*              DDNAME = "SYSUT1"      EX.
*
*//GO.SYSUT1 DD VOL=SER=SYSUT1,UNIT=TAPE,DISP=OLD,LABEL=(1,NL)
*
*        IF K = 2 THEN  THE SUBROUTINES DOES ITS PROCESSING FROM
*              DDNAME = "SYSUT2"      EX.
*
*//GO.SYSUT2 DD VOL=SER=SYSUT2,UNIT=TAPE,DISP=OLD,LABEL=(1,NL)
         EJECT
         MACRO
&LABEL   EEXCP &CMD
&LABEL   ST    5,GCCW              STORE IN DATA AREA ADDR.
         MVI   GCCW,&CMD           MOVE IN COMMAND BYTE
         STH   6,GCCW+6            MOVE IN NUMBER OF BYTES
         TM     48(2),X'10'        IS TAPE OPEN?
         BO    *+14                BIF YES
         LA    1,TOPENP               NO ...
         LA    15,OPENT            ADDR OF OPENT
         BALR  14,15               GO OPEN IT
*        EXCP  WIOB
         EXCP  WIOB                DO IT
         XC    ECB,ECB
*        WAIT  ECB=ECB
         WAIT  ECB=ECB             WAIT FOR COMPLETION
         LA    15,0                SET RETURN CODE
         MEND
         MACRO
&LABEL   SAVEIT &ENTRY
&LABEL   SAVE  (14,12),T,&ENTRY
         BALR  10,0
         USING *,10
         AIF   ('&ENTRY' NE 'OPENT').NOPENT
         ST    13,SAVEOT+4
         LA    5,SAVEOT
         AGO   .GOPENT
.NOPENT  ANOP
         ST    13,SAVE+4
         LA    5,SAVE
.GOPENT  ANOP
         ST    5,8(13)
         LR    13,5
         MEND
         MACRO
&LABEL   RESTORE
&LABEL   L     13,SAVE+4
         L     14,12(13)
         LM    0,12,20(13)
         MVI   12(13),X'FF'
         MEND
         MACRO
&LABEL   TAPEDCB
&LABEL   L     5,0(2)
         ST    5,TT
         LA    2,SYSUT1
         C     5,F1
         BE    *+8
         LA    2,SYSUT2
         ST    2,DCBA
         XC    WIOB(WIOBLEN),WIOB                               SJBA
         MVC   WIOB+21(3),DCBA+1   IOBECBPB
         MVI   WIOB,X'42'          IOBCFLG1 UN RELATED FLAG
         MVC   WIOB+5(3),ECBA      IOBCECB+1
         MVC   WIOB+17(3),GCCWA    ADDR OF CHANNEL PROGRAM
         XC    ECB(4),ECB
         MEND
         EJECT
RTAPE    CSECT
* CALL   RTAPE(K,BUF,N,&99,&999)       READ       TAPE
*        K   = 1 OR 2 (WHICH TAPE)
*        BUF   = INPUT ARRAY
*        N   = NUMBER OF BYTES READ   R15 = 0  GOOD READ
*        &99   = EOF LABEL            R15 = 4  EOF  READ
*        &999   = ERR EXIT LABEL      R15 = 8  ERR ON READ
* ----------------------------------------------------------
         ENTRY WTAPE,OPENT,CLOSET,RWTAPE,SFILE,FSREC
         ENTRY BSREC,FSFILE,BSFILE,WTMARK
         SAVEIT RTAPE
         LM    R2,R4,0(R1)
         TAPEDCB
         LR    R5,R3
         L     R6,F64K             64K-1 LENGTH
         MVI   GCCW+4,X'20'        TURN OFF CHAINING
         EEXCP X'02'               READ IT
         MVI   GCCW+4,X'60'        TURN ON  CHAINING
         TM    ECB,X'7F'           ERR? X'7F' = GOOD            SJB2
         BO    RDOK                BIF  YES                     SJB2
         TM    ECB,X'41'           ERR? CHANNEL PROGRAM ERROR?  SJB2
         BNO   RDERR                NO, NOT TAPEMARK            SJB2
         TM    WIOB+12,X'02' @@    ERROR
         BO    RDERR                YES, ERROR
         TM    WIOB+12,X'0D' @@    EOF?
         BO    RDEOF                YES, EOF
         B     RDERR                NO, ERROR
RDOK     DS    0H
         LH    R6,WIOB+14          RESIDUAL
         SLL   R6,16               CLEAR HIGH ORDER HALF WORD
         SRL   R6,16               ...
         L     R7,F64K             ORIGINAL BYTE  COUNT
         SR    R7,R6               ORIGINAL - RESIDUAL
         ST    R7,0(R4)            AND SAVE IT
         B     RDRET
RDEOF    LA    R15,4
         B     *+8
RDERR    LA    R15,8
         LA    R7,0
         ST    R7,0(4)
RDRET    RESTORE
         BR    14
         EJECT
WTAPE    SAVEIT  WTAPE
* CALL   WTAPE(K,BUF,N,&9999)          WRITE      TAPE
*        K   = 1 OR 2 (WHICH TAPE)
*        BUF   = OUTPUT ARRAY
*        N = NUMBER OF BYTES TO WRITE R15 = 0  GOOD WRITE
*        &9999  = ERR EXIT LABEL      R15 = 4  ERR ON WRITE
* ----------------------------------------------------------
         LM    2,4,0(1)
         L     4,0(4)
         TAPEDCB
         C     5,F1                IS THIS SYSUT1                   SJB
         BNE   WDUMMT2             YES                              SJB
         TM    FLAG,$NULL1         IS THIS A DD DUMMY               SJB
         BO    WDUMM1                                               SJB
         B     WNOTDUM                                              SJB
WDUMMT2  DS    0H                                                   SJB
         TM    FLAG,$NULL2         IS THIS A DD DUMMY               SJB
         BO    WDUMM1                                               SJB
WNOTDUM  DS    0H                                                   SJB
         LA    5,2                 SET FOR OUTPUT OPEN
         ST    5,TT+4
         LR    5,3
         LR    6,4                 NUMBER OF BYTES TO WRITE
         EEXCP X'01'               WRITE IT
         TM    ECB,X'7F'           IS WRITE GOOD
         BO    *+8                 YES
         LA    15,4
WDUMM1   LA    5,1                 RESET OPEN FLAG FOR INPUT
         ST    5,TT+4
         RESTORE
         BR    14
         EJECT
RWTAPE   SAVEIT RWTAPE
* CALL   RWTAPE(K)                     REWIND     TAPE
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
         L     2,0(1)
         TAPEDCB
         LA    5,DUM
         LA    6,1
         EEXCP X'07'               REWIND TAPE
         RESTORE
         BR    14
         EJECT
FSREC    SAVEIT FSREC
* CALL   FSREC(K,N)                    FORWARD-SPACE   RECORD
*        K   = 1 OR 2 (WHICH TAPE)
*        N   = NUMBER OF REC (INPUT)  (MUST BE A VARIABLE)
*            = NUMBER OF REC (OUTPUT) NOT PROCESSED
*              BECAUSE OF EOF
* ----------------------------------------------------------
         LM    2,3,0(1)
         L     4,0(3)
         TAPEDCB
         C     4,F0
         BNH   FSRET
         LA    5,DUM
         LA    6,1
FSREE    EEXCP X'37'               FOWARD SPACE REC
         TM    WIOB+12,X'03'       EOF?
         BM    *+8
         BCT   4,FSREE             DO N TIMES
         ST    4,0(3)
FSRET    RESTORE
         BR    14
         EJECT
BSREC    SAVEIT BSREC
* CALL   BSREC(K,N)                    BACKWARD-SPACE   RECORD
*        K   = 1 OR 2 (WHICH TAPE)
*        N   = NUMBER OF REC (INPUT) (MUST BE A VARIABLE)
*            = NUMBER OF REC (OUTPUT) NOT PROCESSED
*              BECAUSE OF EOF
* ----------------------------------------------------------
         LM    2,3,0(1)
         L     4,0(3)
         TAPEDCB
         C     4,F0
         BNH   BSRET
         LA    5,DUM
         LA    6,1
BSREE    EEXCP X'27'               BACKWARD SPACE REC
         TM    WIOB+12,X'03'       EOF?
         BM    *+8
         BCT   4,BSREE             DO N TIMES
         ST    4,0(3)
BSRET    RESTORE
         BR    14
         EJECT
FSFILE SAVEIT FSFILE
* CALL   FSFILE(K)                     FORWARD-SPACE   FILE
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
SFILE    EQU   FSFILE
         L     2,0(1)
         TAPEDCB
         LA    5,DUM
         LA    6,1
         EEXCP X'3F'               FOWARD SPACE FILE
         RESTORE
         BR    14
         EJECT
BSFILE   SAVEIT BSFILE
* CALL   BSFILE(K)                     BACKWARD-SPACE   FILE
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
         L     2,0(1)
         TAPEDCB
         LA    5,DUM
         LA    6,1
         EEXCP X'2F'               BACKWARD SPACE FILE
         RESTORE
         BR    14
         EJECT
WTMARK   SAVEIT WTMARK
* CALL   WTMARK(K)                     WRITE TAPE MARK
*        K   = 1 OR 2 (WHICH TAPE)
* ----------------------------------------------------------
         L     2,0(1)
         TAPEDCB
         C     5,F1                IS THIS SYSUT1                   SJB
         BNE   WTDUMM2             YES                              SJB
         TM    FLAG,$NULL1         IS THIS A DD DUMMY               SJB
         BO    WTEOF                                                SJB
         B     WTNOTDUM                                             SJB
WTDUMM2  DS    0H                                                   SJB
         TM    FLAG,$NULL2         IS THIS A DD DUMMY               SJB
         BO    WTEOF                                                SJB
WTNOTDUM DS    0H                                                   SJB
         LA    5,DUM
         LA    6,1
         EEXCP X'1F'               WRITE TAPE MARK
WTEOF    RESTORE
         BR    14
         EJECT
OPENT    SAVEIT OPENT
* CALL   OPENT(K,L)                    OPEN       TAPE
*        K   = 1 OR 2 (WHICH TAPE)
*        L   = 1 FOR INPUT
*        L   = 2 FOR OUTPUT
* ----------------------------------------------------------
         LM    2,3,0(1)
         TAPEDCB
         MVI   WIOB,X'42'          TURN ON UN RELATED FLAG
         MVC   WIOB+5(3),ECBA
         MVC   WIOB+17(3),GCCWA    ADDR OF CHANNEL PROGRAM
         LA    5,1
         STH   5,WIOB+28           BLOCK INCREMENT
         L     4,0(3)
         C     4,F1
         BNE   OT2
         DEVTYPE CSYSUT1,DEVD1                                      SJB
         CLC   DEVD1,=F'0'               IS A DD DUMMY              SJB
         BNE   XOPEN1                                               SJB
         OI    FLAG,$NULL1                                          SJB
         B     OTRET                                                SJB
XOPEN1   DS    0H                                                   SJB
         OPEN  ((2),INPUT)
         B     OTRET
OT2      DS    0H                                                   SJB
         DEVTYPE CSYSUT2,DEVD2                                      SJB
         CLC   DEVD2,=F'0'               IS A DD DUMMY              SJB
         BNE   XOPEN2                                               SJB
         OI    FLAG,$NULL2                                          SJB
         B     OTRET                                                SJB
XOPEN2   DS    0H                                                   SJB
         OPEN  ((2),OUTPUT)
OTRET    L     13,SAVEOT+4
         RETURN (14,12),RC=0
         EJECT
CLOSET   SAVEIT CLOSET
* CALL   CLOSET(K,L)                   CLOSE      TAPE
*        K   = 1 OR 2 (WHICH TAPE)
*        L   = 1 FOR INPUT
*        L   = 2 FOR OUTPUT
* ----------------------------------------------------------
         L     2,0(1)
         TAPEDCB
         CLOSE ((2),REWIND)
         RESTORE
         LA    15,0
         BR    14
         EJECT
WIOB     DC    4D'0'
WIOBLEN  EQU   *-WIOB                                           SJBA
GCCW     CCW   X'03',DUM,X'60',1
         CCW   X'03',DUM,X'20',1   DUMMY
SAVE     DS    18F
SAVEOT   DS    18F
F0       DC    F'0'
F1       DC    F'1'
F32760   DC    F'32760'
FFFF     DC    X'FFFF'
F64K     DC    A(X'0000FFFF')
TOPENP   DC    A(TT)
         DC    A(TT+4)
TT       DC    F'1'
         DC    F'1'
DCBA     DC    F'0'
ECB      DC    F'0'
ECBA     DC    AL3(ECB)
GCCWA    DC    AL3(GCCW)
DUM      DS    C
FLAG     DC    X'00'                                                SJB
$NULL1   EQU   X'80'                                                SJB
$NULL2   EQU   X'40'                                                SJB
CSYSUT1  DC    CL8'SYSUT1'                                          SJB
CSYSUT2  DC    CL8'SYSUT2'                                          SJB
DEVD1    DC    F'0'                                                 SJB
DEVD2    DC    F'0'                                                 SJB
XJFCB1   DS    0F                                                   SJB
         DC    X'87'                                                SJB
         DC    AL3(JFCB1)                                           SJB
XJFCB2   DS    0F                                                   SJB
         DC    X'87'                                                SJB
         DC    AL3(JFCB2)                                           SJB
JFCB1    DC    0F'0',CL176' '                                       SJB
JFCB2    DC    0F'0',CL176' '                                       SJB
         EJECT
SYSUT1   DCB   DDNAME=SYSUT1,DSORG=PS,RECFM=U,BUFNO=2,                 X
               OPTCD=Z,EXLST=XJFCB1,                                   X
               DEVD=TA,EODAD=RDEOF,MACRF=(E),BUFOFF=0
         EJECT
SYSUT2   DCB   DDNAME=SYSUT2,DSORG=PS,RECFM=U,BUFNO=2,                 X
               OPTCD=Z,EXLST=XJFCB2,                                   X
               DEVD=TA,EODAD=RDEOF,MACRF=(E),BUFOFF=0
         YREGS ,                                                    SJB
         IEZIOB ,
         END
