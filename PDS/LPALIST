          PUNCH ' ORDER LPALIST'
          PUNCH ' ENTRY LPALIST'
***********************************************************************
* WRITTEN BY K.M. (SAM) BASS (SBASS,SJB,KBASS,KMB)                    *
***********************************************************************
*--------------------------------------------------------------------*
*                                                                    *
*              PROGRAM TO LIST LPALIST DATASET AND ITS VOLSER        *
*                                                                    *
*--------------------------------------------------------------------*
*                                                                    *
*--------------------------------------------------------------------*
*                                                                    *
*                                                                    *
* SBASS  2013/13/18 CHANGED DISPLAY TO INCLUDE VOLSER FROM LPAT PER  *
*        CODE FROM SAM GOLOB (2013/12/18)                            *
* SGOLOB 2013/13/18 ADDED THE APUT(PUTLINE) ROUTINES INSTEAD OF TPUT *
*                                                                    *
*              *** LIST OF LPA DATASETS     ***                      *
*              *** MISMATCH V VOLSER IF "*" ***                      *
*                NUM VOLLPA * VOLCAT DSNAME                          *
*               +000 S1BR11   S1BR11 SYS1.LPALIB                     *
*               +001 S1BR11   S1BR11 SYS1.SORTLPA                    *
*               +002 S1BR11   S1BR11 SYS1.SICELPA                    *
*                                                                    *
*                                                                    *
*--------------------------------------------------------------------*
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
*--------------------------------------------------------------------*
*@@            LPALIST CODE                                          *
*--------------------------------------------------------------------*
LPALIST  CSECT
LPALIST  AMODE 31
LPALIST  RMODE 24
         SAVE  (14,12),T,'LPALIST_&SYSDATC._&SYSTIME.'
         LR    R12,R15
         USING LPALIST,R12
         LR    R11,R1              SAVE PARM ADDR (NOT USED)
*--------------------------------------------------------------------*
*              GET DYNAMIC STORAGE                                   *
*--------------------------------------------------------------------*
         GETMAIN R,LV=LWORK,SP=1
         LR    R2,R1               SAVE STORAGE ADDR
         LR    R15,R0
         LR    R14,R1
         SLR   R1,R1
         MVCL  R14,R0              ZERO GETMAIN
*
         ST    R13,4(,R2)           SET PREV SAVE
         ST    R2,8(,R13)           SET NEXT SAVE
         LR    R13,R2
         USING WORK,R13
*--------------------------------------------------------------------*
*              GET CVT                                               *
*--------------------------------------------------------------------*
         L     R2,X'10'            CVT
         USING CVT,R2
         L     R2,CVTSMEXT
         DROP  R2
         USING CVTVSTGX,R2
         L     R3,CVTEPLPS         LPALIST TABLE POINTER
         DROP  R2
         CLC   =C'LPAT',0(R3)      IS IT REALLY LPA TABLE
         BE    LLTOK
         APUT  =CL60'*** LPA LIST TABLE INVALID ***',60
         B     RETURN
LLTOK    DS    0H
         SPACE 1
         APUT  =CL60'*** LIST OF LPA DATASETS     ***',60
         APUT  =CL60'*** MISMATCH V VOLSER IF "*" ***',60
         APUT  =CL60'  NUM VOLLPA * VOLCAT DSNAME',60
         ZAP   DSNNUM,=P'0'        ZERO COUNTER
         LA    R3,4(,R3)           BYPASS 'LPAT'
         L     R4,0(,R3)           GET NUMBER OF ENTRIES
         LA    R5,4(,R3)           POINT AT ENTRIES
*--------------------------------------------------------------------*
*        BEGIN FROM SAM GOLOB GET  VOLSER FROM LPAT                  *
*--------------------------------------------------------------------*
         XR    R6,R6               CLEAR REGISTER
         XR    R7,R7               CLEAR REGISTER
         LR    R7,R4               LOAD NUMBER OF ENTRIES TO MULTIPLY
         M     R6,=F'45'           MULTIPLY BY SIZE OF EACH ENTRY
         AR    R7,R5               POINT TO VOLSER TABLE THAT IS
*                                    PAST THE DSN TABLE IN LPAT.
*--------------------------------------------------------------------*
*        END   FROM SAM GOLOB GET  VOLSER FROM LPAT                  *
*--------------------------------------------------------------------*
*--------------------------------------------------------------------*
*              LOOP THRU LLT TO GET EACH DATASET                     *
*--------------------------------------------------------------------*
LOOP     DS    0H
         SLR   R2,R2
         IC    R2,0(,R5)           ENTRY LENGTH
         MVC   REC,BLANKS
         S     R2,=F'1'
         MVC   REC+$DSN(0),1(R5)   MOVE IN DSN
         EX    R2,*-6               FOR REAL
         MVC   REC+$VOL1(6),0(R7)  MOVE IN VOLSER FROM 2ND TABL GOLOB
*--------------------------------------------------------------------*
*              ISSUE LOCATE TO FIND VOLSER OF DATASET                *
*--------------------------------------------------------------------*
         MVI   CAMWORK2,X'FF'
         MVC   CAMWORK2+1(255),CAMWORK2
         XC    CAMLIST,CAMLIST     ZERO CAMLIST
         MVC   CAMLIST(4),=XL4'44000000' LOCATE PARMS
         LA    R0,REC+$DSN
         ST    R0,CAMLIST+4        @ OF DATASET
         LA    R0,CAMWORK
         ST    R0,CAMLIST+12       @ OF CAMLIST WORK AREA
         SPACE 1
         LA    R1,CAMLIST
LOCATE   SVC   26                  LOCATE DATASET
         SPACE 1
         MVC   REC+$OFF(4),=X'F0212020'
         ED    REC+$OFF(4),DSNNUM
         MVI   REC+$OFF,C'+'
         MVC   REC+$VOL2(6),CAMWORK+6
*
         CLC   REC+$VOL1(6),REC+$VOL2
         BE    VOLCHK1
         MVI   REC+$VOL1+7,C'*'
VOLCHK1  DS    0H
*
         APUT  REC,L'REC
         LA    R5,1+44(,R5)        POINT AT NEXT ENTRY
         LA    R7,6(,R7)           POINT AT NEXT VOLSER         SGOLOB
         AP    DSNNUM,=P'1'
         BCT   R4,LOOP
RETURN   DS    0H
         LR    R3,R15
         LR    R10,R13
         L     R13,4(,R13)
         FREEMAIN R,LV=LWORK,A=(10),SP=1
         LR    R15,R3
         RETURN (14,12),RC=(15)
*--------------------------------------------------------------------*
*              DATA AREA                                             *
*--------------------------------------------------------------------*
         LTORG ,
$OFF     EQU   1
$VOL1    EQU   6
$VOL2    EQU   $VOL1+9
$DSN     EQU   $VOL2+7
BLANKS   DC    CL80' '
*--------------------------------------------------------------------*
*              DSECTS                                                *
*--------------------------------------------------------------------*
WORK     DSECT
WSAVE    DC    9D'0'
CAMLIST  DC    XL256'0'
         DS    0D                  ALIGNMENT
CAMWORK  DC    XL256'00'
CAMWORK2 DC    XL256'00'
         DS    0D
REC      DC    CL80' '
DSNNUM   DC    PL2'0'
         DS    0D                  ALIGNMENT
LWORK    EQU   *-WORK
         PRINT NOGEN
         YREGS
         CVT   DSECT=YES
         END   LPALIST
*--------------------------------------------------------------------*
*@@            EPUTL ROUTINES                                        *
*--------------------------------------------------------------------*
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         DROP  ,
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
