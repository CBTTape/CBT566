*--------------------------------------------------------------------*
*                                                                    *
*              THIS PROGRAM REBUILDS THE APFLIST BY READING          *
*              //APFLIST   DD  DISP=SHR,DSN=SYS1.PARMLIB(IEAAPF**)   *
*                                                                    *
*              THIS IS USED ONLY WHEN SOMEBODY CLOBBERS THE APFLIST  *
*              THIS ONLY WORKS WITH STATIC APF LIST                  *
*                                   ------ --- ----                  *
*        NON-REENTRANT                                               *
*        AMODE=31, RMODE=24 (FOR THOSE SYSTEMS WITH MVS XA)          *
*                                                                    *
*        R7 = NEW SQA APF LIST ADDRESS                               *
*        R8 = APF TOTAL LENGTH (TO GETMAIN)                          *
*        R9 = APF INTERNAL TABLE                                     *
*        R10= APF NUMBER OF ENTIES                                   *
*                                                                    *
*--------------------------------------------------------------------*
KMBAPFBD CSECT
KMBAPFBD AMODE 31
KMBAPFBD RMODE 24
         LR    R12,R15
         USING KMBAPFBD,R12
         ST    R13,SAVE+4
         LA    R13,SAVE
         LA    R13,SAVE+8
         OPEN  (APFLIST,(INPUT))
         TM    APFLIST+X'30',X'10' DID IT OPEN
         BZ    APFERR01             NO, ERROR
         XC    APFDATA(256),APFDATA ZERO OUT FIRST 256 BYTES
         LA    R9,APFDATA
         SPACE 3
         USING APFDSECT,R9
         L     R1,X'10'
         USING CVT,R1
         ICM   R15,15,X'30'(R1)    CVTSYSAD
         BZ    SETUP800
         MVC   VOLIPL,X'1C'(R15)   MOVE IN SYSRES VOLSER
         DROP  R1
SETUP800 DS    0H
         LA    R10,0               # OF ENTRIES
         LA    R8,2                TOTAL LENGTH
READ     DS    0H
*--------------------------------------------------------------------*
*              PROCESS SPECIAL APF TABLE                             *
*--------------------------------------------------------------------*
         C     R10,=A(APFTBL#-1)   END OF TABLE
         BH    READ0050             YES, TO APFLIST
         LA    R1,APFTBL            NO, GET TABLE
         LR    R0,R10              ENTRIES
         MH    R0,=H'80'           TIMES ENTRYLENGTH
         AR    R1,R0               ADD TO APFTBL ADDR
         MVC   44(6,R1),VOLIPL     MOVE IN IPL VOLSER
         B     READ0060
READ0050 DS    0H
*--------------------------------------------------------------------*
*              PROCESS APFLIST                                       *
*--------------------------------------------------------------------*
         GET   APFLIST
READ0060 DS    0H
         ST    R1,CARDADDR
         LR    R2,R1
         LA    R0,71(,R1)          COLUMN 72
         ST    R0,CARDEND          SAVE IT
         LA    R10,1(,R10)          ENTRY NUMBER
         LA    R9,APFXLEN(,R9)     POINT AT NEXT TABLE ENTRY
         MVI   APFLEN,0
READ0100 DS    0H                  GET DSNAME
         MVC   APFDSN,BLANKS
         L     R0,CARDEND          PASS TERM ADDR
         LR    R1,R2               PASS SCAN START ADDR
         BAL   R14,SCAN
         LTR   R15,R15
         BNZ   APFERR02            BAD DSN
         LR    R4,R0               LENGTH
         LR    R1,R1               DSNAME ADDR
         LA    R2,0(R1,R4)         POINT PASSED DSN
         BCTR  R4,0
         EX    R4,MOVEDSN
         LA    R4,1+6(,R4)         DSNLEN+VOLLEN
         STC   R4,APFLEN
         LA    R8,1(R4,R8)         ADD TO TOTAL LENGTH
         SPACE 1
READ0200 DS    0H                  SCAN FOR VOLSER
         MVC   APFVOL,BLANKS
         L     R0,CARDEND          PASS TERM ADDR
         LR    R1,R2               PASS SCAN START ADDR
         BAL   R14,SCAN
         LTR   R15,R15
         BNZ   APFERR03            BAD VOLSER
         LR    R4,R0               LENGTH
         LR    R1,R1               VOLSER ADDR
         BCTR  R4,0                -1
         EX    R4,MOVEVOL
         SPACE 3
         B     READ
MOVEDSN  MVC   APFDSN(*-*),0(R1)
MOVEVOL  MVC   APFVOL(*-*),0(R1)
*--------------------------------------------------------------------*
*                                                                    *
*              BUILD TABLE IN SQA                                    *
*                                                                    *
*--------------------------------------------------------------------*
BUILD    DS    0H
         LA    R1,=C'AUTH'
         SVC   245
         MODESET KEY=ZERO,MODE=SUP
         GETMAIN RU,SP=245,LV=(R8)
         LR    R7,R1               COPY ADDR
         STH   R10,0(,R1)          SAVE # OF APF ENTRIES
         LA    R1,2(,R1)           POINT PASSED # OF ENTRIES
         LA    R9,APFDATA
         B     BLD0200
BLD0100  DS    0H
         LA    R9,APFXLEN(,R9)     NEXT ENTRY IN TABLE
         CLI   0(R9),0             IF LENGHT = 0 THEN DONE.
         BZ    BLD0300              YEP
BLD0200  DS    0H
         SR    R2,R2
         IC    R2,APFLEN           APFLEN-1
BLDMVC   MVC   0(*-*,R1),APFLEN    MOVE ENTRY (LEN,DSN,VOL)
         EX    R2,BLDMVC
         LA    R1,1(R1,R2)         INCR TO NEXT SLOT IN SQA
         B     BLD0100
BLD0300  DS    0H
         SPACE 2
         L     R1,X'10'
         USING CVT,R1
         L     R2,CVTAUTHL         OLD NAME
ABEND    DS    0H
         ST    R7,CVTAUTHL         @ OF APF TABLE
         DROP  R1
         MODESET KEY=NZERO,MODE=PROB
         LA    R1,=C'NONE'
         SVC   245
         WTO   'APFB000I *** APF TABLE REBUILT ***',                   X
               ROUTCDE=11,DESC=2
         ST    R2,DEC
         UNPK  BLDWTO2+30(9),DEC(5)
         TR    BLDWTO2+30(8),TRANS-240
         MVI   BLDWTO2+38,C' '
BLDWTO2  WTO   'APFB000I *** OLD ADDR=XXXXXXXX ***',                   X
               ROUTCDE=11,DESC=2
         ST    R7,DEC
         UNPK  BLDWTO3+30(9),DEC(5)
         TR    BLDWTO3+30(8),TRANS-240
         MVI   BLDWTO3+38,C' '
BLDWTO3  WTO   'APFB000I *** NEW ADDR=XXXXXXXX ***',                   X
               ROUTCDE=11,DESC=2
         $EXIT RC=0
APFRC08  DS    0H
         $EXIT RC=8
*--------------------------------------------------------------------*
*              ERROR EXITS                                           *
*--------------------------------------------------------------------*
APFERR01 DS    0H
         WTO   'APFB001E APFLIST OPEN ERROR',                          X
               ROUTCDE=11,DESC=2
         B     APFRC08
APFERR02 DS    0H
         WTO   'APFB002E BAD DSNAME ENTRY IN IEAAPF** ON RECORD:',     X
               ROUTCDE=11,DESC=2
         L     R1,CARDADDR
         MVC   APFCARD+8(80),0(R1)
         WTO   ,MF=(E,APFCARD)
         B     APFRC08
APFERR03 DS    0H
         WTO   'APFB003E BAD VOLSER ENTRY IN IEAAPF** ON RECORD:',     X
               ROUTCDE=11,DESC=2
         L     R1,CARDADDR
         MVC   APFCARD+8(80),0(R1)
         WTO   ,MF=(E,APFCARD)
         B     APFRC08
APFCARD  WTO   '0123456789012345678901234567890123456789012345678901234X
               5678901234567890123456789          ',                   X
               ROUTCDE=11,DESC=2,MF=L
         B     APFRC08
         EJECT ,
*--------------------------------------------------------------------*
*              SCAN FOR DATA       BAL   R14,SCAN                    *
*                 INPUT            R0 = SCAN ENDING ADDR             *
*                                  R1 = SCAN ADDR                    *
*                 OUTPUT           R0 = SCAN LENGTH                  *
*                                  R1 = SCAN BEGINNING ADDR          *
*--------------------------------------------------------------------*
SCAN     DS    0H
         LR    R15,R1              SAVE BEGINNING ADDR
         SPACE 1
SCAN0100 DS    0H                  SCAN FOR NONBLANK
         CLI   0(R1),C' '          IS IT BLANK
         BNE   SCAN0180             NO, NEXT SCAN
         LA    R1,1(,R1)           NEXT CHAR.
         CR    R1,R0               PASSED END
         BH    SCANRC08             YES, ERROR
         B     SCAN0100            LOOP
         SPACE 1
SCAN0180 DS    0H                  SCAN FOR BLANK OR COMMA
         LR    R15,R1              SAVE 1ST NONBLANK ADDR
SCAN0200 DS    0H                  SCAN FOR BLANK OR COMMA
         SPACE 1
         CLI   0(R1),C' '          TERMINATOR
         BE    SCAN0280             YES
         CLI   0(R1),C','          TERMINATOR
         BE    SCAN0280             YES
         LA    R1,1(,R1)           NEXT CHAR.
         CR    R1,R0               PASSED END
         BH    SCANRC08             YES, ERROR
         B     SCAN0200
SCAN0280 DS    0H
         SPACE 1
SCAN0300 DS    0H
         LR    R0,R1
         SR    R0,R15              LENGTH
         BZ    SCANRC08             ERROR IF <= 0
         LR    R1,R15              BEGINNING ADDR
         LA    R15,0               PASSED PREFIX
         BR    R14
SCANRC08 DS    0H
         LA    R15,8               ERROR
         BR    R14
         SPACE 2
APFTBL   DS    0H
         DC    CL44'SYS1.LINKLIB',CL6'******',CL30' '
         DC    CL44'SYS1.SVCLIB ',CL6'******',CL30' '
APFTBLND EQU   *
APFTBL#  EQU   (APFTBLND-APFTBL)/80
         SPACE 2
DEC      DC    2D'0'
CARDADDR DC    A(0)
CARDEND  DC    A(0)
TRANS    DC    C'0123456789ABCDEF'
VOLIPL   DC    CL6' '
BLANKS   DC    CL72' '
APFLIST  DCB   DDNAME=APFLIST,DSORG=PS,RECFM=FB,LRECL=80,              X
               EODAD=BUILD,MACRF=(GL)
SAVE     DS    18F
         LTORG ,
APFDATA  DS    512XL(1+44+6)'00'
         LTORG ,
APFDSECT DSECT ,
APFLEN   DS    X
APFDSN   DS    CL44
APFVOL   DS    CL6
         DS    0F
APFXLEN  EQU   *-APFDSECT
         SPACE 3
         CVT   DSECT=YES,LIST=NO
         YREGS ,
         END   ,
