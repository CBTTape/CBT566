PROC 0 DEBUG LIST DUMP INIT
GLOBAL A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12,A13,A14,A15,A16,A17,A18,+
       B1,B2,B3,B4,B5,B6,B7,B8,B9,B10,B11,B12,B13,B14,B15,B16,B17,B18
CONTROL MAIN,NOFLUSH,MSG,PROMPT
CONTROL END(ENDO)   PROMPT NOLIST NOCONLIST NOSYMLIST
  IF &DEBUG = DEBUG THEN CONTROL LIST SYMLIST CONLIST PROMPT MSG
  IF &LIST  = LIST  THEN CONTROL LIST
 /*  THIS CLIST ORIGINALLY WAS WRITTEN TO ALLOW THE USER TO SEE THE   */
 /*  RETURN CODE FOR THE LAST COMMAND ISSUED IN TSO.  THIS CLIST      */
 /*  HAS BEEN ENHANCED SINCE ITS BEGINNING.  BELOW IS A LIST OF       */
 /*  THE SUB-COMMANDS SUPPORTED.                                      */
 /*                                                                   */
 /*COMMAND  FUNCTION                                                  */
 /*   .     REDISPLAY THE LAST COMMAND EXECUTED                       */
 /*   .X    EXECUTE   THE COMMAND 'X' AND DO NOT SAVE AS LAST COMMAND */
 /*   ,X    CONCAT    'X' TO THE TO THE LAST COMMAND                  */
 /*   /     ERASE     THE SCREEN                                      */
 /*   /X    ERASE     AND EXECUTE THE COMMAND 'X'                     */
 /*   //    TERMINATE $CMD                                            */
 /*   ..    INTERRUPT $CMD (UNDER SPF, $CMD WILL STILL BE ACTIVE.     */
 /*                                                                   */
  ERROR GOTO EXITS
  IF &INIT = INIT THEN +
    DO
      SMPUT /C.W H(I) O(1)/
/*    %SMTIME 8                                                       */
    ENDO
/*TERM CL(/)                                                          */
/*ERASE                                                               */
  ERROR OFF
  FREE ATTR(SYSINYY)
  ATTR SYSINYY RECFM(V B) LRECL(255) BLKSIZE(3120)
  ALLOC F(SYSINXX) DA(*) REUSE USING(SYSINYY)
  OPENFILE SYSINXX
  ERROR GOTO EXITS
  SET &OLD = &NRSTR(/ST)
  SET &NEW =
  SET &LASTCC =
  SET &SAVE = 0
  SET &CONT = NO
  SET &AMP = &&
  WRITE ==>> ENTER // TO TERMINATE
LUUP: +
  WRITE ==>> ENTER COMMAND
LOOP: +
  SET &INPUT =
  GETFILE SYSINXX
  /*  CHECK TO SEE IF IT IS A REDISPLAY                          */
  IF &NRSTR(&SYSINXX) = &NRSTR(.) THEN +
    DO
      WRITE &NRSTR(&OLD)&STR(           /*)
      GOTO LUUP
    ENDO
  /*  CHECK TO SEE IF TO TERMINATE                               */
  IF &NRSTR(&SYSINXX) = &NRSTR(//) THEN GOTO EXITS
  /*  CHECK TO SEE IF IT IS NULL                                 */
  IF &NRSTR(&SYSINXX) = THEN +
    SET &INPUT = &NRSTR(&OLD)
  ELSE +
    SET &INPUT = &NRSTR(&SYSINXX)
  /*  CHECK TO SEE IF IT IS NULL LINE IS TO BE ISSUED            */
  IF &NRSTR(&SYSINXX) = ; THEN +
    DO
      SET &NEW   =
      GOTO CHK
    ENDO
  ELSE   /* NOTHING */
CHK0: +
  IF &LENGTH(&NRSTR(&SYSINXX)) >= 1 THEN +
    DO
      IF &NRSTR(&SYSINXX) = &NRSTR(>) THEN +
        GOTO LUUP
      IF &NRSTR(&SYSINXX) < &NRSTR( ) THEN +
        GOTO LUUP
    ENDO
  SET &LEN = &LENGTH(&NRSTR(&INPUT))
  IF &LEN >= 1 THEN +
    DO
      IF &SUBSTR(&LEN:&LEN,&NRSTR(&INPUT)) = &NRSTR(-) && +
         &LEN > 1 THEN +
        DO
          IF &CONT = YES THEN +
            SET &NEW = &NRSTR(&NEW)&SUBSTR(1:&LEN-1,&NRSTR(&INPUT))
          ELSE +
            SET &NEW = &SUBSTR(1:&LEN-1,&NRSTR(&INPUT))
          SET &CONT = YES
          GOTO LOOP
        ENDO
      ELSE +
        IF &CONT = YES THEN +
          DO
            SET &NEW = &NRSTR(&NEW)&SUBSTR(1:&LEN,&NRSTR(&INPUT))
            SET &CONT = NO
            SET &INPUT = &NRSTR(&NEW)
            SET &LEN = &LENGTH(&NRSTR(&INPUT))
          ENDO
        ELSE +
          SET &NEW = &NRSTR(&INPUT)
      IF &SUBSTR(1:1,&NRSTR(&NEW)) = &NRSTR(,) THEN +
        DO
          IF &LEN = 1 THEN +
            SET &NEW = &NRSTR(&OLD)
          ELSE +
            SET &NEW = &NRSTR(&OLD)&SUBSTR(2:&LEN,&NRSTR(&INPUT))
          SET &LEN = &LENGTH(&NRSTR(&NEW))
          SET &INPUT = &NRSTR(&NEW)
        ENDO
        ELSE   /* NOTHING */
        IF &SUBSTR(1:1,&NRSTR(&NEW)) = &NRSTR(/) THEN +
          DO
            ERASE
            IF &LEN = 1 THEN GOTO LUUP
            SET &ERASE = 1
            SET &NEW = &SUBSTR(2:&LEN,&NRSTR(&NEW))
            SET &LEN = &LEN - 1
          ENDO
        ELSE   /* NOTHING */
      IF &SUBSTR(1:1,&NRSTR(&NEW)) = &NRSTR(.) THEN +
        DO
          SET &SAVE = 0
          SET &NEW = &SUBSTR(2:&LEN,&NRSTR(&NEW))
          SET &LEN = &LEN - 1
        ENDO
      ELSE +
        SET &SAVE = 1
    ENDO
  ELSE +
    SET &NEW = &NRSTR(&INPUT)
CHK: +
  IF &SAVE = 1 THEN +
    DO
      SET &OLD = &NRSTR(&INPUT)
      WRITE &NRSTR(&OLD)
    ENDO
  ELSE +
      WRITE &NRSTR(&NEW)
  ERROR GOTO CMD1
  SET &AB = &SUBSTR(1:1,&NRSTR(&NEW))
  IF  &NRSTR(&AB) = &NRSTR(&AMP) THEN +
    WRITE &NEW
  ELSE +
    DO
      ERROR OFF
      &NRSTR(&NEW)
    ENDO
CMD1: +
  SET &LSTCC = &LASTCC
  ERROR OFF
  WRITE $CMD              RC = &LSTCC         ... &SYSDATE, &SYSTIME
  ERROR GOTO EXITS
  GOTO LOOP
EXITS: +
  ERROR OFF
