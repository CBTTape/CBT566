         MACRO
&L       SBASET &ROW=R14,&COL=R15
         PUSH  PRINT
         PRINT NOGEN
         LR    R14,R9              ROW NUMBER                   KMB1
         LA    R15,1               COL NUMBER (ALWAYS 1)        KMB1
         BAL   R4,SBACALC          CALL ROUTINE                 KMB1
         MVC   0(5,R5),=X'1140401DC4' MODEL SBA/SF              KMB1
         MVC   1(2,R5),SBACMD      MOVE IN CALCULATED SBA       KMB1
         LA    R9,1(,R9)           POINT TO NEXT ROW            KMB1
         POP   PRINT
         MEND  ,
         PUNCH ' ORDER SPY(P)'
         PUNCH ' SETCODE AC(1)'
*******************************************************************
*                                                                 *
*            D I S C L A I M E R    S E C T I O N                 *
*                                                                 *
*******************************************************************
*                                                                 *
* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *
* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *
* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *
* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *
* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *
* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *
* SUPPLIED .                                                      *
*                                                                 *
* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *
* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *
* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *
* FUTURE .                                                        *
*                                                                 *
*******************************************************************
***********************************************************************
*        FOR AUTHORIZATION - INSERT GROUPS OR *USER INTO THE AUTHNAME *
*        TABLE.                                                       *
*                                                                     *
*        F AUTHNAME LAST                                              *
*                                                                     *
*        DISPLAY MVS CONSOLE DISPLAY WITH AUTOMATIC REFRESH OF SCREEN *
*        TO PRESENT A CONSOLE APPEARANCE.                             *
*                                                                     *
*        USED THE BASIC CROSS MEMORY CONSOLE BUFFER READ FROM THE     *
*        CDF PROGRAM ON THE SHARE TAPE, AND MODIFIED TO A COMMAND     *
*        PROCESSOR HIGHLIGHTING THE HIGHLIGHTED MESSAGES - P.MURPHY   *
*                                                                     *
***********************************************************************
* ORIG.  FROM CBTTAPE.ORG FILE 025  TU SERVICES  PGM=CONS390          *
***********************************************************************
*        UPDATE LOG                                                   *
***********************************************************************
* 08/02/2007 KMB1-SAM BASS - MCLANE CO.                               *
*        HEAVILY MODIFIED.                                            *
*                                                                     *
*  1.    I CHOSE THIS CONSOLE/SPY PROGRAM SINCE IT HAD THE BASIC      *
*        STRUCTURE IN PLACE TO SUPPORT 3270 MODELS 2,3,4,5.           *
*        BUT IT ONLY COULD LOOK AT MOD-2 CONSOLES.                    *
*        I TOOK IT TO THE NEXT LEVEL AND NOW IT WILL WORK WITH        *
*        ALL CONSOLE SIZES UP TO 54X132.                              *
*        IF THE CONSOLE IS BIGGER THAN THE TERMINAL THEN I TRUNCATE   *
*        THE WIDTH AND LOP OFF THE TOP LINES.  I DID NOT FEEL LIKE    *
*        DOING THE PAGING THING LIKE SOME OF THE CONSOLE/SPY PROGRAMS.*
* 2.     I ALWAYS CHOOSE THE ALTERNATE SIZE (HOPEFULLY IT IS LARGER   *
*        THAN THE PRIMARY).  MAYBE I SHOULD TEST WHICH IS LARGER!     *
* 3.     I CHANGED THE SECURITY ENTRIES TO BE RACF GROUPS INSTEAD OF  *
*        USERIDS.  I DO STILL SUPPORT USERIDS BY HAVING "*USERID".    *
* 4.     I INCLUDED THE IPL VOLSER IN ADDITION TO THE IPL UCB         *
* 5.     I TRIED MY BEST TO REMOVE HARD CODED OFFSETS TO DATA AREAS   *
*        AND LENGTHS TO MOVE DATA.                                    *
*                                                                     *
* 08/06/2007 KMB1-SAM BASS - MCLANE CO. SBASS@MCLANECO.COM            *
*                                                                     *
* 1.     CHANGED TO GENERATE THE SBA DYNAMICALLY SO THIS CAN SUPPORT  *
*          ANY SIZE TSO TERMINAL                                      *
* 2.     SUPPORTS 14-BIT SBA TO SUPPORT LARGE TERMINAL SIZES          *
*          IF  ROW*COL > 4096                                         *
* 3.     ALLOW 'P' OR 'A' TO BE PASSED TO PROGRAM TO FORCE            *
*          PRIMARY OR ALTERNATE TERMINAL SCREEN SIZE.                 *
*                                                                     *
* 07/06/2009 ZOS19-SAM BASS - MCLANE CO. SBASS@MCLANECO.COM           *
* 1.     CHANGED TO SUPPORT Z/OS 1.9, WILL ONLY COMPILE WITH Z/OS 1.9 *
*          AND  ABOVE                                                 *
* KMB2   CHANGED TO SUPPORT Z/OS 1.9, CONVERTED 'SVC 34' TO MGCRE     *
*                                                                     *
*                                                                     *
*              VVV --------------- VVVVVVVVVVVVVVVVVVVVVVV            *
***********************************************************************
$AUTHOK  EQU   0                   0= NO SVC, 1=USE AUTH SVC    KMB1
$AUTHSVC EQU   999                 CHANGE TO YOUR AUTH SVC      KMB1
SPY      AMODE 31
SPY      RMODE 24
SPY      CSECT
         SAVE  (14,12),T,SPY_MCLANE_&SYSDATC._&SYSTIME.
         LR    R11,R15            LOAD ADDRESS OF ENTRY POINT
         LA    R12,2048(,R11)     ADDRESS OF NEXT BASE REGISTER
         LA    R12,2048(,R12)     ADDRESS OF NEXT BASE REGISTER
         USING SPY,R11,R12        R12 BASE REGISTER
         LR    R2,R1
         GETMAIN R,LV=WORKLENG,SP=1
         LR    R3,R1
         ST    R13,4(,R3)          SAVE THE CALLER'S R13
         ST    R3,8(,R13)
         LR    R13,R3
         USING WORKAREA,R13
*--------------------------------------------------------------------*
*              INITIALIZE                                            *
*--------------------------------------------------------------------*
         MVI   BLANKS,X'40'
         MVC   BLANKS+1(L'BLANKS-1),BLANKS
         MVI   CONSFLAG,X'00'
         MVI   USERFLAG,X'00'
         MVI   CNSLFLAG,X'00'
         MVI   THRUFLAG,X'00'
         MVI   ISSUFLAG,X'00'
         MVC   CMDLINE,BLANKS
         MVC   AXLIST(4),=Y(1,0)   INITIALIZE AXLIST            KMB1
         MVC   WMGCRE(MGCRELN),MGCRE INITIAL MGCRE              KMB2
         MVI   WFLAG2,0                                         KMB1
*--------------------------------------------------------------------*
*              CHECK TO SEE IT 'P' OR 'A' WAS PASSED TO TELL US      *
*              TO USE PRIMARY OR ALTERNATE TERMINAL SIZE             *
*--------------------------------------------------------------------*
         TM    0(R2),X'80'          IS THIS PARM?               KMB1
         BZ    CHKCPPL             NOPE                         KMB1
         L     R1,0(,R2)           GET PARM/CPPL                KMB1
         OI    2(R1),C' '          UPPERCASE                    KMB1
         CLI   2(R1),C'P'          USE PRIMARY?                 KMB1
         BE    PARM80P                                          KMB1
         CLI   2(R1),C'A'          USE ALTERNATE?               KMB1
         BE    PARM80A                                          KMB1
         B     PARM99                                           KMB1
CHKCPPL  DS    0H                                               KMB1
         L     R1,0(,R2)           GET CPPLBUF                  KMB1
         LH    R15,2(,R1)          GET PARAMETER OFFSET         KMB1
         LA    R1,4(R15,R1)        POINT TO PARM                KMB1
         OI    0(R1),C' '          UPPERCASE                    KMB1
         CLI   0(R1),C'P'          USE PRIMARY?                 KMB1
         BE    PARM80P                                          KMB1
         CLI   0(R1),C'A'          USE ALTERNATE?               KMB1
         BE    PARM80A                                          KMB1
         B     PARM99                                           KMB1
PARM80P  DS    0H                                               KMB1
         OI    WFLAG2,$2PRIM       SET TO USE PRIMARY SIZE      KMB1
         B     PARM99                                           KMB1
PARM80A  DS    0H                                               KMB1
         OI    WFLAG2,$2ALT        SET TO USE ALTERNATE SIZE    KMB1
PARM99   DS    0H                                               KMB1
*--------------------------------------------------------------------*
*              USE RACF GROUP TO VALIDATE WHETHER THIS USER IS       *
*              ALLOWED TO USE THIS PROGRAM                           *
*--------------------------------------------------------------------*
*        MVI   VIPFLG,0            RESET VIP FLAG                  KMB1
*                                                                  KMB1
*        CHECK THE RACF GROUP TO VERIFY VIP                        KMB1
*                                                                  KMB1
         L     R15,PSAAOLD-PSA         LOAD A(ASCB)                KMB1
         L     R15,ASCBASXB-ASCB(,R15)    A(ASXB) AND              KMB1
         L     R15,ASXBSENV-ASXB(,R15)       A(ACEE)               KMB1
         LTR   R15,R15                 ACEE AVAILABLE?             KMB1
         BZ    EXIT                    NO -- CONTINUE              KMB1
         MVC   USERID,BLANKS       BLANK OUT USERID                KMB1
         MVC   USERID(7),ASXBUSER-ASXB(R15) GET USERID             KMB1
         SLR   R2,R2                   CLEAR THE REGISTER AND      KMB1
         LA    R3,ACEEGRPN-ACEE(,R15)  LOAD GROUP  ADDRESS         KMB1
*--------------------------------------------------------------------*
*              SCAN TABLE TO VERIFY                                  *
*--------------------------------------------------------------------*
         LA    R8,AUTHNAME         LOAD ADDR OF AUTHORIZED NAME    KMB1
AUTHLOOP CLI   0(R8),X'FF'         END OF AUTHNAME TABLE?          KMB1
         BE    EXIT                YES, GET OUT                    KMB1
         CLC   0(8,R8),0(R3)       SEE IF RACF GROUP IN TABLE      KMB1
         BE    AUTHED              YES, GO DO IT                   KMB1
         CLI   0(R8),C'*'          IS THIS A USER ENTRY?           KMB1
         BNE   AUTH0100            NO                              KMB1
         CLC   1(7,R8),USERID      IS THIS USER IN THE TABLE       KMB1
         BE    AUTHED              YES                             KMB1
AUTH0100 DS    0H                                                  KMB1
         LA    R8,8(,R8)           INCREMENT TO NEXT TABLE ENTR    KMB1
         B     AUTHLOOP            LOOP UNTIL DONE                 KMB1
AUTHED   DS    0H                                                  KMB1
*        MVI   VIPFLG,X'FF'        YES, SUPER USER                 KMB1
*
*                                                               KMB1
*  SETUP STAX FOR ATTENTION INTERRUPTIONS                       KMB1
*                                                               KMB1
         MVI   ATTNFLG,0                                        KMB1
         LA    R3,STAXLIST         R3 = ADDRESS OF STAX LIST    KMB1
         STAX  ATTNEXIT,MF=(E,(3)) ATTN EXIT TRAP               KMB1
         SPACE 3                                                KMB1
*
         MVI   AUTOFLAG,X'00' AUTO MODE FLAG
         MVI   RESHOWFL,X'00' RESHOW INDICATOR
         MVI   SCREEN,X'C3' WCC
         XC    CLEAR(CLEARLEN),CLEAR ZERO TPUT CLEARSCRN AREA   KMB1
         MVC   CLEAR(CLEARLEN),CLR  CLEAR SCREEN CONTROL CHARS  KMB1
*--------------------------------------------------------------------*
*              GET TERMINAL ROW/COLS ON ENTRY                        *
*              GET TERMINAL PRIMARY AND ALTERNATE SIZES              *
*              SET TERMINAL TO ALTERNATE SIZES                       *
*--------------------------------------------------------------------*
         GTSIZE ,                                               KMB1
         LTR   R0,R0              DISPLAY DEVICE?               KMB1
         BZ    FREESKIP           YES, GO FREE AND RETURN       KMB1
         ST    R0,TERMOROW         SAVE TERM ROWS               KMB1
         ST    R1,TERMOCOL         AND TERM COLUMNS             KMB1
*                                                               KMB1
         LA    R2,PRMSIZE                                       KMB1
         LA    R3,ALTSIZE          GET PRIM/ALT SIZES           KMB1
         GTTERM PRMSZE=(2),ALTSZE=(3),MF=(E,WGTTERM)            KMB1
         SLR   R1,R1                                            KMB1
         IC    R1,PRMSIZE          PRM SIZE ROWS 1 BYTE         KMB1
         ST    R1,PRMSZROW                                      KMB1
         IC    R1,PRMSIZE+1        PRM SIZE COLS 1 BYTE         KMB1
         ST    R1,PRMSZCOL                                      KMB1
*                                                               KMB1
         IC    R1,ALTSIZE          ALT SIZE ROWS 1 BYTE         KMB1
         ST    R1,ALTSZROW                                      KMB1
         IC    R1,ALTSIZE+1        ALT SIZE COLS 1 BYTE         KMB1
         ST    R1,ALTSZCOL                                      KMB1
*                                                               KMB1
         TM    WFLAG2,$2PRIM       USE PRIMARY                  KMB1
         BZ    SETALT                                           KMB1
SETPRIM  STSIZE LINELOC=PRMSZROW,SIZELOC=PRMSZCOL               KMB1
         B     SETSIZE9                                         KMB1
SETALT   STSIZE LINELOC=ALTSZROW,SIZELOC=ALTSZCOL               KMB1
SETSIZE9 DS    0H                                               KMB1
         GTSIZE ,
         LTR   R0,R0              DISPLAY DEVICE?
         BZ    FREESKIP           YES, GO FREE AND RETURN
         STH   R0,TERMROWS         SAVE TERM ROWS               KMB1
         STH   R1,TERMCOLS         AND TERM COLUMNS             KMB1
         B     PROCESS                                          KMB1
*
PROCESS  DS    0H
         MVI   HELPFLAG,X'00'
         MVI   CMDFLAG,X'00'
*--------------------------------------------------------------------*
*              DETERMINE IF WE SHOULD USE 14-BIT SBA                 *
*--------------------------------------------------------------------*
         LH    R0,TERMROWS                                      KMB1
         MH    R0,TERMCOLS                                      KMB1
         C     R0,=F'4096'                                      KMB1
         BL    NO14BIT                                          KMB1
         OI    WFLAG2,$2USE14      USE 14 BIT SBA               KMB1
NO14BIT  DS    0H                                               KMB1
*--------------------------------------------------------------------*
*              FIND CONSOLE'S ADDRESS SPACE AND SAVE ASID            *
*--------------------------------------------------------------------*
         LA    R1,16
         L     R1,0(R1)
         USING CVT,R1
         L     R1,CVTASVT
         DROP  R1
         USING ASVT,R1
         L     R5,ASVTMAXU
         LA    R15,ASVTENTY-4
ASVTLOOP BCTR  R5,0
         LTR   R5,R5
         BZ    CONABEND
         LA    R15,4(,R15)
         ICM   R6,15,0(R15)
         BM    ASVTLOOP
         USING ASCB,R6
         ICM   R7,15,ASCBJBNS
         BZ    ASVTLOOP
         CLC   =C'CONSOLE',0(R7)
         BNE   ASVTLOOP
         SR    R1,R1
         ICM   R1,3,ASCBASID
         DROP  R1,R6
STORECON DS    0H
         ST    R1,CONSASID
         BAL   R3,AUTHRIZ
*--------------------------------------------------------------------*
*              GET THE AX FOR THE CONSOLE ASID                       *
*--------------------------------------------------------------------*
         MVC   AXLIST(2),=H'1'
         CLC   AXLIST+02(2),=H'0'  IS THERE A PREVIOUS AXLIST?
         BZ    AXNEW
         AXFRE AXLIST=AXLIST
AXNEW    DS    0H
         AXRES AXLIST=AXLIST      RESERVE AN AX
         L     R1,CONSASID        'CONSOLE' ASID
         AXEXT ASID=(1)           EXTRACT AX OF 'CONSOLE'IN R0
         AXSET AX=(0)             SET OUR AX TO THAT OF CONSOLE
         BAL   R3,UNAUTH
         B     SHOWCONS
*--------------------------------------------------------------------*
*              EXIT POINT                                            *
*--------------------------------------------------------------------*
AXFREE   DS    0H
         CLC   AXLIST+02(2),=H'0'  IS THERE A PREVIOUS AXLIST?
         BZ    AXFREE2
         AXFRE AXLIST=AXLIST
AXFREE2  DS    0H
SHOWRTRN DS    0H
FREESKIP DS    0H
*
         STSIZE LINELOC=TERMOROW,SIZELOC=TERMOCOL ORIGINAL SIZE KMB1
         TPUT  CLRALT,CLRALTLN,FULLSCR  CLEAR/ERASE ALTERNATE   KMB1
         STLINENO LINE=1
         STFSMODE OFF
         STTMPMD OFF
*
EXIT     DS    0H
         LR    R3,R13
         L     R13,SAVEAREA+4 RESTORE THE CALLER'S R13
         FREEMAIN RC,A=(3),LV=WORKLENG,SP=1
         SR    R15,R15
         RETURN (14,12),RC=(15)
         EJECT
*--------------------------------------------------------------------*
*              BEGINNING OF PROCESS                                  *
*              SET TO FULL SCREEN MODE                               *
*--------------------------------------------------------------------*
SHOWCONS DS    0H
         STFSMODE ON,INITIAL=YES  FULL SCREEN MODE ON
         STTMPMD ON
         TM    WFLAG2,$2PRIM                                    KMB1
         BZ    SHOW0100                                         KMB1
         TPUT  CLRPRM,CLRPRMLN,FULLSCR  CLEAR/ERASE PRIMARY     KMB1
         B     SHOW0900                                         KMB1
SHOW0100 DS    0H                                               KMB1
         TPUT  CLRALT,CLRALTLN,FULLSCR  CLEAR/ERASE ALTERNATE   KMB1
SHOW0900 DS    0H                                               KMB1
*---------------------------------------------------------------------*
*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *
*---------------------------------------------------------------------*
BLDUCMS  L     R4,16              R4 = ADDR OF CVT
         USING CVT,R4
         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)
         DROP  R4
         USING UCM,R4
         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY
         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY
         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB
         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB
         LR    R5,R4              BASE
         S     R5,=F'4'           R5 = ADDR OF FIRST UCM PREFIX
         USING UCMPRFX,R5
         TM    UCMSFLG1,UCMSYSE   NO CONSOLES?
         BO    CONABEND           YES
         DROP  R5
         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY
         XR    R2,R2              R2 = 0 (NUMBER OF VALID UCMS)
UCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB
         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)
         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY
         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?
         BNL   UCMDONE            YES; LEAVE LOOP
         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY
         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?
         BL    UCMLOOP            NOPE; KEEP GOING
UCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND
         CLI   CNSLFLAG,X'FF'
         BNE   SETMAST
         MVC   CONSOLD,CONSCURR
         L     R4,CONSCURR
         LA    R4,1(,R4)
         B     MASTSCAN
         DROP  R4
*---------------------------------------------------------------------*
*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT           *
*---------------------------------------------------------------------*
SETMAST  SR    R4,R4
         ST    R4,CONSCURR
MASTSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE
CKNUMUCM CH    R4,NUMUCMS         IS NUMBER TOO HIGH?
         BNH   MASTCONT           NO, CONTINUE
         CLI   CNSLFLAG,X'FF'
         BNE   CONCHECK
         CLI   THRUFLAG,X'FF'
         BE    NOCONS
         MVI   THRUFLAG,X'FF'
         SR    R4,R4              START W/ FIRST ENTRY
         B     MASTCONT
*
*              ERROR IF NO CONSOLES FOUND
*
CONABEND EQU   *
NOCONS   TPUT  MSGNO2,43
         TPUT  CLEAR,CLEARLEN,FULLSCR                           KMB1
         B     AXFREE
MSGNO2   DC    CL43'ALL CONSOLES OFFLINE, GOING TO MASTER TRACE'
         SPACE 3
CONCHECK MVI   CNSLFLAG,X'FF'
         MVI   THRUFLAG,X'FF'
         B     SETMAST
*
*              HERE IS THE SCAN FOR THE MASTER
*
MASTCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX
         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT
         L     R5,0(0,R5)         SET POINTER TO UCM
         LTR   R5,R5
         BZ    NEXT
         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM
         CLI   CNSLFLAG,X'FF'
         BE    SKIPMSTR
         TM    UCMDIDCS,UCMAHERE  ON THIS SYSTEM?
         BZ    NEXT               NO ? BRANCH
         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?
         BNZ   ACTIVCHK           YES ? FOUND THE MASTER CONSOLE ..
         B     NEXT
SKIPMSTR EQU   *
         TM    UCMDIDCS,UCMAHERE  ON THIS SYSTEM?
         BZ    NEXT               NO ? BRANCH
         TM    UCMDISP1,UCMDISPC  GRAPHICS
         BZ    NEXT
ACTIVCHK TM    UCMATR,UCMUF       ACTIVE?
         BNZ   MASTFND
NEXT     SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE
         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE
         B     MASTSCAN           CONTINUE MASTER CONSOLE SCAN LOOP
MASTFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE
         ST    R4,CONSCURR        SET VALID CONSOLE NUMBER (MASTER)
         DROP  R5                 DONT NEED UCM ADDRESSABILITY NOW
NEXTPAGE LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
         ICM   R4,15,CONSCURR     R4 = CONSOLE TO BE DISPLAYED
         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO (MASTER)
         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?
         BNH   GETUCM             NO, CONTINUE
RESETCN  L     R4,CONSOLD         RESET TO OLD CONSOLE
         ST    R4,CONSCURR        AND SAVE IT
GETUCM   SLL   R4,2               MULTIPLY BY 4
         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM
         L     R5,0(0,R5)         R5 = ADDR OF UCM
         USING UCMLIST,R5
         L     R6,UCMXB           R6 = ADDR OF RDCM
         ST    R6,UCMTABX
         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?
         BP    GRAPHICS           YES
         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB
WRTERR4  DS    0H
         B     RESETCN            RESET THE CONSOLE NUMBER
GRAPHICS EQU   *
         L     R6,UCMFEXTP        UCM FIXED EXTENSION
         USING UCMEFEXT,R6        ADDRESSABILITY
         MVC   USER,UCMEFCNM      LOGON ID
         DROP  R6
AUTHDONE EQU   *
         MVC   CONSOLD,CONSCURR
         MVC   HEADING,HEADING1
***********************************************************************
*    FOR SYSH UNCOMMENT THE FOLLOWING 2 LINES TO LOOK AT ALTERNATE    *
***********************************************************************
*        CLI   CONSFLAG,X'FF'
*        BNE   CNSLSW
         CLI   ISSUFLAG,X'FF'
         BNE   CONSINIT
         MVC   HEADING+45(18),NOTISSUD
         MVI   ISSUFLAG,X'00'
CONSINIT MVI   CNSLFLAG,X'00'
*        BAL   R3,AUTHRIZ                                       KMB1
*--------------------------------------------------------------------*
*              SET SSAR TO THE CONSOLE ASID                          *
*--------------------------------------------------------------------*
         L     R1,CONSASID        'CONSOLE' ASID
         SSAR  R1                 SET 'CONSOLE' AS SECONDARY
         PRINT ON,GEN
         SLR   R0,R0              SECONDARY KEY
         L     R6,UCMTABX
         LA    R1,4               TRUE LENGTH
         MVCP  RDCM(R1),0(R6),R0  ADDRESS OF PAGEABLE DCM (DCMADTRN)
         LA    R1,1
         MVCP  TYPE(R1),15(R6),R0  ATTRIB DCMDEVTY  X'14' = EXTENDED
*UCMECOLR EQU   X'10'               USABLE FOR EXTENDED COLOR
*UCMEXTDS EQU   X'04'               DEVICE SUPPORTS EXTENDED DATA
         L     R7,RDCM
         USING STRTDCM,R7
         LA    R1,2                                             KMB1
         MVCP  CONROW(R1),DCMMSGAL-STRTDCM(R7),R0               KMB1
         LA    R1,2                                             KMB1
         MVCP  CONCOL(R1),DCMCORLN-STRTDCM(R7),R0               KMB1
*--------------------------------------------------------------------*
*              SET EXECUTED MVC LENGTH FROM CONSOLE TO TERM BUFFER   *
*--------------------------------------------------------------------*
         LH    R1,CONCOL           CONSOLE COLUMNS              KMB1
         TM    TYPE,X'14'          IS IT EXTENDED?
         BO    COLEXT02            YES
COLEXT01 DS    0H
         SH    R1,=H'07' 6(SBA) +1 FOR EXECUTED MVC'S LATER     KMB1
         B     COLEXT03
COLEXT02 DS    0H                  EXTENDED
         SH    R1,=H'13' 12(EXTSBA) +1 FOR EXECUTED MVC'S       KMB1
         B     COLEXT03
COLEXT03 DS    0H                                               KMB1
         STH   R1,CONCOLM6         FOR EXECUTED MVC'S LATER     KMB1
*--------------------------------------------------------------------*
*              SET THE CONSOLE BUFFER MOVE LENGTH TO THE MINIMUM     *
*              OF THE CONSOLE WIDTH OR THE TERMINAL WIDTH-2          *
*--------------------------------------------------------------------*
         LH    R0,TERMCOLS         MAX TERMINAL WIDTH           KMB1
         SH    R0,=H'1'            -1 FOR EXECUTE               KMB1
         STH   R0,TERMMOVE         MAX MOVE                     KMB1
         CLR   R1,R0               IS CONSOLE > TERM            KMB1
         BH    COLEXT04            YEP                          KMB1
         STH   R1,TERMMOVE         NOPE, MOVE CONS LEN TO TERM  KMB1
COLEXT04 DS    0H
*                                                               KMB1
         SLR   R0,R0
         LA    R1,L'LASTLINE      TRUE LENGTH
         MVCP  LASTLINE(R1),DCMINPUT-STRTDCM(R7),R0
         LA    R1,L'SIBPTR
         SLR   R0,R0              SET STORAGE KEY
         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO CONSOLE BFR
         LA    R1,2
         MVCP  HEADING+8(R1),DCMDEL-STRTDCM(R7),R0   ROLL DELETE VAL
         MVCP  RTME(R1),DCMRTME-STRTDCM(R7),R0       RTME
         MVCP  RNUM(R1),DCMDL-STRTDCM(R7),R0         RNUM
         LA    R1,4
         MVCP  CONL(R1),DCMLSCRN-STRTDCM(R7),R0 @ OF LAST CONS LINE
*
         L     R8,SIBPTR         R8 = ADDR OF CONSOLE IMAGE
         LA    R1,4                                             KMB1
         MVCP  SCNL(R1),DCMWTBUF-STRTDCM(R7),R0                 KMB1
         L     R5,SCNL             @ OF LAST BYTE OF SCREEN+1   KMB1
*                                  AND ADDRESS OF INPUT AREA    KMB1
         SR    R5,R8               GET LENGTH OF CONSOLE BFR    KMB1
         TM    TYPE,X'14'        SUPPORT EXTENDED COLOR/DATASTREAM?
         BO    EXTLNGTH          YES, BRANCH
         LA    R5,06(,R5)          SIX BYTES FOR SBA
         B     REGLNGTH
EXTLNGTH DS    0H
         LA    R5,12(,R5)          SIX BYTES FOR EXT SBA
REGLNGTH ST    R5,CONL             SAVE IT
*--------------------------------------------------------------------*
*              MOVE THE COMPLETE CONSOLE BUFFERS TO BUF    AREA      *
*--------------------------------------------------------------------*
*
*              R5 IS LENGTH OF CONSOLE DISPLAY
*              R8 IS POINTER TO FIRST BYTE OF CONSOLE DISPLAY
*
         LA    R4,SCREEN           MY BUF
         AL    R4,=A(SCRLEN)       POINT TO BUF (FOLLOWS SCREEN KMB1
MOVEBUFF DS    0H
         TM    TYPE,X'14'          SUPPORT EXTENDED COLOR/DATASTREAM?
         BO    MOVEL
         SH    R8,=H'06'           BACK UP TO THE SBA
         B     RESUMMOV
MOVEL    SH    R8,=H'12'           BACK UP TO THE EXT SBA
RESUMMOV SLR   R0,R0               RESET THE KEY
MVCPLOOP DS    0H
         MVCP  0(R5,R4),0(R8),R0 LOOP THRU THE CONSOLE BUFFER
         BZ    GOTITALL
         AL    R8,=F'256'        MAX LEN ALLOWED
         AL    R4,=F'256'        MAX LEN ALLOWED
         SL    R5,=F'256'        MAX LEN ALLOWED
         B     MVCPLOOP
*---------------------------------------------------------------------*
*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *
*        SECONDARY ADDRSPC MUST BE THE SAME                           *
*---------------------------------------------------------------------*
GOTITALL DS    0H
         EPAR  R1                EXTRACT PRIMARY ASN
         SSAR  R1
         BAL   R3,UNAUTH                                        KMB1
         DROP  R5,R7
         LA    R3,SCREEN         SET POINTER TO FIRST LINE OF BUF
         AL    R3,=A(SCRLEN)       POINT TO BUF                 KMB1
*
         LA    R9,HEADING+10
         CLI   HEADING+9,C' '
         BNE   RDMODE
         LA    R9,HEADING+9
*
*              INSERT RTME=
*
RDMODE   MVC   0(6,R9),RTMEC
         SR    R5,R5
         LH    R5,RTME
         CVD   R5,DOUBLWD
         MVC   WORKLINE(5),PATTERN1
         ED    WORKLINE(5),DOUBLWD+5
         MVC   6(4,R9),WORKLINE+1
         CLI   9(R9),C'0'
         BE    PUTBLNK
         MVC   7(2,R9),=C'1/'
         B     PUTRNUM
*
*              INSERT RNUM=
*
PUTBLNK  MVI   9(R9),C' '
PUTRNUM  MVC   10(6,R9),RNUMC
         SR    R5,R5
         IC    R5,RNUM+1
         CVD   R5,DOUBLWD
         MVC   WORKLINE(5),PATTERN1
         ED    WORKLINE(5),DOUBLWD+5
         MVC   16(3,R9),WORKLINE+2
*
*              INSERT TIME
*
         TIME  DEC
         ST    R0,WORK
         MVI   WORK+3,X'0C'
         UNPK  DOUBLWD(7),WORK(4)
         LA    R9,HEADING+36
         MVC   0(2,R9),DOUBLWD
         MVC   3(2,R9),DOUBLWD+2
         MVC   6(2,R9),DOUBLWD+4
         MVC   28(8,R9),USER
         MVC   10(10,R9),BLANKS
*
         AGO   .NOTEST
         UNPK  WORK(3),TYPE(2)     DISPLAY CONSOLE ATTRIBUTES
         TR    WORK(2),JHEX-240
         MVC   HEADING+47(2),WORK
.NOTEST  ANOP
*--------------------------------------------------------------------*
*              INSERT ROW,COL MAX  DISPLAY                           *
*--------------------------------------------------------------------*
         LH    R1,CONROW           GET NUMBER OF ROWS           KMB1
         CVD   R1,DOUBLWD          CONVERT TO DECIMAL           KMB1
         MVC   HEADING+55(4),=X'40212020' SHOW 3 DIGITS         KMB1
         ED    HEADING+55(4),DOUBLWD+6    AND DO IT.            KMB1
         MVI   HEADING+59,C','                                  KMB1
*                                                               KMB1
         LH    R1,CONCOL           GET NUMBER OF COLS           KMB1
         SH    R1,=H'4'            ASSUME NON-EXTENDED          KMB1
         TM    TYPE,X'14'          IS THIS EXTENDED             KMB1
         BZ    SIZE20               NOPE                        KMB1
         SH    R1,=H'6'             EXTENDED                    KMB1
SIZE20   DS    0H                                               KMB1
         CVD   R1,DOUBLWD          CONVERT TO DECIMAL           KMB1
         MVC   HEADING+60(4),=X'F0212020' SHOW 3 DIGITS         KMB1
         ED    HEADING+60(4),DOUBLWD+6    AND DO IT.            KMB1
         MVC   HEADING+60(4),HEADING+61                         KMB1
         MVI   HEADING+63,C' '                                  KMB1
*
         CLI   AUTOFLAG,X'FF'
         BNE   FIRSTL
         MVC   10(10,R9),=C'AUTOUPDATE'
         EJECT ,
*--------------------------------------------------------------------*
*              CALCULATE THE IF THE NUMBER OF CONSOLE LINES WILL     *
*              FIT ON THE USERS TERMINAL                             *
*              USER'S TERMINAL CAN HOLD 2 MORE LINES THAN THE CONSOLE*
*              CAN FOR THE SAME TERM SIZE                            *
*              SO IF THE CONSOLE LINES IS > TERMINAL ADD 2 TO        *
*              DIFFERENCE                                            *
*--------------------------------------------------------------------*
*
*              R3 HAS CONSOLE BUFFER START
*
FIRSTL   LH    R9,TERMROWS         NUMBER OF LINES ON TERMINAL  KMB1
         BCTR  R9,0                -1 LEAVE ROOM FOR CMD LINE   KMB1
*
         LH    R5,CONROW           NUM ROWS ON CONSOLE
         ST    R5,CONL             SAVE IT
         LA    R5,2(,R5)           +2 FOR SIZE DIFFERENCE
         CR    R9,R5               IS TERM >= CONSOLE LINES+2
         BNL   FIRSTL1              YES
*              CONSOLE BIGGER THAN TERMINAL
         LH    R5,CONROW           NUM ROWS ON CONSOLE
         SR    R5,R9               HOW MANY TOO BIG
         LA    R5,2(,R5)           +2 FOR SIZE DIFFERENCE
         LH    R1,CONROW
         SR    R1,R5               SUBSTRACT OFF THAT MANY
         ST    R1,CONL             SAVE IT
*
*              NOW ADJUST STARTING CONSOLE ROW FOR THAT DIFFERENCE
*              R5=# OF CONSOLE LINES TO SKIP
*
         LH    R1,CONCOL           GET CONSOLE WIDTH
         SLR   R4,R4               ZERO FOR MULTIPLY REGISTER
         MR    R4,R1               GET BYTE OFFSET INTO CONSOLE
         LA    R3,0(R5,R3)         ADJUST CONSOLE STARTING PLACE
*--------------------------------------------------------------------*
*              BUILD THE FIRST LINE                                  *
*--------------------------------------------------------------------*
FIRSTL1  DS    0H
         LA    R5,SCREEN+1            ADDRESS OF FIRST LINE
*        AP    HEADING(2),HEADING(2)
NOTMOD5  L     R1,CONL             GET CONSOLE LINES TO DISPLAY
         LA    R9,1                SBASETROW                    KMB1
         SR    R10,R10
         SBASET ,                  MOVE IN FIRST TERMINAL SBA   KMB1
         LH    R2,TERMMOVE                                      KMB1
         MVC   6(00,R5),BLANKS                                  KMB1
         EX    R2,*-6                                           KMB1
         MVC   5(79,R5),HEADING    MOVE IN HEADING.
*
*              INSERT CONSOLE NUMBER
*
         SR    R15,R15
         IC    R15,CONSCURR+3
         CVD   R15,DOUBLWD
         MVC   WORKLINE(4),=X'40212020'
         ED    WORKLINE(4),DOUBLWD+6
         MVC   78(2,R5),WORKLINE+2
*
*        LA    R5,84(,R5)          NEXT TERM BUFFER ADDRESS
*        LA    R10,85(,R10)        TPUT LENGTH (INCL. WCC)
         LH    R2,TERMMOVE         GET TERM MOVE LENGTH-1       KMB1
         LA    R5,1+6(R2,R5)        NEXT TERM BUFFER ADDR       KMB1
         LA    R10,2+6(R2,R10)      SET NEW TERM TPUT LENGTH    KMB1
*KMB1    LA    R6,5(,R6)           NEXT TERMINAL SBA
*
         CLI   HELPFLAG,X'FF'         HELP?
         BNE   MOVESTUP
*--------------------------------------------------------------------*
*              DISPLAY HELP STUFF                                    *
*--------------------------------------------------------------------*
         LA    R9,1                SBASETROW                    KMB1
         SBASET ,                                               KMB1
         MVC   5(79,R5),BLANKS
         LA    R5,84(,R5)             INCREMENT
         SBASET ,                                               KMB1
         LA    R1,HELPMSG1         HELP LINE 1
         MVC   5(79,R5),00(R1)
         LA    R5,84(,R5)             INCREMENT
         SBASET ,                                               KMB1
         MVC   5(79,R5),80(R1)
         LA    R5,84(,R5)             INCREMENT
         SBASET ,                                               KMB1
         MVC   5(79,R5),160(R1)     HELP LINE 3
         LA    R5,84(,R5)             INCREMENT
         SBASET ,                                               KMB1
         MVC   5(79,R5),240(R1)     HELP LINE 4
         LA    R5,84(,R5)             INCREMENT
         LA    R10,420(,R10)       84*5
         CLI   USERFLAG,X'FF'
         BNE   SPACLOOP
         B     SPACLOOP
         EJECT ,
MOVESTUP LR    R15,R5
         LA    R9,2                SBASETROW                    KMB1
***********************************************************************
*                                                                     *
* THE CONSOLES WITH EXTENDED DATASTREAMS HAVE THE FOLLOWING FORMATS:  *
* (THE TYPE WILL HAVE EXTENDED COLOR AND DATASTREAM TURNED ON - X'14')*
*                                                                     *
* REF GA23-0059 DATASTREAM PROGRAMMERS REFERENCE                      *
*                                                                     *
* 1100002903C0E442F4410040  (THEN 4 BLANKS AND THE LINE)              *
*                                                                     *
* 11 SBA FOR 0000 THE FIRST LINE  OR 0050 2ND LINE ETC - 110000       *
* 2903 - SFE START FIELD EXTENDED FORMAT (29) WITH 03 EXTENDED FIELDS *
* C0E4 - FIELD ATRIBUTE      E4 - PROT DISPLAY                        *
* 42F4 - 42 FOREGROUND COLOR F4 IS GREEN F1 IS BLUE F3 PINK ETC       *
* 4100 - 41 EXTENDED HIGHLIGHTING 00 MEANS DEFAULT F1 BLINK F4 UNDERSC*
*        F2 REVERSE VIDEO  F0 NORMAL (PER 3270 FIELD ATTRIBUTE)       *
*                                                                     *
* THE CONSOLES WITHOUT EXTENDED DATASTREAM HAVE THE FOLLOWING FORMATS:*
*                                                                     *
* 11404028E440              (THEN 1 BLANK  AND THE LINE)              *
*                                                                     *
* 11 SBA FOR 4040 THE FIRST LINE                                      *
* 28 ATTRIBUTE CHAR E4 PROT DISPLAY                                   *
*                                                                     *
* TOTAL LENGTH NON-EXTENDED 84, EXTENDED DISPLAY LENGTH IS 90         *
*                                                                     *
***********************************************************************
*        R1    HAS NUMBER OF LINES TO MOVE FROM CONSOLE BUFFER
*        R3    CONSOLE BUFFER
*        R5    TERMINAL BUFFER
*        R6    TERMINAL SBA ADDRESSES
*        R9    CURRENT ROW NUMBER
*        R15   TERMINAL BUFFER
MOVELOOP EQU   *
         CLI   CLRFLAG,X'FF'
         BE    MVIT
         TM    TYPE,X'14'             EXTENDED FORMAT?
         BZ    COMP2                  NO - USE OTHER DISPLACEMENT
         CLC   5(74,R5),11(R3)        HAS THIS LINE CHANGED?
         BNE   SETMOVE
         CLC   4(1,R5),06(R3)         ATTRIBUTE BYTE CHANGED?
         BE    SKPMV                  NO NEED SENDING DOWN THE LINE
         B     SETMOVE
COMP2    CLC   5(74,R5),5(R3)         HAS THIS LINE CHANGED?
         BNE   SETMOVE
         CLC   4(1,R5),04(R3)         ATTRIBUTE BYTE CHANGED?
         BE    SKPMV                  NO NEED SENDING DOWN THE LINE
SETMOVE  MVI   CLRFLAG,X'FF'          SCREEN HAS CHANGED FROM HERE DOWN
MVIT     DS    0H
         SBASET ,                                               KMB1
CKMVIT   TM    TYPE,X'14'          EXTENDED FORMAT?
         BZ    MVIT2               NO - USE OTHER DISPLACEMENT
*              EXTENDED                                         KMB1
         MVC   4(1,R5),06(R3)      ATTRIBUTE BYTE
         LH    R2,TERMMOVE         TERM MVC LEN -1              KMB1
         MVC   6(00,R5),12(R3)     MOVE LINE OF PRINT           KMB1
         EX    R2,*-6              MOVE IT IN.                  KMB1
         B     MVIT3
*              NON-EXTENDED                                     KMB1
MVIT2    EQU   *
         MVC   4(1,R5),04(R3)      ATTRIBUTE BYTE
         LH    R2,TERMMOVE         NUM COLS -6 OR -12           KMB1
         MVC   6(00,R5),6(R3)      MOVE LINE OF PRINT           KMB1
         EX    R2,*-6              MOVE IT IN.                  KMB1
MVIT3    DS    0H                                               KMB1
         MVI   5(R5),C' '                                       KMB1
         LH    R2,TERMMOVE         NUM COLS -6 OR -12           KMB1
         OC    6(00,R5),BLANKS     MAKE SURE NO CONTROL CHR     KMB1
         EX    R2,*-6              OC THE WHOLE THING           KMB1
         LA    R5,1+6(R2,R5)       NEXT LINE                    KMB1
         LA    R10,1+6(R2,R10)     LENGTH OF TPUT               KMB1
         B     MOVINCR                                          KMB1
SKPMV    DS    0H
         LA    R9,1(,R9)           +1 SINCE WE SKIPPED SBASET   KMB1
MOVINCR  DS    0H                                               KMB1
         LH    R2,CONCOL           CONSOLE WIDTH (INCL SBA).    KMB1
         ALR   R3,R2               CONSOLE BUFFER               KMB1
         ALR   R15,R2              CONSOLE                      KMB1
         BCT   R1,MOVELOOP         LOOP
         MVI   CLRFLAG,X'00'
*--------------------------------------------------------------------*
*              FIND THE LAST LINE OF THE TERMINAL SBA                *
*--------------------------------------------------------------------*
SPACLOOP DS    0H
*--------------------------------------------------------------------*
*              ADD IN THE COMMAND LINE                               *
*--------------------------------------------------------------------*
         LH    R9,TERMROWS         SBASETROW TO LAST ROW        KMB1
         SBASET ,                  LINE ADDRESS                 KMB1
         MVI   4(R5),X'C8'         UNPROT, HILITE               KMB1
         MVI   5(R5),X'13'         INSERT CURSOR
*--------------------------------------------------------------------*
*              NOW BLANK OUT COMMAND LINE                            *
*--------------------------------------------------------------------*
         LH    R2,TERMMOVE         NUMBER COLS -6               KMB1
         MVC   6(00,R5),BLANKS        LAST LINE IS INPUT LINE   KMB1
         EX    R2,*-6              MOVE BLANKS                  KMB1
*--------------------------------------------------------------------*
*              CHECK FLAGS                                           *
*--------------------------------------------------------------------*
         CLI   HELPFLAG,X'FF'
         BE    GOAHEAD2
         CLI   IPLFLAG,X'FF'
         BE    GOAHEAD2
         CLI   AUTOFLAG,X'FF'
         BE    AUTOROLL
GOAHEAD  DS    0H
         CLI   RESHOWFL,X'FF'
         BNE   GOAHEAD2
         MVI   4(R5),X'C9'  X'C9'  UNPROT, HILITE,MDT           KMB1
         MVI   RESHOWFL,X'00'
         MVC   6(72,R5),CMDCMD                                  KMB2
         B     GOAHEAD3
GOAHEAD2 DS    0H                                               KMB1
GOAHEAD3 MVI   CMDFLAG,X'00'
         LH    R2,TERMMOVE         GET TERM MVC LENGTH          KMB1
         LA    R10,1+6(R2,R10)     TERM SCREEN LENGTH           KMB1
*        LA    R10,84(,R10)
         LR    R0,R10
         LA    R1,SCREEN              ADDRESS OF SCREEN
         TPUT  (1),(0),FULLSCR        TPUT
         LA    R1,1                SET CURRENT ROW              KMB1
         MVC   REPLY,BLANKS           CLEAR
TGET1    TGET  REPLY,84,ASIS,WAIT     INPUT
         MVI   HELPFLAG,X'00'
         CLI   ATTNFLG,0                                        KMB1
         BNE   AXFREE                                           KMB1
         B     CHEKOUT
*--------------------------------------------------------------------*
*              AUTOROLL AREA                                         *
*--------------------------------------------------------------------*
AUTOROLL EQU   *
         LA    R1,SCREEN              ADDRESS OF SCREEN
         CLI   RESHOWFL,X'FF'
         BNE   GOAHEAD5
         MVI   RESHOWFL,X'00'
         MVC   6(72,R5),CMDCMD                                  KMB2
         MVC   REPLY,BLANKS
         LA    R10,72(,R10)
         B     GOAHEAD5
*OAHEAD4 S     R0,=F'79'
GOAHEAD5 CLI   CMDFLAG,X'FF'
         BNE   AUTOTPUT
         LH    R9,TERMROWS         SBASETROW TO LAST ROW        KMB1
         SBASET ,                     LINE ADDRESS              KMB1
         MVI   4(R5),X'C8'         UNPROT, HILITE               KMB1
         MVI   5(R5),X'13'            INSERT CURSOR
         MVI   CMDFLAG,X'00'
AUTOTPUT LA    R0,5(,R10)
         LR    R0,R10
         TPUT  (1),(0),FULLSCR
         TGET  REPLY,70,ASIS,NOWAIT
         STIMER WAIT,BINTVL=TIMER
*--------------------------------------------------------------------*
*              WHAT ACTION (AID) KEY WAS PRESSED                     *
*--------------------------------------------------------------------*
*                                                               KMB1
*        60    NO AID                                           KMB1
*        7D    ENTER                                            KMB1
*        F1-F9 PF1  - PF9                                       KMB1
*        7A-7C PF10 - PF12                                      KMB1
*        C1-C9 PF13 - PF21                                      KMB1
*        4A-4C PF22 - PF24                                      KMB1
*        6C    PA1                                              KMB1
*        6E    PA2                                              KMB1
*        6B    PA3                                              KMB1
*        6D    CLEAR                                            KMB1
*                                                               KMB1
CHEKOUT  CLI   REPLY,X'7D'         ENTER
         BE    GOTSTUFF
         NI    REPLY,X'0F'
         CLI   REPLY,X'01'         PFK 01
         BE    HELP
         CLI   REPLY,X'02'         PFK 02
         BE    AUTOSTOP
         CLI   REPLY,X'03'         PFK 03
         BE    CHEKAUTO
         CLI   REPLY,X'04'         PFK 04
         BE    AUTOON
         CLI   REPLY,X'05'         PFK 05
         BE    CNSLSW
         CLI   REPLY,X'06'         PFK 06
         BE    RESHOW
         CLI   REPLY,X'07'         PFK 07
         BE    MTT
         CLI   REPLY,X'08'         PFK 08
         BE    AUTO10
         CLI   REPLY,X'09'         PFK 09
         BE    AUTO2
*        CLI   REPLY,X'0A'         PFK 10
*        BE    OMON
         CLI   REPLY,X'0B'         PFK 11
         BE    AUTO4
         CLI   REPLY,X'0C'         PFK 12
         BE    IPLINFO
*--------------------------------------------------------------------*
*                                                                    *
*--------------------------------------------------------------------*
NOTIFY   MVI   CLRFLAG,X'FF'
         MVI   CMDFLAG,X'FF'
         B     AUTHDONE
CHEKAUTO CLI   AUTOFLAG,X'FF'
         BNE   AXFREE
         MVI   AUTOFLAG,X'00'
         B     AUTHDONE
CNSLSW   MVI   CNSLFLAG,X'FF'
         MVI   REPLY,X'00'
         MVI   CONSFLAG,X'FF'
         MVI   THRUFLAG,X'00'
         MVI   CLRFLAG,X'FF'
*
*              CLEAR OUR BUF AREA
*
         LA    R0,SCREEN
         AL    R0,=A(SCRLEN)       POINT TO BUF                 KMB1
         L     R1,=A(BUFLEN)       GET BUF LENGTH               KMB1
         SLR   R14,R14                                          KMB1
         L     R15,=A(X'40000000')                              KMB1
         MVCL  R0,R14                                           KMB1
         B     SHOWCONS
RESHOW   MVI   RESHOWFL,X'FF'
         B     AUTHDONE
*--------------------------------------------------------------------*
*              IPLINFO                                               *
*--------------------------------------------------------------------*
IPLINFO  MVC   WORKLINE,BLANKS
         LA    R9,1                SBASETROW                    KMB1
         MVC   WORKLINE+10(46),MESSAGE
         LA    R1,16              HEX 10
         L     R2,0(R1)           ADDRESS OF CVT
         USING CVT,R2
         L     R3,CVTSMCA         ADDRESS OF SMF CONTROL AREA
         L     R1,CVTSYSAD
*
*              IPL UNIT AND VOLSER
*
         MVC   WORKLINE+65(6),UCBVOLI-UCBOB(R1)                 KMB1
         MVI   WORKLINE+71,C'='                                 KMB1
         UNPK  WORKLINE+72(5),UCBCHAN-UCBOB(3,R1)               KMB1
         TR    WORKLINE+72(4),JHEX-240                          KMB1
         MVI   WORKLINE+76,C' '                                 KMB1
         USING SMCABASE,R3
         MVC   IPLDATE,SMCAIDTE   IPL DATE
         MVC   IPLTIME,SMCAITME   IPL TIME
         DROP  R3
*
*              CLPA=YES/NO
*
         L     R3,CVTASMVT
         TM    1(R3),X'08'     CLPA?
         BNZ   NOCLPA             1 MEANS A QUICK START - NO CLPA WAS
         MVC   WORKLINE+57(3),=C'YES'
         B     DATEEDIT
NOCLPA   MVC   WORKLINE+57(3),=C'NO '
*
*              DATE/TIME OF IPL
*
DATEEDIT DS    0H                                               KMB1
         UNPK  DOUBLWD(5),IPLDATE+1(3)                          KMB1
         MVC   WORKLINE+31(2),DOUBLWD                           KMB1
         MVI   WORKLINE+33,C'.'                                 KMB1
         MVC   WORKLINE+34(3),DOUBLWD+2                         KMB1
         DROP  R2
         L     R6,IPLTIME
         SRDA  R6,32(0)
         L     R3,THREE60
         DR    R6,R3
         CVD   R7,DOUBLWD
         MVC   WORK(4),=X'40212020'
         ED    WORK(4),DOUBLWD+6
         MVC   WORKLINE+43(2),WORK+2
         SRDA  R6,32              SHIFT REMAINDER
         L     R3,SIXTY
         DR    R6,R3
         CVD   R7,DOUBLWD
         MVC   WORK(4),=X'F0212020'
         ED    WORK(4),DOUBLWD+6
         MVC   WORKLINE+46(2),WORK+2
         LA    R5,SCREEN+1            ADDRESS OF FIRST LINE
         LA    R10,85
         LA    R9,1                SBASETROW                    KMB1
         SBASET ,                                               KMB1
         MVC   5(79,R5),WORKLINE
         LA    R5,84(,R5)             INCREMENT
         LA    R6,05(,R6)             INCREMENT
         TPUT  CLEAR,CLEARLEN,FULLSCR                           KMB1
         MVI   IPLFLAG,X'FF'
         TCLEARQ INPUT
         B     SPACLOOP
*
*              MTT  HUH????
*
MTT      DS    0H
         B     AUTHDONE
*--------------------------------------------------------------------*
*              DISPLAY HELP                                          *
*--------------------------------------------------------------------*
HELP     DS    0H
         LA    R9,1                SBASETROW                    KMB1
         MVI   HELPFLAG,X'FF'
         MVI   AUTOFLAG,X'00'
         TPUT  CLRALT,CLRALTLN,FULLSCR                          KMB1
         MVI   CLRFLAG,X'FF'
         B     FIRSTL
AUTOON   MVC   TIMER,ONE
         CLI   USERFLAG,X'FF'
         BE    AUTO2
         B     AUTOSET
AUTO2    MVC   TIMER,THREE
         B     AUTOSET
AUTO4    MVC   TIMER,FIVE
AUTOSET  MVI   AUTOFLAG,X'FF'
         MVC   5(72,R5),BLANKS
         MVI   REPLY,X'00'
         B     AUTHDONE
AUTO10   MVC   TIMER,=F'990'            APP 10 SECS
         B     AUTOSET
AUTOSTOP MVI   AUTOFLAG,X'00'
         B     AUTHDONE
SKIPALL  MVI   ISSUFLAG,X'FF'
         B     AUTHDONE
*--------------------------------------------------------------------*
*              ENTER PRESSED                                         *
*--------------------------------------------------------------------*
GOTSTUFF DS    0H
         CLI   REPLY+6,C'>'        IS IT NOTIFY MESSAGE?
         BE    NOTIFY              THEN EXIT
         OC    REPLY+6(74),BLANKS  ALL INPUT UPPER CASE
         CLC   REPLY+6(70),BLANKS  COMMAND AREA IS SPACES?
         BE    AUTHDONE            THEN A COMMAND WAS NOT ENTERED
*        MVC   CMDLINE(4),CMDFMT   Y(76),Y(0),CL72              KMB2
         MVC   CMDLINE(2),CMDFMT   MGCRE Y(76),CL74             KMB2
         MVC   CMDCMD(72),REPLY+6                               KMB2
         MVC   REPLY,BLANKS
         CLI   CMDCMD,C'Z'         IS IT END,                   KMB2
         BE    CHEKAUTO            THEN EXIT
         CLI   CMDCMD,C'X'         IS IT END,                   KMB2
         BE    CHEKAUTO            THEN EXIT
         CLC   CMDCMD(3),=C'END' IS IT END,                     KMB2
         BE    AXFREE               THEN EXIT
GOTCMD   DS    0H
         TPUT  CLEAR,CLEARLEN,FULLSCR                           KMB1
         MVI   CLRFLAG,X'FF'
LOGLINE  MVC   WTOCMD(100),WTOLIST
         MVC   WTOCMD+8(72),CMDCMD                              KMB2
         CLI   USERFLAG,X'FF'
         BNE   ISSUOK
ISSUCK   CLC   PJES2,CMDCMD                                     KMB2
         BE    HELP
         CLC   PQ,CMDCMD                                        KMB2
         BE    HELP
         CLC   $P,CMDCMD                                        KMB2
         BE    HELP
         CLC   PQ(3),CMDCMD                                     KMB2
         BE    HELP
         CLC   CMDCMD(1),PQ           SHOULD START WITH $       KMB2
         BNE   HELP
ISSUOK   MVC   WTOCMD+78(4),USERID
         LA    R7,WTOCMD
         WTL   MF=(E,(R7))
NOWTO    DS    0H
         BAL   R3,AUTHRIZ
         SLR   R0,0                 CLEAR REG 0
         L     R0,CONSCURR
ISSUE    LA    R2,CMDLINE          GET ADDRESS OF COMMAND I SMF
         MGCRE TEXT=(2),CONSNAME=USER,MF=(E,WMGCRE)
*S       STIMER WAIT,BINTVL==A(50)
         MVI   CMDFLAG,X'FF'
         B     AUTHDONE
*--------------------------------------------------------------------*
*              SUBROUTINE TO CONVERT ROW,COL TO SBA                  *
*        BAL   R3,SBACALC                                            *
*        INPUT R14=ROW, R15=COL                                      *
*        OUTPUT SBACMD 2 BYTE SBA                                    *
*        SUPPORTS 12 AND 14 BIT SBA                                  *
*--------------------------------------------------------------------*
SBACALC  DS    0H
         BCTR  R14,0          ROW  -1, MAKE RELATIVE TO ZERO    KMB1
         BCTR  R15,0          COL  -1, MAKE RELATIVE TO ZERO    KMB1
         MH    R14,TERMCOLS        ROW * COLUMN                 KMB1
         AR    R15,R14              + COLUMN                    KMB1
*                                                               KMB1
         TM    WFLAG2,$2USE14      USE 14 BIT?                  KMB1
         BO    SBA14                YES                         KMB1
*                                                               KMB1
         SLL   R15,2               MOVE 2 BITS INTO LEFT BYTE   KMB1
         STCM  R15,B'0010',SBACMD  SAVE INTO FIRST BYTE         KMB1
         SRL   R15,2               SHIFT BACK TO ORIGINAL       KMB1
         STCM  R15,B'0001',SBACMD+1 SAVE RIGHT DIGIT            KMB1
         NC    SBACMD(2),=X'3F3F'  REMOVE TOP 2 BITS FROM DIGIT KMB1
         TR    SBACMD(2),TBL3270   TRANSLATE                    KMB1
         BR    R4                                               KMB1
SBA14    DS    0H                                               KMB1
         STCM  R15,B'0011',SBACMD  PUT OFFSET IN SBA            KMB1
         NC    SBACMD(2),=X'3FFF'  REMOVE TOP 2 BITS FROM DIGIT KMB1
         BR    R4
*--------------------------------------------------------------------*
*              AUTHORIZE SUBROUTINE                                  *
*--------------------------------------------------------------------*
AUTHRIZ  STAX  DEFER=YES
         AIF   ($AUTHOK EQ 0).NOSVC01
         LA    R1,=C'AUTH'
         SVC   $AUTHSVC
.NOSVC01 ANOP
         MODESET MF=(E,SUPRMOD)  GET INTO SUPV STATE AND KEY ZERO
         BR    R3                ****************************
*--------------------------------------------------------------------*
*              UNAUTHORIZE SUBROUTINE                                *
*--------------------------------------------------------------------*
UNAUTH   DS    0H
         MODESET MF=(E,PROBMOD)
         AIF   ($AUTHOK EQ 0).NOSVC02
         LA    R1,=C'NONE'
         SVC   $AUTHSVC
.NOSVC02 ANOP
         STAX  DEFER=NO
         BR    R3
***********************************************************************
*                          A T T N E X I T                            *
*                                                                     *
*         TRAP USERS ATTENTION INTERRUPTS AND FLAG FOR RESET          *
***********************************************************************
ATTNEXIT DS    0H                  ESTABLISH
         MVI   ATTNFLG,X'FF'       SET ATTN FLAG
         BR    R14                 RETURN TO CALLER
         EJECT
         LTORG
*---------------------------------------------------------------------*
*                         C O N S T A N T S                           *
*---------------------------------------------------------------------*
*CMDFMT  DC    Y(76),Y(00)            LENGTH OF COMMAND         KMB2
CMDFMT   DC    Y(76)                  LENGTH OF COMMAND         KMB2
MESSAGE  DC    CL46'LAST SYSTEM IPL DATE YY.DDD TIME HH:MM  CLPA ='
PATTERN1 DC    XL5'2120202020'
THREE60  DC    F'360000'
SIXTY    DC    F'6000'
         CNOP  0,8
*---------------------------------------------------------------------*
*               327X SCREEN CLEAR CONTROL CHARACTERS                  *
*---------------------------------------------------------------------*
*LR      DC    X'7E'              EWA
*
CLRALT   EQU   *                                                KMB1
         DC    X'277EC3'           ERASE WRITE ALTERNATE        KMB1
CLRALTLN EQU   *-CLRALT                                         KMB1
CLRPRM   EQU   *                                                KMB1
         DC    X'27F5C3'           ERASE WRITE                  KMB1
CLRPRMLN EQU   *-CLRPRM                                         KMB1
*
CLR      DC    X'C3'               WCC - FREE KEYBOARD/RESET MDT
         DC    X'114040'           SBA TO ROW 1, COL 1
         DC    X'3C'               REPEAT TO ADDRESS
CLREOSCN DC    X'F56F' ENDOFSCR    FILL SCREEN WITH NULLS F56F=R43 C80
         DC    X'00'               REPEAT NULLS
         DC    X'11'               SBA
CLRCSR   DC    X'F460' CURSOR      ROW 43 COL 2
         DC    X'00'               ATTRIBUTE
         DC    X'13'               INSERT CURSOR
CLRLEN   EQU   *-CLR
*
ONE      DC    A(175)              1.75 SECOND
FIVE     DC    A(444)              5 SECONDS
THREE    DC    A(220)              3 SECONDS
TEN      DC    F'10'
NUMBEROR DC    XL4'000000F0'
CHAROR   DC    XL4'000000C0'
HEXZIP   DC    2F'0000000000000000'
         DS    0F
WTOLIST  WTL   '                                                       X
                                       CONSOLE',MF=L
         DS    0F
SUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L
PROBMOD  MODESET KEY=NZERO,MF=L
MGCRE    MGCRE  MF=L                                            KMB2
MGCRELN  EQU    *-MGCRE                                         KMB2
AUTHNAME DS    0CL8                                             KMB1
         DC    CL8'SYS1'                                        KMB1
         DC    CL8'STGMGT'                                      KMB1
         DC    CL8'DB2MGT'                                      KMB1
         DC    CL8'SYSOPER'                                     KMB1
         DC    CL8'OPER2'                                       KMB1
         DC    CL8'SECURITY'                                    KMB1
         DC    CL8'*USER '                                      KMB1
AUTHNEND DC    8XL1'FF'                                         KMB1
HEXFS    DC    XL4'FFFFFFFF'
JHEX     DC    C'0123456789ABCDEF'          HEX DIGIT CONVERSION
PJES2    DC    CL7'$PJES2 '
PQ       DC    CL8'$PQ,ALL '
$P       DC    CL8'$P      '
RTMEC    DC    CL6',RTME='
RNUMC    DC    CL6',RNUM='
TBL3270  DC    X'40C1C2C3C4C5C6C7C8C94A4B4C4D4E4F'              KMB1
         DC    X'50D1D2D3D4D5D6D7D8D95A5B5C5D5E5F'              KMB1
         DC    X'6061E2E3E4E5E6E7E8E96A6B6C6D6E6F'              KMB1
         DC    X'F0F1F2F3F4F5F6F7F8F97A7B7C7D7E7F'              KMB1
NOTISSUD DC    CL18'COMMAND NOT ISSUED'
HEADING1 DC    CL80'K S,DEL=                            99:99:99       X
                             CONSOLE XX    '
HELPMSG1 DC    CL80'PF-1   THIS DISPLAY         PF-2  STOP AUTO UPDATE X
                 PF-3   END                '
HELPMSG2 DC    CL80'PF-4   AUTO UPDATE 1 SEC    PF-5  ALTERNATE CONSOLEX
                 PF-6   RESHOW LAST COMMAND'
HELPMSG3 DC    CL80'PF-7                        PF-8  AUTO UPDATE 10 SEX
               C PF-9   AUTO UPDATE 4 SEC  '
HELPMSG4 DC    CL80'PF-10  NOT DEFINED          PF-11 AUTO UPDATE 2 SECX
                 PF-12  IPL INFO           '
         DC    CL80'****   ONLY JES2 COMMANDS ARE AUTHORIZED FOR THIS UX
               SERID         ****          '
WORKAREA DSECT
SAVEAREA DS    18F
UCMTABX  DS    F                   @ OF FIX DCM (IEERDCM)
RDCM     DS    F                   @ OF PAGEABLE DCM (IEECDCM/IEETDCM)
WORKLINE DS    CL80
REPLY    DS    CL132
BLANKS   DS    CL132
CMDLINE  DS    CL132
CMDCMD   EQU   CMDLINE+2                                        KMB2
HEADING  DS    CL80
SIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER
UCMTAB   DS    F -----+
         DS    48F    |           PROVIDE SPACE FOR 48 UCM ADDRESSES
UCMTABE  EQU   *  <---+
AXLIST   DC    H'1',H'0'           AXRES PARMLIST
NUMUCMS  DS    H
CONSOLD  DS    F                   PREVIOUS CONSOLE NUMBER
         SPACE 5
CLEAR    DS    XL1                WCC - CLEAR SCREEN
         DS    XL3                SBA TO ROW 1, COL 1
CLEARLEN EQU   *-CLEAR                                          KMB1
         DS    XL1                IC AND REPEAT TO ADDRESS
ENDOFSCR DS    XL2                SBA TO ROW XX, COL YY
         DS    XL2                FILL SCREEN WITH NULLS
CURSOR   DS    XL2                SBA TO ROW 1, COL 1
         DS    XL2                INSERT CURSOR
*LEARLEN EQU   *-CLEAR
LASTLINE DS    CL255' '           OPERATORS COMMAND INPUT LINE
CONNUM   DS    CL2' 1'            CONSOLE NUMBER
CTYPE    DS    CL4' '
MASTER   DS    CL8' '             MASTER CONSOLE
SYS      DS    CL4' '             SYS  AUTHORIZATION
IO       DS    CL4' '             I/O  AUTHORIZATION
CONS     DS    CL5' '             CONS AUTHORIZATION
         DS    CL3' '
*NIT     DS    CL4' '             UNIT ADDR OF CONSOLE
TIME     DS    CL3' '             SECONDS REMAINING ON TIMER
SLASH    DS    CL1'/'
PAUSE    DS    CL3'1.0'           DELAY IN SECONDS
         DS    CL2' '
AREAA    DS    XL1
CNSLFLAG DS    XL1
THRUFLAG DS    XL1
AUTOFLAG DS    XL1
ISSUFLAG DS    XL1
RESHOWFL DS    XL1
HELPFLAG DS    XL1
USERFLAG DS    XL1
CONSFLAG DS    XL1
CLRFLAG  DS    XL1
IPLFLAG  DS    XL1
CMDFLAG  DS    XL1
ATTNFLG  DS    XL1                                              KMB1
WFLAG2   DS    XL1                 FLAGS 2                      KMB1
$2PRIM   EQU   X'80'               USE PRIMARY                  KMB1
$2ALT    EQU   X'40'               USE ALTERNATE SIZE           KMB1
$2USE14  EQU   X'20'               USE 14 BIT SBA               KMB1
CONSCURR DS    F                   CONSOLE TO BE LOOKED AT
CONSASID DS    F                   'CONSOLE' ASID FOR CMS
CONL     DS    F
SCNL     DS    F                                                KMB1
WMGCRE   MGCRE  MF=L                                            KMB2
WGTTERM  GTTERM PRMSZE=0,ALTSZE=0,MF=L                          KMB1
TERMOROW DS    A                   ORIGINAL TERM ROWS           KMB1
TERMOCOL DS    A                   ORIGINAL TERM COLS           KMB1
PRMSZROW DS    A                   PRIMARY   ROW SIZE           KMB1
PRMSZCOL DS    A                   PRIMARY   COL SIZE           KMB1
ALTSZROW DS    A                   ALTERNATE ROW SIZE           KMB1
ALTSZCOL DS    A                   ALTERNATE COL SIZE           KMB1
PRMSIZE  DS    H                   PRIMARY SIZE                 KMB1
ALTSIZE  DS    H                   ALTERNATE SIZE               KMB1
TERMROWS DS    H                   TERMINAL ROWS                KMB1
TERMCOLS DS    H                   TERMINAL COLUMNS             KMB1
TERMMOVE DS    H                   MAX DATA TO MOVE             KMB1
CONROW   DS    H                   NUM DISPLAY ROWS ON CONSOLE  KMB1
CONCOL   DS    H                   NUM COLUMNS ON CONSOLE & SBA KMB1
CONCOLM6 DS    H                   LEN OF CONSOLE DATA-1        KMB1
SBACMD   DS    XL2'0000'           CURRENT SBA                  KMB1
TIMER    DS    F
RTME     DS    H
RNUM     DS    H
USER     DS    CL8            CONSOLE NAME
TYPE     DS    CL1
USERID   DS    CL7
TABAREA  DS    CL77
SELCODE  DS    CL3            LINE SELECTION CODE
SELSAVE  DS    CL3            LINE SELECTION CODE SAVE AREA
WORK     DS    D
DOUBLWD  DS    D
IPLDATE  DS    F
IPLTIME  DS    F
STAXLIST STAX  ATTNEXIT,MF=L                                    KMB1
WTOCMD   DS    CL104
SCREEN   DS    XL1                 WCC - TERMINAL' SCREEN
         DS    27CL142                                          KMB1
         DS    CL124     EXTRA FOR MOD5
SCRLEN   EQU   *-SCREEN
BUF      DS    60CL142             CONSOLE SCREEN               KMB1
BUFLEN   EQU   *-BUF
WORKLENG EQU   *-WORKAREA
         PRINT NOGEN
         TITLE '*** TSO USER PROFILE TABLE DSECT ***'
         IKJUPT                    TSO USER PROFILE TABLE
         TITLE '*** COMMUNICATION VECTOR TABLE ***'
         CVT   DSECT=YES
         TITLE '*** J S C B ***'
         IEZJSCB
         TITLE '*** T  C  B ***'
         IKJTCB DSECT=YES
         TITLE '*** RDCM DSECT ***'
*        IEECRDCM                                               ZOS19
         IEERDCM                                                ZOS19
         TITLE '*** TDCM DSECT ***'
         PRINT GEN
*IEETDCM DSECT ,                                                ZOS19
*        IEECDCM                                                ZOS19
STRTDCM  EQU   DCMSTRT                                          ZOS19
         IEETDCM                   ,                            ZOS19
         PRINT   GEN
         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***'
         IEECUCM FORMAT=NEW,LIST=YES                            KMB1
UCMSYSE  EQU   BIT4                                             ZOS19
UCMDISPA EQU   BIT0                                             ZOS19
         PRINT  NOGEN
         IHAASVT
         TITLE '*** ADDRESS SPACE CONTROL BLOCK ***'
         IHAASCB
         TITLE '*** TSB DSECT ***'
         IKJTSB LIST=YES
         TITLE '*** CHAIN     ***'
         IEECHAIN
         IEESMCA
         IHAASXB                   ASXB ---------                  KMB1
         IHAPSA                    PSA  ---------                  KMB1
         IHAACEE                   ACEE ---------                  KMB1
         IEFUCBOB PREFIX=YES
         YREGS ,
         END
