         PUNCH ' ORDER COPYTP(P)'
         PUNCH ' ORDER RTAPE2(P)'
COPYTP#  TITLE ' PROGRAM TO  COPY TAPE TO TAPE SEVERAL FILES'
* ----------------------------------------------------------
* ATTRIBUTES NORENT, AMODE=24, RMODE=24---------------------
* ----------------------------------------------------------
*--------------------------------------------------------------------*
*        COPY TAPE TO TAPE, MIRROR  IMAGE                            *
*        THIS WILL COPY TAPES THAT NO OTHER UTILITY WILL !           *
*        SUPPORTS 256K BLKSIZE                                       *
* SJB3   CHECK TO SEE IF SYSUT2 IS DD DUMMY (MAPTAPE) AND NEVER  CALL*
*              WTAPE                                                 *
* KBASS  0517-11    GOT RID OF CONNECT/RELEASE MACROS                *
* KBASS  0517-11    MOVED MOST MODIFED DATA TO DYNAMIC STORAGE       *
*--------------------------------------------------------------------*
*    //SB1      EXEC PGM=COPYTP  ,PARM='003'
*    //STEPLIB  DD  DISP=SHR,DSN=KBASS.PERM.LOAD
*    //SYSPRINT DD  SYSOUT=*
*    //SYSUT1   DD  DSN=&&I1,DISP=(OLD,PASS),UNIT=CTAPE1,
*    //             VOL=(,RETAIN,SER=201226),
*    //             LABEL=(1,BLP,EXPDT=98000)
*    //SYSUT2   DD  DSN=&&O1,DISP=(NEW,PASS),UNIT=CTAPE1,
*    //             VOL=(,RETAIN,SER=XX1226),
*    //             LABEL=(1,BLP,EXPDT=98000)
*--------------------------------------------------------------------*
*        CAN BE USED TO MAP A TAPE VIA SYSUT2 DD DUMMY               *
*--------------------------------------------------------------------*
*
* SINGLE FILE, SINGLE VOLUME
* |VOL1|HDR1|HDR2|TM|          FILE-A |TM|EOF1|EOF2|TM|TM ...
*
* SINGLE FILE, MULTI  VOLUME
* |VOL1|HDR1|HDR2|TM| 1ST PART FILE-A |TM|EOV1|EOV2|TM ...
* |VOL1|HDR1|HDR2|TM| 2ND PART FILE-A |TM|EOV1|EOV2|TM ...
* |VOL1|HDR1|HDR2|TM| LASTPART FILE-A |TM|EOF1|EOF2|TM|TM ...
*
*
         MACRO
&L       CNVT  &FLD,&EMASK,&LENGTH,&OFF
&L       CVD   R0,WDEC
         OI    WDEC+7,X'0F'
         MVC   &FLD.(&LENGTH),&EMASK
         ED    &FLD.(&LENGTH),WDEC+&OFF
         MEND
*        PRINT NOGEN
&MAXERR  SETA  0010                MAX IS 4096, USING LA
         EJECT
COPYTP   CSECT
COPYTP   AMODE 24
COPYTP   RMODE 24
         ENTRY COPYTP
         SAVE  (14,12),T,COPYTPX_&SYSDATC._&SYSTIME.
         LR    R12,R15
         USING COPYTP,R12
         LR    R11,R1
*--------------------------------------------------------------------*
*              GET STORAGE AND CHAIN SAVE AREAS                      *
*--------------------------------------------------------------------*
         STORAGE OBTAIN,SP=1,LENGTH=LWORK                       0517-11
         LR    R3,R1                                            0517-11
         ST    R13,4(,R3)          SAVE THE CALLER'S R13        0517-11
         ST    R3,8(,R13)                                       0517-11
         LR    R13,R3                                           0517-11
         USING WORK,R13                                         0517-11
         XC    WCLEAR1(WCLEAR1L),WCLEAR1 CLEAR SOME STORAGE     0517-11
         LR    R1,R11                                               SJB
*--------------------------------------------------------------------*
*              PROCESS PARM FIELD TO SEE IF NNN FILES TO COPY THERE  *
*--------------------------------------------------------------------*
         L     R1,0(,R1)           ADDR OF PARM
         LH    R2,0(,R1)           LENGTH OF PARM
         MVI   VOLOPT,0            SET OPTION J OFF                CBT1
         CH    R2,=H'0'            IF NO PERM                      CBT1
         BE    PARMJX                SKIP CHECK FOR PARM=J         CBT1
         CLI   2(R1),C'J'          IF PARM BEGINS WITH 'J'         CBT1
         BNE   PARMJX                THEN                          CBT1
         MVI   VOLOPT,1              SET OPTION J                  CBT1
         L     R11,NINES             SET R11 TO NINES              CBT1
         CH    R2,=H'1'              IF NOTHING FOLLOWS J          CBT1
         BE    OK2                     USE NINES                   CBT1
         CLI   3(R1),C','            IF NO COMMA AFTER J           CBT1
         BNE   BAD                     BAD PARM                    CBT1
         LA    R1,2(,R1)             ADJUST R1 BY +2               CBT1
         SH    R2,=H'2'              ADJUST R2 BY -2               CBT1
PARMJX   DS    0H                                                  CBT1
         CH    R2,=H'5'            SEE IF MORE THAN 3 DIG
         BH    BAD
         CH    R2,=H'0'            SEE IF NO PARM
         BH    OK
         L     R11,NINES
         B     OK2
BAD      WTO   'COPYTP - PARM FIELD ERROR'
         ABEND 2
OK       DS    0H
         BCTR  R2,0                     DECR BY 1 FOR PACK
PK       PACK  WDEC(8),2(*-*,R1)        PACK NUMBER
         EX    R2,PK
         CVB   R11,WDEC                 CONVERT IT TO BINARY
         LTR   R11,R11                  MAKE SURE ITS POSITIVE
         BNP   BAD
OK2      DS    0H
         MVI   WFLAG,0                                             SJB3
         CALL  OPENT,(ONE,ONE),MF=(E,WCALL) OPEN SYSUT1 FOR INPUT
*--------------------------------------------------------------------*
*              CHECK TO SEE IF SYSUT2 IS DD DUMMY (MAPTAPE)          *
*        IF SO THEN SET $NULL2 AND NEVER CALL WTAPE                  *
*--------------------------------------------------------------------*
         DEVTYPE =CL8'SYSUT2',WDEC                                 SJB3
         CLC   WDEC,=F'0'                IS A DD DUMMY             SJB3
         BNE   XOPEN2                                              SJB3
         OI    WFLAG,$NULL2                                        SJB3
         B     XOPEN2A                                             SJB3
XOPEN2   DS    0H                                                  SJB3
         CLI   VOLOPT,0                                            CBT1
         BE    DUPEVOL                                             CBT1
         CALL  OPENT,(TWO,THR),MF=(E,WCALL) OPEN SYSUT2 FOR OUTPUT CBT1
         B     XOPEN2A                                             CBT1
DUPEVOL  DS    0H                                                  CBT1
         CALL  OPENT,(TWO,TWO),MF=(E,WCALL) OPEN SYSUT2 FOR OUTPUT
XOPEN2A  DS    0H                                                  SJB3
         OPEN  (PTR,(OUTPUT))           STATITICS FILE
*
         PUT   PTR,TITL1
         PUT   PTR,TITL2
         MVC   WTMIN,NINES              MIN BLOCK/TAPE = 999999
         MVC   WTMAX,ZERO               MAX BLOCK/TAPE = 0
         LA    R3,0                     # BLOCKS/TAPE = 0
         LA    R8,0                     # FILES  DONE = 0
*
LOOP     LA    R4,0                     # BLOCKS/FILE = 0
         LA    R8,1(,R8)                COUNT # FILES DONE
*
         MVC   WBMIN,NINES              MIN BLOCK/FILE = 999999
         MVC   WBMAX,ZERO               MAX BLOCK/FILE = 0
*
LOOP1    LA    R6,&MAXERR               ERROR COUNTER
         TM    WFLAG,$EOV1              WAS LAST READ AN EOV1?
         BO    EOF                       YES
*
LOOP2    LA    R2,WBUF                  READ TAPE
         CALL  RTAPE2,(ONE,(2),WBYTES),MF=(E,WCALL) READ TAPE
         C     R15,FOUR                 EOF?
         BE    EOF                          YES
         C     R15,EIGHT                ERR?
         BNE   RGOOD                        NOPE
         LA    R1,=CL8'READ'       SAY WHERE THE ERR CAME FROM  SJB5
         BAL   R14,ERR                  YES, GOTO ERR ROUTINE
         B     LOOP2                    TRY READ AGAIN
RGOOD    DS    0H
         CLC   =C'VOL1',WBUF
         BE    RGVOL1
         CLC   =C'HDR1',WBUF
         BE    RGDSN1
         CLC   =C'HDR2',WBUF
         BE    RGDSN2
         CLC   =C'EOF1',WBUF
         BE    RGDSN3F
         CLC   =C'EOV1',WBUF       ONLY IF DSN SPANS VOLUMES
         BE    RGDSN3V
         B     RG0100
RGVOL1   DS    0H                  VOL1 FOUND
         MVC   VOLSER,WBUF+04
         B     RG0100
RGDSN1   DS    0H                  HDR1 FOUND
         MVC   DSNAM,WBUF+04       LAST 17 BYTES OF DSN
         B     RG0100
RGDSN2   DS    0H                  HDR2 FOUND
         MVC   RECFM+0(1),WBUF+04  RECFM-1
         MVC   RECFM+1(1),WBUF+38  RECFM-2
         MVI   RECFM+2,C'/'
         MVC   LRECL,WBUF+10       LRECL
         MVI   LRECL+5,C'/'
         MVC   BLKSZ,WBUF+05       BLKSIZE
         MVC   JOBSTEP,WBUF+17     JOB-STEP
         B     RG0100
RGDSN3V  DS    0H                  EOV1 FOUND (DSN SPANS VOLUMES)
         MVC   VOLSER(6),=CL6'EOV'
         OI    WFLAG,$EOV1         SET EOV1 FLAG
         B     RGDSN3F2
RGDSN3F  DS    0H                  EOF1 FOUND
         MVC   VOLSER(6),=CL6'EOF'
RGDSN3F2 DS    0H
*--------------------------------------------------------------------*
*              ADD CREATION DATE  CYYDDD WHERE C=B(1900), =0(2000)   *
*--------------------------------------------------------------------*
         MVC   DSNAM,BLANKS
         MVC   DSNAM+9+0(2),=C'19'
         CLI   WBUF+41,C'0'        BLANK IS 1900, 0=2000, 1=2100
         BL    CRDT0100            NO
         MVC   DSNAM+9+0(2),=C'20'
         OC    DSNAM+9+1(1),WBUF+41 MAKE IT 20, 21, 22 ETC.
CRDT0100 DS    0H
         MVC   DSNAM+9+2(2),WBUF+42 MOVE IN YY
         MVI   DSNAM+9+4,C'.'      .
         MVC   DSNAM+9+5(3),WBUF+44 MOVE IN DDD
*--------------------------------------------------------------------*
*              ADD DATE AND TIME TO THE EOF LINE WHERE JOBSTEP IS    *
*--------------------------------------------------------------------*
         TIME  DEC                 R0=HHMMSSTT R1=0CYYDDDF
         STM   R0,R1,WDEC2         WDEC2(0-3)=TIME, WDEC2(4-7)=DATE
         TR    WDEC2+4(1),TRANCENT CNVT 00 TO 19, 01 TO 20 ETC
         OI    WDEC2+4+3,X'0F'     ZONE IT.
         UNPK  JOBSTEP+00+00(05),WDEC2+4+0(3) YYYY
         MVI   JOBSTEP+00+04,C'.'                .
         UNPK  JOBSTEP+05+00(03),WDEC2+4+2(2)     DDD
*                 WDEC2+4          TIME=HHMMSSTT
         UNPK  JOBSTEP+09+00(03),WDEC2+0+0(2) HH
         MVI   JOBSTEP+09+02,C':'               :
         UNPK  JOBSTEP+09+03(03),WDEC2+0+1(2)    MM
         MVI   JOBSTEP+09+05,C':'                  :
         UNPK  JOBSTEP+09+06(03),WDEC2+0+2(2)       SS
         MVI   JOBSTEP+09+08,C' '
RGDSN3   DS    0H
         CLC   =C'0000',WBUF+76      IS IT ALL ZEROS?
         BE    RGDSN3A
         MVC   BLKSZ-04(04),WBUF+76 MOVE IN TOP 4 BYTES OF #BLKS
RGDSN3A  DS    0H
         MVC   BLKSZ(06),WBUF+54 MOVE IN LAST 6 BYTES OF IT
RG0100   DS    0H
         MVI   WEOT,X'00'          TURN OFF EOT                    SJB
         MVI   WIOERROR,X'00'      TURN OFF IOERROR FOR THIS REC   SJB3
         LA    R3,1(,R3)                # BLOCKS/TAPE
         LA    R4,1(,R4)                # BLOCKS/FILE
         L     R5,WBYTES                # BYTES/BLOCK
*
*    CHECK FOR MIN NUMBER OF BYTES IN ONE BLOCK AND TOTAL
*
         C     R5,WBMIN              NEW MIN BLOCK/FILE
         BNL   MAXCHECK                NOPE
         ST    R5,WBMIN              SAVE NEW MIN/FILE
         C     R5,WTMIN              NEW MIN BLOCK/TAPE
         BNL   MAXCHECK                NOPE
         ST    R5,WTMIN              SAVE NEW MIN/TAPE
*
*    CHECK FOR MAX NUMBER OF BYTES IN ONE BLOCK AND TOTAL
*
MAXCHECK C     R5,WBMAX               NEW MAX BLOCK/FILE
         BNH   WRITE                    NOPE
         ST    R5,WBMAX               SAVE NEW MAX/FILE
         C     R5,WTMAX               NEW MAX BLOCK/TAPE
         BNH   WRITE                    NOPE
         ST    R5,WTMAX               SAVE NEW MAX/TAPE
*
WRITE    LA    R2,WBUF                 WRITE TAPE
         TM    WFLAG,$NULL2        IS SYSUT2 DD DUMMY?          SJB3
         BO    LOOP1               YES, DON'T WRITE             SJB3
         CALL  WTAPE,(TWO,(2),WBYTES),MF=(E,WCALL) WRITE TAPE
         C     R15,FOUR                ERR?
         BNE   LOOP1                       NOPE
         LA    R1,=CL8'WRITE'      SAY WHERE THE ERR CAME FROM  SJB5
         BAL   R14,ERR                 GO ERR ROUTINE
         ABEND 1,DUMP
         B     WRITE
*
EOF      DS    0H
         TM    WFLAG,$NULL2        IS SYSUT2 DD DUMMY?          SJB3
         BO    EOF2                YES, DON'T WRITE             SJB3
         CALL  WTMARK,(TWO),MF=(E,WCALL) PUT EOF ON OUTPUT TAPE
EOF2     DS    0H                                               SJB3
         CLI   WEOT,X'FF'          SECOND EOT
         BE    ENDTAPE             YES,GO TERM
*
EOFO     DS    0H
         MVI   WEOT,X'FF'          INDICATE EOF
         BAL   R9,REPORT
*
         TM    WFLAG,$EOV1         ONLY 1 EOF AFTER THE EOV
         BO    ENDTAPE              YES, END OF TAPE
*
         BCT   R11,LOOP                ALL OF FILES DONE?
*
ENDTAPE  CALL  CLOSET,(ONE),MF=(E,WCALL) YES,CLOSE THEM ALL
         TM    WFLAG,$NULL2        IS SYSUT2 DD DUMMY?          SJB3
         BO    EOT2                YES, DON'T WRITE             SJB3
         CALL  CLOSET,(TWO),MF=(E,WCALL)
EOT2     DS    0H                                               SJB3
         MVC   WBMIN,WTMIN
         MVC   WBMAX,WTMAX
         LR    R4,R3
         MVI   WEOJ,X'FF'             END OF JOB FLAG
         BAL   R9,REPORT
*
         CLOSE (PTR)
         LR    R1,R13                                           0517-11
         L     R13,4(,R13)                                      0517-11
         STORAGE RELEASE,SP=1,LENGTH=LWORK,ADDR=(1)             0517-11
         RETURN (14,12),RC=0           BYE                      0517-11
*
REPORT   DS    0H
         CLI   WEOJ,X'FF'
         BNE   NOTEOJ
         PUT   PTR,TITL4               PRINT DASHES
         MVC   FILEN,BLANKS
         B     REPEOJ
*
NOTEOJ   LR    R0,R8
         CNVT  WDEC2,MASK1,6,5     R0=INPUT,
         MVC   FILEN,WDEC2+1
REPEOJ   DS    0H
*
         LR    R0,R4
         CNVT  BLKREAD,MASK2,12,3
*
         L     R0,WBMIN
         CNVT  MINBLK,MASK3,10,4
*
         L     R0,WBMAX
         CNVT  MAXBLK,MASK3,10,4
         PUT   PTR,TITL3
         MVC   VOLSER(VOLSERLN),BLANKS
         BR    R9
*
ERR      DS    0H
         ST    R14,WSAVR142
         CLI   WIOERROR,X'00'      IOERROR ON SAME REC 2ND TIME SJB3
         BNE   ERRDIE                YES
*
         MVC   ERRTASK,0(R1)       MOVE IN WHERE ERR CAME FROM  SJB5
         LR    R0,R4
         CNVT  ERRBLK,MASK2,12,3
         PUT   PTR,ERRMSG
*
         BCT   R6,ERRET            DECREMENT MAX ERROR COUNT
         LA    R6,&MAXERR
         MVC   WFSREC,=F'1'                                     SJB
         CALL  FSREC,(ONE,WFSREC),MF=(E,WCALL) SKIP ONE RECORD
         CLC   WFSREC,=F'1'        SKIP RECORD FAILED           SJB4
         BE    ERRDIE              RIGHT, GO DIE                SJB4
         MVI   WIOERROR,X'FF'
         B     ERRET
ERRDIE   DS    0H                  IOERROR 2ND TIME ON RECORD   SJB3
         ABEND 101                                              SJB3
ERRET    DS    0H
         L     R14,WSAVR142
         BR    R14
         LTORG
*--------------------------------------------------------------------*
*              NON MODIFIED VARIABLES                                *
*--------------------------------------------------------------------*
ZERO     DC    F'0'
ONE      DC    F'1'
TWO      DC    F'2'
THR      DC    F'3'                                                CBT1
FOUR     DC    F'4'
EIGHT    DC    F'8'
NINES    DC    F'99999999'
BLANKS   DC    CL133' '
*
*--------------------------------------------------------------------*
*                  MODIFIED VARIABLES (NON-REENTRANT)                *
*--------------------------------------------------------------------*
TITL1    DC   CL133'1       NUMBER OF      LENGTH OF       LENGTH OF  '
TITL2    DC   CL133' FILE  BLOCKS READ   SHORTEST BLOCK  LONGEST BLOCK X
               VOLSER RF/LRECL/BLKSZ      DSNAME-17         JOB-STEP'
TITL3    DC    CL133' '
         ORG   TITL3
FILEN    DC    CL5' '
FILL1    DC    CL1' '
BLKREAD  DC    CL12' '
FILL2    DC    CL7' '
MINBLK   DC    CL10' '
FILL3    DC    CL5' '
MAXBLK   DS    CL10' '
         DS    C' '
VOLSER   DC    CL6' ',C' '
RECFM    DC    CL2' ',C' '
LRECL    DC    CL5' ',C' '
BLKSZ    DC    CL10' ',C' '
DSNAM    DC    CL17' ',C' '
JOBSTEP  DC    CL17' '
VOLSERLN EQU   *-VOLSER
         ORG   TITL3+133
TITL4    DS    0CL133
         DC    52CL1'-',CL81' '
ERRMSG   DC    CL133' '
         ORG   ERRMSG
         DC    C'**** ERROR ON BLOCK # '
ERRBLK   DC    CL12' '
         DC    C' **** DOING A '
ERRTASK  DC    CL8' '
         ORG   ERRMSG+133
TRANCENT DC    X'19202122'         CENTURY CONVERT 0=19, 1=20,  ETC
MASK1    DC    X'402020202120'
MASK2    DC    X'402020206B2020206B202120'
MASK3    DC    X'40206B2020206B202120'
VOLOPT   DC    AL1(0)                                              CBT1
*
         PRINT NOGEN
PTR      DCB   DDNAME=SYSPRINT,MACRF=(PM),LRECL=133,RECFM=FBA,         X
               BLKSIZE=3990,DSORG=PS,BUFNO=2
*--------------------------------------------------------------------*
*              DYNAMIC AREA                                          *
*--------------------------------------------------------------------*
WORK     DSECT                                                      SJB
SAVEA    DS    9D                                                   SJB
WDEC     DS    D                                                0517-11
WDEC2    DS    D                                                0517-11
WCLEAR1  EQU   *                                                0517-11
WSAVR14  DC    F'0'                                             0517-11
WSAVR142 DC    F'0'                                             0517-11
WFSREC   DC    F'0'                                             0517-11
WBYTES   DC    F'0'                                             0517-11
WBMIN    DC    F'0'                                             0517-11
WBMAX    DC    F'0'                                             0517-11
WTMIN    DC    F'0'                                             0517-11
WTMAX    DC    F'0'                                             0517-11
WCALL    DC    6F'0'                                            0517-11
WFLAG    DC    X'00'                                              SJB3
$NULL2   EQU   X'80'               SYSUT2 IS "DD  DUMMY" MAPTAPE  SJB3
$EOV1    EQU   X'40'               EOV1 HAS BEEN FOUND            SJB3
WEOJ     DC    X'00'                                            0517-11
WEOT     DC    X'00'                                            0517-11
WIOERROR DC    X'00'                                            0517-11
WCLEAR1L EQU   *-WCLEAR1                                        0517-11
WBUF     DS    256CL1024                                            SJB
WBUFFLN  EQU   *-WBUF
LWORK    EQU   *-WORK                                               SJB
         YREGS ,                                                    SJB
         END
