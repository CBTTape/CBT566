&GEN     SETC  'GEN'
***********************************************************************
*        DUMP THE ASVT CONTROL BLOCK                                  *
***********************************************************************
         SPACE 3
*--------------------------------------------------------------------*
*    ALL OF THE WORK HERE WAS DONE BY SAM BASS.  WHAT WAS NECESSARY  *
*    TO DUMP THE STORAGE, WAS TO SUPPLY A BEGINNING ADDRESS TO       *
*    DUMP, AND THE LENGTH OF STORAGE TO DUMP.  THIS WAS DONE BY      *
*    SAM GOLOB.  THE REST WAS DONE BY SAM BASS.                      *
*--------------------------------------------------------------------*
*    YOU CAN DO IT TOO.  JUST SUPPLY THE CONTROL BLOCK INFORMATION   *
*    BELOW, AND LET THE PROGRAM DO THE REST OF THE WORK.       .     *
*--------------------------------------------------------------------*
*              REGISTER AND OTHER EQUATES                            *
*--------------------------------------------------------------------*
         SPACE 3
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
*--------------------------------------------------------------------*
*              $$SUB MACRO         NEEDED BY PRTDUMP                 *
*--------------------------------------------------------------------*
         PRINT OFF
         MACRO
&L       $$SUB
&L       STM   R14,R12,12(R13)     SAVE REGS
         LA    R14,72(,R13)        NEXT SAVE
         ST    R14,8(,R13)         CHAIN
         ST    R13,4(,R14)          SAVE
         LR    R13,R14             NEW SAVE
         MEND
         PRINT ON
         EJECT
DUMPASVT TITLE 'DUMPASVT - '
DUMPASVT AMODE 31
DUMPASVT RMODE 24
DUMPASVT CSECT
         SAVE  (14,12),T,'DUMPASVT_&SYSDATC._&SYSTIME.'
         LR    R12,R15            POINT BASE REGISTER TO ENTRY POINT
         USING DUMPASVT,R12
         LA    R2,SAVEAREA        POINT TO SAVEAREA
         ST    R13,SAVEAREA+4     POINTER TO CALLERS SAVEAREA
         ST    R2,8(,R13)         POINTER TO CALLED SAVEAREA
         LR    R13,R2             STANDARD POINTER TO SAVEAREA
*--------------------------------------------------------------------*
*              GET ASVT ADDRESS                                      *
*--------------------------------------------------------------------*
         L     R2,X'10'            GET ASVT ADDRESS - CVT FIRST
         USING CVT,R2
         L     R2,CVTASVT          POINT TO ASVT START
         LR    R4,R2
         USING ASVT,R4
         LA    R0,ASVTLEN          PICK UP ASVT HEADER LENGTH
         L     R9,ASVTMAXU         ACCOUNT FOR NUMBER OF DEFINED ASIDS
         BCTR  R9,0                ONE LESS
         SLL   R9,2                MULTIPLY BY 4
         AR    R0,R9               ADD TO BEGIN OF ASVT CONTROL BLOCK
         CVD   R0,DEC              TOTAL LENGTH TO DUMP
         MVC   DEC+08(6),=X'402020202120'
         ED    DEC+08(6),DEC+5
         MVC   MSG1+30(4),DEC+08+2
         ST    R0,DEC
         UNPK  DEC+8(05),DEC+2(3)
         MVC   MSG1+35(3),DEC+8+1
         TR    MSG1+35(3),TRANS-240
         LA    R1,MSG1
         BAL   R14,PRTDMSG
         LR    R1,R4
         BAL   R14,PRTDUMP
         LA    R0,ASVTLEN          PICK UP ENTRY LENGTH
         LA    R1,MSG2
         BAL   R14,PRTDMSG
         L     R13,4(,R13)
         RETURN (14,12),RC=0
MSG1     WTO   '*** DUMP OF ASVT - LENGTH=XXXX/XXX ***',MF=L,          X
               ROUTCDE=11
MSG2     WTO   '*** END  OF ASVT ***',MF=L,ROUTCDE=11
SAVEAREA DS    (4*9)D'0'
DEC      DS    2D
TRANS    DC    C'0123456789ABCDEF'
         SPACE 2
         COPY  PRTDUMP
         PRINT GEN
         LTORG ,
         IHAASVT
         CVT   DSECT=YES,LIST=YES
         END
         COPY  EPUTL
