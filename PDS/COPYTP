COPYTP#  TITLE ' PROGRAM TO  COPY TAPE TO TAPE SEVERAL FILES'
*--------------------------------------------------------------------*
*        COPY TAPE TO TAPE, MIRROR  IMAGE                            *
*        THIS WILL COPY TAPES THAT NO OTHER UTILITY WILL             *
*        SUPPORTS 64K BLKSIZE                                        *
* SJB3   CHECK TO SEE IF SYSUT2 IS DD DUMMY (MAPTAPE) AND NEVER  CALL*
*              WTAPE                                                 *
*--------------------------------------------------------------------*
*    //SB1      EXEC PGM=COPYTP  ,PARM='003'
*    //STEPLIB  DD  DISP=SHR,DSN=KBASS.PERM.LOAD
*    //SYSPRINT DD  SYSOUT=*
*    //SYSUT1   DD  DSN=&&I1,DISP=(OLD,PASS),UNIT=CTAPE1,
*    //             VOL=(,RETAIN,SER=201226),
*    //             LABEL=(1,BLP,EXPDT=98000)
*    //SYSUT2   DD  DSN=&&O1,DISP=(NEW,PASS),UNIT=CTAPE1,
*    //             VOL=(,RETAIN,SER=XX1226),
*    //             LABEL=(1,BLP,EXPDT=98000)
*--------------------------------------------------------------------*
*        CAN BE USED TO MAP A TAPE VIA SYSUT2 DD DUMMY               *
*--------------------------------------------------------------------*
*
         MACRO
&L       CNVT  &FLD,&EMASK,&LENGTH,&OFF
&L       CVD   R0,DEC
         OI    DEC+7,X'0F'
         MVC   &FLD.(&LENGTH),&EMASK
         ED    &FLD.(&LENGTH),DEC+&OFF
         MEND
*        PRINT NOGEN
&MAXERR  SETA  0100                MAX IS 4096, USING LA
         EJECT
COPYTP   CSECT
         CONNECT LSIZE,WORK,BASE=R12,PARM=R11,LI=L                  SJB
         ENTRY COPYTP
         LR    R1,R11                                               SJB
         L     R1,0(,R1)           ADDR OF PARM
         LH    R2,0(,R1)           LENGTH OF PARM
         CH    R2,=H'5'            SEE IF MORE THAN 3 DIG
         BH    BAD
         CH    R2,=H'0'            SEE IF NO PARM
         BH    OK
         L     R11,=F'99999'
         B     OK2
BAD      WTO   'COPYTP - PARM FIELD ERROR'
         ABEND 2
OK       DS    0H
         BCTR  R2,0                     DECR BY 1 FOR PACK
PK       PACK  DEC(8),2(*-*,R1)         PACK NUMBER
         EX    R2,PK
         CVB   R11,DEC                  CONVERT IT TO BINARY
         LTR   R11,R11                  MAKE SURE ITS POSITIVE
         BNP   BAD
OK2      DS    0H
         MVI   FLAG,0                                           SJB3
         CALL  OPENT,(ONE,ONE)          OPEN SYSUT1 FOR INPUT
*--------------------------------------------------------------------*
*              CHECK TO SEE IF SYSUT2 IS DD DUMMY (MAPTAPE)          *
*        IF SO THEN SET $NULL2 AND NEVER CALL WTAPE                  *
*--------------------------------------------------------------------*
         DEVTYPE =CL8'SYSUT2',DEC                                  SJB3
         CLC   DEC,=F'0'                 IS A DD DUMMY             SJB3
         BNE   XOPEN2                                              SJB3
         OI    FLAG,$NULL2                                         SJB3
         B     XOPEN2A                                             SJB3
XOPEN2   DS    0H                                                  SJB3
         CALL  OPENT,(TWO,TWO)          OPEN SYSUT2 FOR OUTPUT
XOPEN2A  DS    0H                                                  SJB3
         OPEN  (PTR,(OUTPUT))           STATITICS FILE
*
         PUT   PTR,TITL1
         PUT   PTR,TITL2
         MVC   TMIN,NINES               MIN BLOCK/TAPE = 999999
         MVC   TMAX,ZERO                MAX BLOCK/TAPE = 0
         LA    R3,0                     # BLOCKS/TAPE = 0
         LA    R8,0                     # FILES  DONE = 0
*
LOOP     LA    R4,0                     # BLOCKS/FILE = 0
         LA    R8,1(,R8)                COUNT # FILES DONE
*
         MVC   MIN,NINES                MIN BLOCK/FILE = 999999
         MVC   MAX,ZERO                 MAX BLOCK/FILE = 0
*
LOOP1    LA    R6,&MAXERR               ERROR COUNTER
*
LOOP2    LA    R2,BUF                   READ TAPE
         CALL  RTAPE,(ONE,(2),BYTES)    READ TAPE
         C     R15,FOUR                 EOF?
         BE    EOF                          YES
         C     R15,EIGHT                ERR?
         BNE   RGOOD                        NOPE
         LA    R1,=CL8'READ'       SAY WHERE THE ERR CAME FROM  SJB5
         BAL   R14,ERR                  YES, GOTO ERR ROUTINE
         B     LOOP2                    TRY READ AGAIN
RGOOD    DS    0H
         CLC   =C'VOL1',BUF
         BE    RGVOL1
         CLC   =C'HDR1',BUF
         BE    RGDSN1
         CLC   =C'HDR2',BUF
         BE    RGDSN2
         CLC   =C'EOF1',BUF
         BE    RGDSN3F
         CLC   =C'EOV1',BUF        ONLY OF DSN SPANS VOLUMES
         BE    RGDSN3V
         B     RG0100
RGVOL1   DS    0H                  VOL1 FOUND
         MVC   VOLSER,BUF+04
         B     RG0100
RGDSN1   DS    0H                  HDR1 FOUND
         MVC   DSNAM,BUF+04        LAST 17 BYTES OF DSN
         B     RG0100
RGDSN2   DS    0H                  HDR2 FOUND
         MVC   RECFM+0(1),BUF+04   RECFM-1
         MVC   RECFM+1(1),BUF+38   RECFM-2
         MVI   RECFM+2,C'/'
         MVC   LRECL,BUF+10        LRECL
         MVI   LRECL+5,C'/'
         MVC   BLKSZ,BUF+05        BLKSIZE
         MVC   JOBSTEP,BUF+17      JOB-STEP
         B     RG0100
RGDSN3V  DS    0H                  EOV1 FOUND (DSN SPANS VOLUMES)
         MVC   VOLSER(3),=C'EOV'
         B     RGDSN3
RGDSN3F  DS    0H                  EOF1 FOUND
         MVC   VOLSER(3),=C'EOF'
*--------------------------------------------------------------------*
*              ADD CREATION DATE  CYYDDD WHERE C=B(1900), =0(2000)   *
*--------------------------------------------------------------------*
         MVC   DSNAM,BLANKS
         MVC   DSNAM+9+0(2),=C'19'
         CLI   BUF+41,C'0'         BLANK IS 1900, 0=2000, 1=2100
         BL    CRDT0100            NO
         MVC   DSNAM+9+0(2),=C'20'
         OC    DSNAM+9+1(1),BUF+41 MAKE IT 20, 21, 22 ETC.
CRDT0100 DS    0H
         MVC   DSNAM+9+2(2),BUF+42 MOVE IN YY
         MVI   DSNAM+9+4,C'.'      .
         MVC   DSNAM+9+5(3),BUF+44 MOVE IN DDD
*--------------------------------------------------------------------*
*              ADD DATE AND TIME TO THE EOF LINE WHERE JOBSTEP IS    *
*--------------------------------------------------------------------*
         TIME  DEC                 R0=HHMMSSTT R1=0CYYDDDF
         STM   R0,R1,DEC2          DEC2(0-3)=TIME, DEC2(4-7)=DATE
         TR    DEC2+4(1),TRANCENT  CNVT 00 TO 19, 01 TO 20 ETC
         OI    DEC2+4+3,X'0F'      ZONE IT.
         UNPK  JOBSTEP+00+00(05),DEC2+4+0(3) YYYY
         MVI   JOBSTEP+00+04,C'.'                .
         UNPK  JOBSTEP+05+00(03),DEC2+4+2(2)      DDD
*                 DEC2+4           TIME=HHMMSSTT
         UNPK  JOBSTEP+09+00(03),DEC2+0+0(2)  HH
         MVI   JOBSTEP+09+02,C':'               :
         UNPK  JOBSTEP+09+03(03),DEC2+0+1(2)     MM
         MVI   JOBSTEP+09+05,C':'                  :
         UNPK  JOBSTEP+09+06(03),DEC2+0+2(2)        SS
         MVI   JOBSTEP+09+08,C' '
RGDSN3   DS    0H
         CLC   =C'0000',BUF+76       IS IT ALL ZEROS?
         BE    RGDSN3A
         MVC   BLKSZ-04(04),BUF+76 MOVE IN TOP 4 BYTES OF #BLKS
RGDSN3A  DS    0H
         MVC   BLKSZ(06),BUF+54 MOVE IN LAST 6 BYTES OF IT
RG0100   DS    0H
         MVI   EOT,X'00'           TURN OFF EOT                    SJB
         MVI   IOERROR,X'00'       TURN OFF IOERROR FOR THIS REC   SJB3
         LA    R3,1(,R3)                # BLOCKS/TAPE
         LA    R4,1(,R4)                # BLOCKS/FILE
         L     R5,BYTES                 # BYTES/BLOCK
*
*    CHECK FOR MIN NUMBER OF  BYTES IN ONE BLOCK AND TOTAL
*
         C     R5,MIN                NEW MIN BLOCK/FILE
         BNL   MAXCHECK                NOPE
         ST    R5,MIN                SAVE NEW MIN/FILE
         C     R5,TMIN               NEW MIN BLOCK/TAPE
         BNL   MAXCHECK                NOPE
         ST    R5,TMIN               SAVE NEW MIN/TAPE
*
*    CHECK FOR MAX NUMBER OF  BYTES IN ONE BLOCK AND TOTAL
*
MAXCHECK C     R5,MAX                 NEW MAX BLOCK/FILE
         BNH   WRITE                    NOPE
         ST    R5,MAX                 SAVE NEW MAX/FILE
         C     R5,TMAX                NEW MAX BLOCK/TAPE
         BNH   WRITE                    NOPE
         ST    R5,TMAX                SAVE NEW MAX/TAPE
*
WRITE    LA    R2,BUF                  WRITE TAPE
         TM    FLAG,$NULL2         IS SYSUT2 DD DUMMY?          SJB3
         BO    LOOP1               YES, DON'T WRITE             SJB3
         CALL  WTAPE,(TWO,(2),BYTES)   WRITE TAPE
         C     R15,FOUR                ERR?
         BNE   LOOP1                       NOPE
         LA    R1,=CL8'WRITE'      SAY WHERE THE ERR CAME FROM  SJB5
         BAL   R14,ERR                 GO ERR ROUTINE
         ABEND 1,DUMP
         B     WRITE
*
EOF      DS    0H
         TM    FLAG,$NULL2         IS SYSUT2 DD DUMMY?          SJB3
         BO    EOF2                YES, DON'T WRITE             SJB3
         CALL  WTMARK,(TWO)            PUT EOF ON OUTPUT TAPE
EOF2     DS    0H                                               SJB3
         CLI   EOT,X'FF'           SECOND EOT
         BE    ENDTAPE             YES,GO TERM
         CLC   =C'EOV1',BUF        EOT? (ONLY OF DSN SPANS VOLS)
         BE    ENDTAPE             YES, END OF TAPE
*
EOFO     DS    0H
         MVI   EOT,X'FF'           INDICATE EOF
         BAL   R9,REPORT
         BCT   R11,LOOP                ALL OF FILES DONE?
ENDTAPE  CALL  CLOSET,(ONE)                YES,CLOSE THEM ALL
         TM    FLAG,$NULL2         IS SYSUT2 DD DUMMY?          SJB3
         BO    EOT2                YES, DON'T WRITE             SJB3
         CALL  CLOSET,(TWO)
EOT2     DS    0H                                               SJB3
         MVC   MIN,TMIN
         MVC   MAX,TMAX
         LR    R4,R3
         MVI   EOJ,X'FF'              END OF JOB FLAG
         BAL   R9,REPORT
         CLOSE (PTR)
         RELEASE LSIZE,RC=0,LI=L       BYE
*
REPORT   DS    0H
         TM    EOJ,X'FF'
         BZ    NOTEOJ
         PUT   PTR,TITL4               PRINT DASHES
         MVC   FILEN,BLANKS
         B     REPEOJ
*
NOTEOJ   LR    R0,R8
         CNVT  DEC2,MASK1,6,5      R0=INPUT,
         MVC   FILEN,DEC2+1
REPEOJ   DS    0H
*
         LR    R0,R4
         CNVT  BLKREAD,MASK2,12,3
*
         L     R0,MIN
         CNVT  MINBLK,MASK3,7,5
*
         L     R0,MAX
         CNVT  MAXBLK,MASK3,7,5
         PUT   PTR,TITL3
         MVC   VOLSER(VOLSERLN),BLANKS
         BR    R9
*
ERR      DS    0H
         ST    R14,SAVER142
         CLI   IOERROR,X'00'       IOERROR ON SAME REC 2ND TIME SJB3
         BNE   ERRDIE                YES
*
         MVC   ERRTASK,0(R1)       MOVE IN WHERE ERR CAME FROM  SJB5
         LR    R0,R4
         CNVT  ERRBLK,MASK2,12,3
         PUT   PTR,ERRMSG
*
         BCT   R6,ERRET            DECREMENT MAX ERROR COUNT
         LA    R6,&MAXERR
         MVC   FSREC,=F'1'                                      SJB
         CALL  FSREC,(ONE,FSREC)   SKIP ONE RECORD
         CLC   FSREC,=F'1'         SKIP RECORD FAILED           SJB4
         BE    ERRDIE              RIGHT, GO DIE                SJB4
         MVI   IOERROR,X'FF'
         B     ERRET
ERRDIE   DS    0H                  IOERROR 2ND TIME ON RECORD   SJB3
         ABEND 101                                              SJB3
ERRET    DS    0H
         L     R14,SAVER142
         BR    R14
FSREC    DC    F'1'                                                 SJB
DEC      DS    D
DEC2     DS    D
         LTORG
SAVER14  DC    F'0'
SAVER142 DC    F'0'
BYTES    DC    F'0'
ZERO     DC    F'0'
ONE      DC    F'1'
TWO      DC    F'2'
FOUR     DC    F'4'
EIGHT    DC    F'8'
NINES    DC    F'999999'
MIN      DC    F'0'
MAX      DC    F'0'
TMIN     DC    F'0'
TMAX     DC    F'0'
*
TITL1    DC   CL133'1       NUMBER OF      LENGTH OF       LENGTH OF  '
TITL2    DC   CL133' FILE  BLOCKS READ   SHORTEST BLOCK  LONGEST BLOCK X
               VOLSER RF/LRECL/BLKSZ DSNAME-17         JOB-STEP'
TITL3    DC    CL133' '
         ORG   TITL3
FILEN    DC    CL5' '
FILL1    DC    CL1' '
BLKREAD  DC    CL12' '
FILL2    DC    CL9' '
MINBLK   DC    CL7' '
FILL3    DC    CL9' '
MAXBLK   DS    CL7' '
         DS    C' '
VOLSER   DC    CL6' ',C' '
RECFM    DC    CL2' ',C' '
LRECL    DC    CL5' ',C' '
BLKSZ    DC    CL5' ',C' '
DSNAM    DC    CL17' ',C' '
JOBSTEP  DC    CL17' '
VOLSERLN EQU   *-VOLSER
         ORG   TITL3+133
TITL4    DS    0CL133
         DC    52CL1'-',CL81' '
ERRMSG   DC    CL133' '
         ORG   ERRMSG
         DC    C'**** ERROR ON BLOCK # '
ERRBLK   DC    CL12' '
         DC    C' **** DOING A '
ERRTASK  DC    CL8' '
         ORG   ERRMSG+133
TRANCENT DC    X'19202122'         CENTURY CONVERT 0=19, 1=20,  ETC
MASK1    DC    X'402020202120'
MASK2    DC    X'402020206B2020206B202120'
MASK3    DC    X'4020206B202120'
*
FLAG     DC    X'00'                                              SJB3
$NULL2   EQU   X'80'               SYSUT2 IS "DD  DUMMY" MAPTAPE  SJB3
EOJ      DC    X'00'
EOT      DC    X'00'
IOERROR  DC    X'00'
BLANKS   DC    CL133' '
         PRINT NOGEN
PTR      DCB   DDNAME=SYSPRINT,MACRF=(PM),LRECL=133,RECFM=FBA,         X
               BLKSIZE=3990,DSORG=PS,BUFNO=2
LSIZE    DC    A(LWORK)                                             SJB
WORK     DSECT                                                      SJB
SAVEA    DS    9D                                                   SJB
BUF      DS    (X'FFFF')C,C                                         SJB
LWORK    EQU   *-WORK                                               SJB
         YREGS                                                      SJB
         END
