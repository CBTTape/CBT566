* - - - - - - - - NEEDS APUT MEMBER IN ASM SYSLIB  - - - - - - - - - *
         SPACE 2
*--------------------------------------------------------------------*
*              PRINT OUT DATA IN DUMP FORMAT                         *
*                R1 = DATA                                           *
*                R0 = LENGTH                                         *
*--------------------------------------------------------------------*
PRTDUMP  DS    0H
         $$SUB ,
         SPACE 1
         LR    R2,R0
         LR    R5,R1               @ OF DATA
         LA    R9,0                OFFSET
PRTD0100 DS    0H
         LTR   R2,R2               CHECK LENGTH
         BNP   PRTD0900             EXIT
         MVC   PRTDREC,PRTDBLKS
         LA    R4,16               MAX DISPLAY LENGTH
         CLR   R4,R2               IS MAX DISPLAY LENGTH < DATA
         BL    *+6                  YES
         LR    R4,R2                NO, COPY WHATS LEFT
         BCTR  R4,0                -1
         SPACE 2
         LA    R14,PRTDREC+53      CHAR DATA
         LA    R15,PRTDREC+16      HEX DATA
         MVC   0(*-*,R14),0(R5)    MOVE IN CHAR DATA
         EX    R4,*-6               MOVE IT
         LA    R4,1(,R4)           LENGTH
         LA    R1,0(R14,R4)        END OF OUTPUT AREA
         MVI   0(R1),C'*'          MOVE IN ENDING *
         LA    R3,4                # OF 4 BYTE ENTRIES
PRTD0200 DS    0H
         LR    R6,R4
         CL    R6,=F'4'            IS LENGTH < 4
         BL    PRTD0220             YES
         LA    R6,4                NO, SET MAX UNPK LENGTH
         SPACE 1
PRTD0220 DS    0H                  CREATE UNPK LENGTH BYTE
         LR    R7,R6               COPY UNPK INPUT LENGTH
         SLL   R7,1                2*LENGTH (UNPK OUTPUT LENGTH)
         LR    R1,R7               COPY OUTPUT LENGTH
         SLL   R1,4                MOVE UP A NIBBLE
         OR    R1,R6               OR IN INPUT UNPK LENGTH('OI')
PRTD0240 DS    0H
         EX    R1,PRTDUNPK         UNPK 0(0,R15),0(0,R14)
         MVI   8(R15),C' '
         TR    0(8,R15),PRTDHEXT-240
         LA    R15,9(,R15)         INCR HEX OUTPUT AREA
         LA    R14,4(,R14)         INCR CHAR OUTPUT AREA
         S     R4,=F'4'            INCR # OF BYTES DONE
         BNP   PRTD0800
         BCT   R3,PRTD0200         LOOP
PRTD0800 DS    0H
         ST    R5,PRTDDEC          COPY ADDRESS
         UNPK  PRTDREC+00(9),PRTDDEC(5) UNPK ADDRESS
         TR    PRTDREC+00(8),PRTDHEXT-240 TRANSLATE X'FA'S TO X'F0'S
         MVI   PRTDREC+08,C' '     BLANK
         ST    R9,PRTDDEC          COPY OFFSET
         UNPK  PRTDREC+10(5),PRTDDEC+2(3) UNPK ADDRESS
         TR    PRTDREC+10(4),PRTDHEXT-240 TRANSLATE X'FA'S TO X'F0'S
         MVI   PRTDREC+09,C'+'     +
         MVI   PRTDREC+14,C' '     BLANK
         SPACE 1
         TR    PRTDREC+53(16),PRTDXLAT TRANSLATE TO PRINTABLE
         MVI   PRTDREC+52,C'*'
         LA    R1,PRTDWTO
         BAL   R14,PRTDMSG
*
         LA    R1,16               DISPLAY LENGTH
         SR    R2,R1               LENGTH  - DISPLAY LENGTH
         AR    R5,R1               ADDRESS + DSPLAY LENGTH,
         AR    R9,R1               OFFSET  + DSPLAY LENGTH,
         B     PRTD0100
         SPACE 2
PRTD0900 DS    0H
         L     R13,4(,R13)
         RETURN (14,12),RC=0
PRTDUNPK UNPK  0(0,R15),0(0,R14)
         LTORG ,
         DROP  R12
*--------------------------------------------------------------------*
*              DUMP PRINT ROUTINE                                    *
*--------------------------------------------------------------------*
PRTDMSG  DS    0H
         STM   R14,R12,12(R13)     SAVE REGS
         BALR  R12,0
         USING *,R12
         LA    R15,72(,R13)
         ST    R15,8(,R13)
         ST    R13,4(,R15)
         LR    R13,R15
         SPACE 1
         LR    R11,R1
         TM    PRTDFLG1,PRTD1INT
         BO    PRTDM190
         OI    PRTDFLG1,PRTD1INT
         EXTRACT PRTDDEC,FIELDS=(TSO) CHECK FOR TSO SESSION
         L     R1,PRTDDEC         PICK UP BYTE ADDRESS
         TM    0(R1),X'80'        IS TSO SESSION BIT ON?
         BZ    PRTDM110
         OI    PRTDFLG1,PRTD1TSO
PRTDM110 DS    0H
PRTDM190 DS    0H
         TM    PRTDFLG1,PRTD1TSO
         BO    PRTDM200
         WTO   ,MF=(E,(R11))
         B     PRTDMXIT
PRTDM200 DS    0H
         SPACE 1
         LH    R0,0(,R11)
         SH    R0,=H'4'
         LA    R1,4(,R11)
         APUT  (1),(0)
PRTDMXIT DS    0H
         L     R13,4(,R13)
         LM    R14,R12,12(R13)
         SLR   R15,R15
         BR    R14
         SPACE 2
PRTDXLAT DS    0F
         DC    CL16'................'                     00-0F
         DC    CL16'................'                     10-1F
         DC    CL16'................'                     20-2F
         DC    CL16'................'                     30-3F
         DC    CL16' .........\.<(+|'                     40-4F
         DC    CL16'&&.........!$*);Â¬'                    50-5F
         DC    CL16'-/.........,%_>?'                     60-6F
         DC    CL16'..........:#@''="'                    70-7F
         DC    XL16'4B8182838485868788894B4B4B4B4B4B'     80-8F
         DC    XL16'4B9192939495969798994B4B4B4B4B4B'     90-9F
         DC    XL16'4BA1A2A3A4A5A6A7A8A94B4B4B4B4B4B'     A0-AF
         DC    CL16'................'                     B0-BF
         DC    CL16'{ABCDEFGHI......'                     C0-CF
         DC    CL16'}JKLMNOPQR......'                     D0-DF
         DC    CL16'\.STUVWXYZ......'                     E0-EF
         DC    CL16'0123456789......'                     F0-FF
*
PRTDHEXT DC    C'0123456789ABCDEF'
PRTDDEC  DC    2D'0'
PRTDBLKS DC    CL80' '
PRTDWTO  WTO   '                                                       X
                                                          ',           X
               ROUTCDE=11,MF=L
PRTDREC  EQU   PRTDWTO+4,80
PRTDFLG1 DC    X'0'
PRTD1INT EQU   X'80'
PRTD1TSO EQU   X'40'
         LTORG ,
