***********************************************************************
* ENVIRONMENT - OS/VS                                                 *
* PURPOSE     -  PERFORM LISTCAT FUNCTION WITH SVC26 TO RETRIEVE THE  *
*                VOLUME SERIAL THAT A DATA SET RESIDES ON IN ORDER TO *
*                PERFORM AN OBTAIN ON THE DSCB TO SEE IF IT REALLY    *
*                EXISTS.                                              *
*                                                                     *
*                THIS SHOULD BE USED WHEN RECOVERING FROM A           *
*                HEAD CRASH TO BE SURE YOU GOT ALL THE DATASETS       *
*                                                                     *
* ATTRIBUTES:    NORENT, REUS, NOT AUTHORIZED                         *
*                AMODE=24, RMODE=24                                   *
*                                                                     *
***********************************************************************
* MODS   CODE  TO X-REF CATALOG-DEVTYPE AND VOLSER-DEVTYPE            *
***********************************************************************
*    //KBDSM083 JOB 1,KBASS,NOTIFY=KBASS,REGION=4M,
*    //         CLASS=X,MSGCLASS=X,MSGLEVEL=(1,1)
*    /*JOBPARM  T=99,L=999
*    //*------- -
*    //STEPDS1   EXEC PGM=DSDSM08,PARM=ALL  (ALL/OPEN  DFLT=MISSING)
*    //STEPLIB   DD DISP=SHR,DSN=KBASS.PERM.LOAD
*    //PRINTER1  DD SYSOUT=*
*    //VOLUMES   DD *    LIST OF LIMITING VOLUMES OR NONE
*    $NOCAND                       DONT LIST CANDIDATES
*    $MIGR                              LIST MIGRATED DSN
*    $TAPE                              LIST TAPES.
*    PRD043
*    //READER1   DD *    LIST OF CATALOGS TO READ
*    FAICF.USER.CATALOG
*    /*
*                                                                     *
***********************************************************************
*        CHANGE LOG:                                                  *
*        10SEP92 STARTED WORK ON THIS PROGRAM                         *
*        31DEC92 ADDED $NOCAND, FIXED GDG BASE PRINT                  *
*        19JAN93 ADDED $MIGR                                          *
*        26JAN93 ADDED $START=                                        *
*        27JUL95 ADDED ALIAS CHECK                                    *
*                                                                     *
***********************************************************************
         MACRO
&LABEL   GENFPL &NAME,&N=1,&NEXT=0
         LCLA  &CNT
         MNOTE *,'************* GENERATION OF FIELD NAME DICT ENTRY ---X
               &NAME *******'
F&LABEL  DC    0F'0',AL1(&N),XL3'00',A(0) FIELD  ENTRY
         DC    A(C&SYSNDX)  POINT TO FIELD NAME
N&LABEL  DC    A(&NEXT)  CHAIN TO NEXT FIELD
L&LABEL  DC    A(0)  LENGTH OF RETURNED FIELD
P&LABEL  DC    A(0)  POINTER TO RETURNED FIELD
&CNT     SETA  &N
         AIF   (&CNT EQ 1).END
&CNT     SETA  (&CNT-1)*2
         DC    &CNT.A(0,0)  ADDITIONAL RETURN FIELDS
.END     ANOP
C&SYSNDX DC    CL8'&NAME'  FIELD NAME
         SPACE 2
         MEND
DSDSM08  AMODE 24
DSDSM08  RMODE 24
DSDSM08  CSECT
         SAVE  (14,12),T,*         SAVE REGS
         LR    R12,R15
         LA    R11,2048(,R12)
         LA    R11,2048(,R11)
         USING DSDSM08,R12,R11
         SPACE 3
*--------------------------------------------------------------------*
*              GETMAIN WORKING STORAGE AND CHAIN SAVE AREAS          *
*--------------------------------------------------------------------*
         LR    R2,R1               SAVE PARM ADDR
         GETMAIN R,LV=WORKLEN,SP=0
         LR    R10,R1
         USING WORK,R10
         LR    R14,R1
         LR    R15,R0
         SLR   R1,R1
         MVCL  R14,R0              ZERO GETMAINED AREA
         ST    R2,WPARM            SAVE PARM ADDRESS
         LA    R0,SAVEAREA         OUR SAVE
         ST    R0,8(,R13)          CHAIN TO PREVIOUS
         ST    R13,SAVEAREA+4      CHAIN PREV TO OURS
         LA    R13,SAVEAREA        SET UP OUR SAVE
         SPACE 3
         GETMAIN R,LV=WSTKTBLL,SP=0
         ST    R1,WSTKTBL@
         LR    R14,R1
         LR    R15,R0
         SLR   R1,R1
         MVCL  R14,R0              ZERO GETMAINED AREA
         MVC   0(4,R13),=C'WORK'
*--------------------------------------------------------------------*
*              INITIALIZATION                                        *
*--------------------------------------------------------------------*
         MVI   BLINE,C' '
         MVC   BLINE+1(L'BLINE-1),BLINE
         MVI   DASH,C'-'
         MVC   DASH+1(L'DASH-1),DASH
         SPACE 1
*--------------------------------------------------------------------*
*              MOVE REAL TO WORK                                     *
*--------------------------------------------------------------------*
         L     R1,=A(MVCTBL)
INIT0100 DS    0H
         CLC   =F'0',0(R1)
         BE    INIT0190
         LM    R2,R4,0(R1)         FROM ADDR,LEN,TO OFFSET
         ALR   R4,R10              ADD WORK REG
         BCTR  R3,0
         EX    R3,INITMVC
         LA    R1,MVCTLEN(,R1)
         B     INIT0100
INITMVC  MVC   0(0,R4),0(R2)
INIT0190 DS    0H
         SPACE 1
*--------------------------------------------------------------------*
*              INIT STACK, OBTAIN,  CTG AND ETC                      *
*--------------------------------------------------------------------*
         MVI   WFLAG1,0
         ZAP   WSTKNUM,=P'0'
         L     R1,WSTKTBL@         @ OF DSN @ STACK
         ST    R1,WSTKTOP
         ST    R1,WSTKCURR
         SPACE 1
         LA    R1,OBTDSN           @ OF OBT DSN
         LA    R2,OBTVOL           @ OF OBT VOL
         LA    R3,DS1AREA          @ OF DS1 WORK AREA
         STM   R1,R3,DSCBCAM+4
         SPACE 1
         LA    R1,WCTGENT          @ OF WCTGENT
         LA    R2,WCTGCAT          @ OF WCTGCAT
         LA    R3,WCTGWA           @ OF WCTGWA
         STM   R1,R3,CPL1ENT
         SPACE 1
         MVC   LMULTI,=A(MTYPELN)
         MVC   PMULTI,=A(MTYPES)
         SPACE 1
*
*--------------------------------------------------------------------*
*              DO OPENS                                              *
*--------------------------------------------------------------------*
         OPEN  (WDCBCARD,(INPUT)),MF=(E,WOPEN)   OPEN FILES
         TM    WDCBCARD+X'30',X'10' DID IT OPEN
         BZ    ERRCARD
         OPEN  (WDCBPRT,(OUTPUT)),MF=(E,WOPEN)
         TM    WDCBPRT+X'30',X'10'  DID IT OPEN
         BZ    ERRPRT
         SPACE 3
         DEVTYPE =CL8'VOLUMES',WDEC
         LTR   R15,R15
         BNZ   OPEN0200
         OPEN  (WDCBVOL,(INPUT)),MF=(E,WOPEN)
         TM    WDCBVOL+X'30',X'10' DID IT OPEN OK
         BZ    OPEN0200             NO, SKIP VOLUMES
         BAL   R14,GETVOLS
         SPACE 2
OPEN0200 DS    0H
         L     R2,WPARM
         L     R2,0(,R2)           GET PARM
         LH    R1,0(,R2)
         C     R1,=F'3'            BIG ENOUGH
         BL    PARM0190             NO
         CLC   =C'ALL',2(R2)       IS IT ALL
         BNE   PARM0120
         OI    WFLAG1,$1ALL
         B     PARM0190
PARM0120 DS    0H
         CLC   =C'OPE',2(R2)       IS IT ALL
         BNE   PARM0140
         OI    WFLAG1,$1OPEN
         B     PARM0190
PARM0140 DS    0H
PARM0190 DS    0H
*--------------------------------------------------------------------*
*                                                                    *
*              SCAN UCB GET MAKE VOLSER-DEVTYPE TABLE                *
*                                                                    *
*--------------------------------------------------------------------*
*--------------------------------------------------------------------*
*              GET NUMBER OF DASD UCB GENNED                         *
*              TO GET VOL-DEVT TABLE SIZE                            *
*--------------------------------------------------------------------*
         UCBINFO DEVCOUNT,COUNT=WDEVCNT,DEVCLASS=DASD,                 X
               RETCODE=WDEVRETC,RSNCODE=WDEVRSNC,                      X
               MF=(E,WUCBINFO)
         LTR   R15,R15
         BZ    INFO0100
         WTO   'DSDSM UCBINFO FAILED',ROUTCDE=11
         ABEND 1
INFO0100 DS    0H
         L     R0,WDEVCNT
         MH    R0,=Y(6+4)          L'VOLSER+L'DEVTYPE
         GETMAIN R,LV=(0)
         ST    R1,WVOLTBL@
         ST    R0,WVOLTBSZ
         L     R0,WVOLTBL@
         L     R1,WVOLTBSZ
         SLR   R15,R15
         MVCL  R0,R14              ZERO VOLSER-DEVTYPE AREA
*--------------------------------------------------------------------*
*              CALL UCBSCAN TO FIND ALL DASD VOLUMES                 *
*--------------------------------------------------------------------*
         XC    WUCBSVCW,WUCBSVCW            ZERO WORK AREA
         MVC   WUCBDCEL,=H'128'
         L     R3,WVOLTBL@         @ OF VOL-DEVT TABLE
         USING VOLDEVT,R3
VOLSLOOP DS    0H
         UCBSCAN COPY,UCBAREA=WUCBCOPY,WORKAREA=WUCBSVCW,              X
               DEVCLASS=DASD,DEVNCHAR=WUCBDEVN,                        X
               CMXTAREA=WUCBMXT,DCEAREA=WUCBDCE,DCELEN=WUCBDCEL,       X
               DYNAMIC=YES,RANGE=ALL,                                  X
               MF=(E,WUCBSCAN)
         LTR   R15,R15             END OF UCB TABLE?
         BZ    VOLSOK               YES, GO RETURN
         C     R15,=F'12'          BAD PROB
         BL    READCARD             NO
         WTO   'DSDSM RC > 8',ROUTCDE=11
         ABEND 2
VOLSOK   DS    0H
         LA    R4,WUCBCOPY
         USING UCBOB,R4
         CLI   UCBVOLI,X'00'       IS THERE A VOLSER?
         BE    VOLSLOOP             NO, SKIP OVER ENTRY
         MVC   VOLDVOL,UCBVOLI     MOVE IN VOLSER
         MVC   VOLDUNIT,UCBTYP     MOVE IN UCBTYPE (DEVTYPE)
         LA    R3,VOLDLEN(,R3)     NEXT ENTRY
         DROP  R3
         B     VOLSLOOP
*--------------------------------------------------------------------*
*              RESET VARIABLES FOR EACH CATALOG INPUT                *
*--------------------------------------------------------------------*
READCARD DS    0H
         ZAP   WNUMCAT,=P'0'
         ZAP   WNUMPROC,=P'0'
         ZAP   WNUMMISS,=P'0'
         ZAP   WNUMMIGR,=P'0'
         ZAP   WNUMTRKA,=P'0'
         ZAP   WNUMTRKU,=P'0'
         ZAP   WNUMDEVT,=P'0'
         GET   WDCBCARD,CARDREC       GET THE DIVISION
         CLI   CARDREC,C' '        BLANK IN COL 1
         BE    READCARD             YES
         CLI   CARDREC,C'*'        COMMENT
         BE    READCARD             YES
         MVC   WCTGCAT,CARDREC        MOVE IN CAT NAME
*
         MVC   D1,BLINE
         MVC   D1NAME(15),=C'   *** CATALOG='
         MVC   D1NAME+15(44),CARDREC
         PUT   WDCBPRT,D1
         SPACE 2
*--------------------------------------------------------------------*
*                                                                    *
*--------------------------------------------------------------------*
         MVC   D1,BLINE
         MVC   D1NAME(14),=CL(14)'DATASET NAME'
         MVC   D1VOL(6),=CL(6)'VOLUME'
         MVC   D1STAT(8),=CL(8)'STATUS'
         MVC   D1OPEN(6),=CL(6)'OPEN?'
         MVC   D1EXT(4),=CL(4)' EXT'
         MVC   D1TYPE(8),=CL(8)'DSN-TYPE'
         MVC   D1TRKA(6),=CL(6)'TRK-AL'
         MVC   D1TRKU(6),=CL(6)'TRK-US'
         PUT   WDCBPRT,D1
         MVC   D1,BLINE
         MVC   D1NAME,DASH
         MVC   D1VOL,DASH
         MVC   D1STAT,DASH
         MVC   D1OPEN,DASH
         MVC   D1EXT,DASH
         MVC   D1TYPE,DASH
         MVC   D1TRKA,DASH
         MVC   D1TRKU,DASH
         PUT   WDCBPRT,D1
         MVC   D1,BLINE
         MVC   WALIASPV,BLINE
         SPACE 3
         XC    WDSENT,WDSENT       SET TO START FROM BEGINNING
         MVI   WDSENT+43,X'01'
         TM    WFLAG1,$1START
         BZ    EXSVC26
         MVC   WDSENT,WSTART
         B     EXSVC26             GO ISSUE SVC26
READLOOP DS    0H
         CLC   =C'WORK',0(R13)     CHECK FOR OVERLAYS
         BNE   ABEND001
         BAL   R14,STKPOP          POP NEW ENTRY INTO WDSENT
         LTR   R15,R15             GET AN ENTRY
         BZ    EXSVC26              YES
READLP02 DS    0H
         SR    R7,R7                  CLEAR REGISTER
         IC    R7,WDSENT43            MOVE IN LAST BYTE OF WDSENT
         LA    R7,1(R7)               ADD 1 TO IT
         STC   R7,WDSENT43            MOVE IT BACK IN
         CLI   WDSENT43,X'FF'
         BE    ABEND002
EXSVC26  DS    0H
         LA    R1,WDSENT           @ OF DSN
         BAL   R14,CATREAD
         C     R15,=F'4'
         BL    BINGO               RC = 0
         BE    READCARD            RC = 4  SVC  26 ERROR
         C     R15,=F'10'
         BE    CATERRX             RC = 10 SVC  26 ERROR
         C     R15,=F'12'
         BE    READCARD            RC = 12 SVC  26 ERROR
         C     R15,=F'16'
         BE    READLOOP            RC = 16 SVC  26 ERROR
         B     STATS               RC = 8  END OF CATALOG REACHED
CATERRX  DS    0H
*--------------------------------------------------------------------*
*              CATALOG ERROR, SET ALIAS AND INCREMENT AS NEXT SRCH   *
*--------------------------------------------------------------------*
         MVC   WDSENT,BLINE
         MVC   WDSENT(08),WALIAS
         LA    R1,WDSENT+7
         TRT   WDSENT(8),TRTDLM
         BZ    CATERRX1
         MVI   0(R1),C'$'          LESS THAT 7 CHARS
         B     READLOOP
CATERRX1 DS    0H                  FULL 8 CHAR
         SLR   R1,R1
         IC    R1,WDSENT+7         INCR
         LA    R1,1(,R1)            LAST
         STC   R1,WDSENT+7           BYTE
         B     READLOOP
STATS    DS    0H
         MVC   D1,BLINE
         PUT   WDCBPRT,D1
         LA    R2,D1NAME
         USING ST01,R2
         MVC   ST01CAT,STX1CAT
         MVC   ST01PROC,STX1PROC
         MVC   ST01MISS,STX1MISS
         MVC   ST01DEVT,STX1DEVT
         MVC   ST01MIGR,STX1MIGR
         MVC   ST01TRKA,STX1TRKA
         MVC   ST01TRKU,STX1TRKU
         PUT   WDCBPRT,D1
         DROP  R2
         SPACE 2
         MVC   D1NAME(L'D1-1),DASH
         PUT   WDCBPRT,D1
         SPACE 2
         MVC   D1,BLINE
         MVC   D1NAME(ST01LEN),ST01
         LA    R2,D1NAME
         USING ST01,R2
         MVC   ST01CAT,=X'4020202020202120'
         MVC   ST01PROC,=X'4020202020202120'
         MVC   ST01MISS,=X'4020202020202120'
         MVC   ST01DEVT,=X'4020202020202120'
         MVC   ST01MIGR,=X'4020202020202120'
         MVC   ST01TRKA(15),=X'4020206B2020206B2020206B202120'
         MVC   ST01TRKU(15),=X'4020206B2020206B2020206B202120'
         ED    ST01CAT,WNUMCAT
         ED    ST01PROC,WNUMPROC
         ED    ST01MISS,WNUMMISS
         ED    ST01DEVT,WNUMDEVT
         ED    ST01MIGR,WNUMMIGR
         ED    ST01TRKA,WNUMTRKA
         ED    ST01TRKU,WNUMTRKU
         PUT   WDCBPRT,D1
         MVC   D1,BLINE
         PUT   WDCBPRT,D1
         DROP  R2
         B     READCARD
         SPACE 2
BINGO    DS    0H
*--------------------------------------------------------------------*
*              FIND HILEVEL QUALIFIER (ALIAS)                        *
*              CHECK IF ALIAS IS KNOWN TO MASTER CATALOG             *
*--------------------------------------------------------------------*
         MVC   WALIAS,BLINE
         LA    R1,8
         LA    R2,WDSENT
         LA    R3,WALIAS
BINGO10  DS    0H
         CLI   0(R2),C' '
         BE    BINGO20
         CLI   0(R2),C'.'
         BE    BINGO20
         MVC   0(1,R3),0(R2)
         LA    R2,1(,R2)
         LA    R3,1(,R3)
         BCT   R1,BINGO10
BINGO20  DS    0H
         CLC   =C'DSICF',WALIAS    CATALOG NAME
         BE    BINGO30              YES
         CLC   =C'CATALOG',WALIAS  CATALOG NAME
         BE    BINGO30              YES
         CLC   WALIAS,WALIASPV
         BE    BINGO30
         MVC   WALIASPV,WALIAS
*--------------------------------------------------------------------*
*              CALL DSCATNAM TO CHECK ALIAS                          *
*--------------------------------------------------------------------*
         LA    R1,WALIAS           ALIAS TO CHECK
         LA    R2,WALIASCT         RETURNED CATALOG
         LA    R3,D2               RETURNED ERROR MSG
         STM   R1,R3,WCALL
         LA    R1,WCALL
         L     R15,=V(DSCATNAM)
         BALR  R14,R15
         LTR   R15,R15
         BZ    BINGO30
         CLC   WALIAS,WALIASCT     IS ALIAS RETURNED AS CATNAME
         BE    BINGO30              YES, THEN IN MASTER
         MVC   D1,BLINE
         MVC   D1(50),=CL50' @@@ ALIAS=XXXXXXXX IS UNKNOWN IN CAT='
         MVC   D1+11(8),WALIAS
         MVC   D1+38(44),WCTGCAT
         PUT   WDCBPRT,D1
BINGO30  DS    0H
         AP    WNUMCAT,=P'1'
         MVI   WFLAG2,0
*--------------------------------------------------------------------*
*              DO SPECIAL PROCESSING IF GDG                          *
*--------------------------------------------------------------------*
         CLI   WDSENTT,C'B'        GDG BASE
         BE    READLOOP             YES, DEFER PRINT
*--------------------------------------------------------------------*
*              FOUND AN ENTRY, INITIALIZE DATA                       *
*--------------------------------------------------------------------*
         MVC   WVOLSER,BLINE
         MVC   D1,BLINE
         MVC   D1NAME,WDSENT       MOVE IN DATASET
         MVC   D1VOL,=CL8'??????'
         MVC   D1STAT,=CL8'??????'
*--------------------------------------------------------------------*
*              DETERMINE ENTYPE                                      *
*--------------------------------------------------------------------*
*
         LA    R1,DSNTYPE          DSN TYPE TABLE
         LA    R2,DSNTYPE#          AND # OF ENTRIES
TYPE0100 DS    0H
         CLC   0(1,R1),WDSENTT     DOES THIS MATCH
         BE    TYPE0200             YES
         LA    R1,DSNTYPEL(,R1)     NO, NEXT ENTRY
         BCT   R2,TYPE0100         AND LOOP
         MVC   D1TYPE,=CL13'UNKNOWN'
         B     TYPE0220
TYPE0200 DS    0H
         MVC   D1TYPE,2(R1)        THIS IS IT
TYPE0220 DS    0H
*--------------------------------------------------------------------*
*              DETERMINE IF DSN OPEN                                 *
*--------------------------------------------------------------------*
*
         NI    WFLAG2,255-$2OPEN
         ICM   R1,15,POPENIND      DSN TYPE TABLE
         BZ    OPEN0800
         L     R2,POPENIND         DSN TYPE TABLE
         CLI   0(R2),X'FF'         IS IT OPEN
         BE    OPEN0800             NO
         TM    0(R2),X'80'         IS IT OPEN
         BZ    OPEN0800             NO
         MVC   D1OPEN,=CL6'OPEN'
         OI    WFLAG2,$2OPEN
OPEN0800 DS    0H
*--------------------------------------------------------------------*
*              WAS IT OPEN, NO GET  NEXT CATALOG ENTRY               *
*--------------------------------------------------------------------*
         TM    WFLAG1,$1OPEN       OPEN ONLY
         BZ    OPEN0820             NO
         TM    WFLAG2,$2OPEN        YES, IS IT OPEN
         BZ    READLOOP             NO, GET NEXT ONE
OPEN0820 DS    0H
*--------------------------------------------------------------------*
*              GET VOLSERS FOR THIS DSN ,                            *
*--------------------------------------------------------------------*
VOLS     DS    0H
         XC    WNUMVOL,WNUMVOL
         L     R9,LCATVOL          LENGTH OF CATVOL2
         L     R6,PCATVOL          @ OF CATVOL2
         LTR   R9,R9               ANY VOLSERS
         BZ    PRINTIT              NO
         SLR   R8,R8
         D     R8,=A(CTVLLEN)      DIVIDE BY ENTRY LENGTH
         ST    R9,WNUMVOL
*--------------------------------------------------------------------*
*              LOOP LABEL FOR MULTI-VOLUME DATASETS                  *
*--------------------------------------------------------------------*
VOLLOOP  DS    0H
         MVC   D1EXT,BLINE
         MVC   D1TRKA,BLINE
         MVC   D1TRKU,BLINE
         USING CTVL,R6
         MVC   WVOLSER,CTVLVOL     MOVE IN VOLSER
         MVC   WVOLDEVT,CTVLUNIT   MOVE IN UNIT TYPE
         NI    WFLAG2,255-$2MISS   TURN OF MISSING FLAG
*--------------------------------------------------------------------*
*              SCAN VOLUME TABLE,  TO LIMIT VOLSER SEARCH            *
*--------------------------------------------------------------------*
         TM    WFLAG1,$1VOLS       ANY VOLUMES IN TABLE
         BZ    VOL0200              NO, DO THEM ALL
         LA    R2,VOLTBL
         LA    R3,VOLTBL#
VOL0100  DS    0H
         CLC   WVOLSER,0(R2)       IS IT OUR VOLUME
         BE    VOL0200              YES
         LA    R2,VOLTBLLN(,R2)     NO, NEXT ENTRY
         BCT   R3,VOL0100          AND LOOP
         B     PRINT80             NOT FOUND, NEXT DSN PLEASE
VOL0200  DS    0H
*
*--------------------------------------------------------------------*
*              DETERMINE VOLSER STATUS                               *
*--------------------------------------------------------------------*
         LTR   R9,R9               IS VOLSER THERE
         BZ    PRINTIT              NO
*
         NI    WFLAG2,255-$2MIGR   SET NOT MIGRATED
         NI    WFLAG2,255-$2TAPE   SET NOT TAPE
         CLC   WVOLSER,=C'MIGRAT'  IS IT MIGRATED
         BNE   VOL0260              NO
         OI    WFLAG2,$2MIGR
         AP    WNUMMIGR,=P'1'
         TM    WFLAG1,$1MIGR       DOES HE WANT MIGRATED DSN
         BZ    PRINT90              NO, THEN NEXT
VOL0260  DS    0H                  HERE IF OK OR WANTS MIGRATED
*
         TM    WFLAG2,$2MIGR       IS IT MIGRATED
         BO    VOL0265              YES
         TM    CTVLUNIT+2,X'80'    IS IT TAPE
         BZ    VOL0262              NO
         OI    WFLAG2,$2TAPE       THIS IS TAPE
VOL0262  DS    0H
         TM    WFLAG1,$1TAPE       IS TAPE OK
         BO    VOL0265              YES, PROCESS
         TM    WFLAG2,$2TAPE       DON'T WANT TAPE AND IS TAPE
         BO    PRINT90              YES, DON'T PRINT
VOL0265  DS    0H                  HERE IF OK OR WANTS MIGRATED
*
         TM    CTVLSTAT,CTVLSASS   IS IT A ASSOCIATE VOL
         BO    PRINT80              YES, SKIP
         TM    CTVLSTAT,CTVLSCAN   IS IT A CANDIDATE VOL
         BO    VOL0280              YES
         SPACE 1
VOL0270  DS    0H                  HERE ONLY IF WE PROCESS IT
         AP    WNUMPROC,=P'1'
         MVC   D1VOL,WVOLSER
         MVC   D1STAT,=CL8'OK'
         TM    WFLAG2,$2MIGR       IS IT MIGRATED
         BO    PRINTIT              YES, OK
         SPACE 1
         B     VOL0400
VOL0280  DS    0H
         MVC   D1VOL,WVOLSER
         TM    WFLAG1,$1NOCAND     DOES WE WANT CANDIDATES
         BO    PRINT90
         MVC   D1STAT,=CL8'CAND.'
         MVC   D1OPEN,BLINE
         B     PRINTIT
VOL0290  DS    0H
VOL0400  DS    0H
*--------------------------------------------------------------------*
*              GET NUMBER OF EXTENTS                                 *
*--------------------------------------------------------------------*
*
         TM    WFLAG2,$2TAPE       IS THIS A TAPE
         BO    PRINTIT              YES
         CLI   WDSENTT,C'A'        ALIEN (NONVSAM)
         BE    EXT0800              YES
         ICM   R1,15,LNOEXT        EXTENTS RETURNED
         BZ    EXT0800              NO
         ICM   R1,15,PNOEXT        EXTENTS RETURNED
         BZ    EXT0800              NO
         L     R2,WNUMVOL          MAX NUM VOLS
         SR    R2,R9                - VOLINDEX
         ALR   R1,R2               INDEX INTO EXTENT NUMBER TBL
         CLI   0(R1),X'FF'         IS IT NONVSAM/CANIDATE
         BE    EXT0800
         SLR   R2,R2
         IC    R2,0(,R1)           GET EXTENT NUMBERS
         CVD   R2,WDEC
         MVC   D1EXT(4),=X'40202120'
         ED    D1EXT(4),WDEC+6
EXT0800  DS    0H
*--------------------------------------------------------------------*
*              GET NUMBER OF TRACKS                                  *
*--------------------------------------------------------------------*
*
TRKA0000 DS    0H
         TM    WFLAG2,$2PRTDSN     PRINTED THIS DSN YET
         BO    TRKA0800             YES
         CLI   WDSENTT,C'A'        ALIEN (NONVSAM)
         BE    TRKA0800             YES
*
         ICM   R14,15,LITYPEXT
         BZ    TRKA0800
         ICM   R15,15,PITYPEXT
         BZ    TRKA0800
         ICM   R4,15,LTRBAEXT      TRBAEXT RETURNED
         BZ    TRKA0800             NO
         ICM   R5,15,PTRBAEXT      TRBAEXT RETURNED
         BZ    TRKA0800             NO
         CL    R4,=A(8)            TOO SHORT
         BL    TRKA0800             YES, BYPASS
         SLR   R1,R1               ZERO TOTAL TRACKS
TRKA0100 DS    0H
         LH    R2,0(,R5)           THIS SECTION LENGTH
         LTR   R2,R2
         BZ    TRKA0200
         LA    R5,2(,R5)           PASSED LENGTH
         S     R4,=A(2)
TRKA0120 DS    0H
$TRBAEXB EQU   X'02',4             CCHHR BEGIN
$TRBAEXE EQU   X'06',4             CCHHR END
$TRBATRK EQU   X'0A',2             # OF TRACKS
$TRBALEN EQU   X'14'
         CLI   0(R15),X'80'        IS THIS DATA WITHIN INDEX
         BE    TRKA0180
         AH    R1,$TRBATRK(,R5)    + TRKS THIS EXTENT
         LA    R5,$TRBALEN(,R5)    NEXT EXTENT
         LA    R15,1(,R15)
TRKA0180 DS    0H
         S     R4,=A($TRBALEN)     - THIS EXTENT LENGTH
         BNP   TRKA0200
         S     R2,=A($TRBALEN)     - THIS SUB-ENTRY
         BP    TRKA0120
         B     TRKA0100
TRKA0200 DS    0H
         ST    R1,WTRKALLO
         CVD   R1,WDEC
         AP    WNUMTRKA,WDEC
         MVC   D1TRKA(6),=X'402020202120'
         ED    D1TRKA(6),WDEC+5
*--------------------------------------------------------------------*
*              NOW CALCULATE PERCENT USED                            *
*--------------------------------------------------------------------*
TRKU000  DS    0H
         LA    R1,0
         ICM   R0,15,LHURBADS      LENGTH
         BZ    TRKU400
         ICM   R5,15,PHURBADS      HI USED RBA
         BZ    TRKU400
         ICM   R0,15,LHARBADS      LENGTH
         BZ    TRKU400
         ICM   R7,15,PHARBADS      @ OF HI ALLOC RBA
         BZ    TRKU400
         L     R0,0(,R5)           GET HI USED RBA
         L     R2,0(,R7)           GET HI ALLOCATED RBA
*--------------------------------------------------------------------*
*              IF HI=USED THEN SET USED=ALLOCATED TRACKS             *
*--------------------------------------------------------------------*
*
         L     R1,WTRKALLO
         CLR   R0,R2               HI = USED
         BE    TRKU400              YES
*
         ICM   R15,15,LDSATTR      IS THIS A PAGESPACE
         BZ    TRKU002
         ICM   R15,15,PDSATTR
         BZ    TRKU002
         L     R1,WTRKALLO
         CLC   =X'4022',0(R15)     IF PAGESPACE THEN
         BE    TRKU400              USED = ALLOC
TRKU002  DS    0H
*
*--------------------------------------------------------------------*
*              IF ALLOCATED OR USED RBA = 0; THEN ZERO TRACKS        *
*--------------------------------------------------------------------*
         LA    R1,0
         CL    R2,=A(0)            ALLOCATED = 0
         BE    TRKU400              YES
         CL    R0,=A(0)            USED = 0
         BE    TRKU400              YES
*
*        CL    R0,=A(X'000FFFFF')  IS USED REAL BIG
*        BL    TRKU0010             NO
*        SRL   R0,10               DOWN SHIFT
*        SRL   R2,10               DOWN SHIFT
*        B     TRKU100
TRKU010  DS    0H
         CL    R2,=A(X'7FFFFFFF')  IS ALLOCATED REAL BIG
         BL    TRKU020              NO
         SRL   R0,1                DOWN SHIFT TO MAKE POSITIVE
         SRL   R2,1                DOWN SHIFT TO MAKE POSITIVE
         B     TRKU100
TRKU020  DS    0H
TRKU100  DS    0H
TRKU200  DS    0H
         SRDL  R0,32               SHIFT TO R1
         M     R0,=A(1000)
         DR    R0,R2               GET PERCENT USED
         B     TRKU300
*
TRKU300  DS    0H                  R1 = PERCENT USED
         SLR   R0,R0
         M     R0,WTRKALLO         TIME # TRACKS
         D     R0,=A(1000)         CONVERT BACK
         LTR   R0,R0               REMAINDER = 0
         BNZ   TRKU320              NO
         ICM   R15,15,0(R5)        GET USED RBA
         BZ    TRKU340              IF ZERO BYPASS
TRKU320  DS    0H
         LA    R1,1(,R1)           ROUND UP
TRKU340  DS    0H
TRKU400  DS    0H
         CVD   R1,WDEC
         AP    WNUMTRKU,WDEC
         MVC   D1TRKU(6),=X'402020202120'
         ED    D1TRKU(6),WDEC+5
TRKA0800 DS    0H
         DROP  R6
*--------------------------------------------------------------------*
*              DO THE OBTAIN                                         *
*--------------------------------------------------------------------*
OBTAIN   DS    0H
         TM    WFLAG2,$2TAPE       IS IT ON TAPE
         BO    PRINTIT              YES, SKIP OBTAIN
         MVC   OBTDSN(44),WDSENT       GET THE FILENAME
         MVC   OBTVOL(6),WVOLSER       GET THE VOLUME
         SR    R15,R15                 CLEAR REG 15
         OBTAIN DSCBCAM                GET THE DSCB
         LTR   R15,R15                 IS IT GOOD?
         BNZ   OBT0900                 BOO BOO
*--------------------------------------------------------------------*
*              SCAN VOL-DEVT TABLE TO MAKE SURE CATALOG MATCHES      *
*              THE REAL DEVTYPE                                      *
*--------------------------------------------------------------------*
         USING VOLDEVT,R3
         L     R3,WVOLTBL@         @ OF VOL-DEVTYPE TABLE
         L     R4,WDEVCNT          COUNT OF DASD
OBT0100  DS    0H
         CLI   VOLDVOL,0           END OF TABLE
         BE    PRINTIT              YES
         CLC   VOLDVOL,WVOLSER     IS THIS OUR VOLSER
         BNE   OBT0190              NO, NEXT ENTRY
         CLC   VOLDUNIT+3(1),WVOLDEVT+3  DOES THE DEVICE TYPE MATCH
         BE    PRINTIT
         MVC   D1STAT(9),=CL9'V-XX,C-XX'
         UNPK  WDEC(3),VOLDUNIT+3(2) VOLUME DEVTYPE
         TR    WDEC(2),TRANS-240
         MVC   D1STAT+2(2),WDEC
         UNPK  WDEC(3),WVOLDEVT+3(2)  CATALOG DEVTYPE
         TR    WDEC(2),TRANS-240
         MVC   D1STAT+7(2),WDEC
         AP    WNUMDEVT,=P'1'
         OI    WFLAG2,$2MISS       TREAT AS MISSING
         B     PRINTIT
OBT0190  DS    0H
         LA    R3,VOLDLEN(,R3)     NEXT ENTRY
         BCT   R4,OBT0100          AND LOOP
         WTO   'DSDSM VOLSER NOT IN VOLDEVT TABLE',ROUTCDE=11
         DROP  R3
OBT0900  DS    0H
         MVC   D1STAT,=CL8'MISSING'
         OI    WFLAG2,$2MISS
         AP    WNUMMISS,=P'1'
*--------------------------------------------------------------------*
*              PRINT RECORD                                          *
*--------------------------------------------------------------------*
PRINTIT  DS    0H
*
PRINT10  DS    0H
         TM    WFLAG1,$1OPEN       PRINT OPEN ONLY
         BZ    PRINT15              NO
         TM    WFLAG2,$2OPEN        YES, IS IT OPEN
         BO    PRINT20              YES, THEN PRINT
PRINT15  DS    0H
         TM    WFLAG1,$1ALL        PRINT ALL
         BO    PRINT20              YES
         TM    WFLAG2,$2MISS       ONLY PRINT MISSING, IS IT
         BO    PRINT20              YES, THEN PRINT
*
         B     PRINT80             FAILED PRINT TEST
         SPACE 3
PRINT20  DS    0H
         TM    WFLAG2,$2PRTDSN     PRINTED THIS DSN YET
         BZ    PRINT30              NO
         MVI   D1NAME,C' '
         MVC   D1NAME+1,WDSENT
         B     PRINT40
PRINT30  DS    0H                  1ST PRINT OF DSN
         TM    WFLAG3,$3STKOFF     COMING FROM STACK
         BZ    PRINT40              NO
         CLI   WGDGNAME,C' '       ALREADY PRINTED IT
         BE    PRINT40
*--------------------------------------------------------------------*
*              DO SPECIAL GDG BASE PROCESSING                        *
*--------------------------------------------------------------------*
         MVC   D2,BLINE
         MVC   D2+(D1NAME-D1)(L'D1NAME),WGDGNAME
         MVC   D2+(D1TYPE-D1)(L'D1TYPE),GDGTYPE+2
         MVC   D2+(D1STAT-D1)(2),=C'OK'
         SPACE 1
         L     R1,WGDGNUM
         CVD   R1,WDEC
         MVC   D2+(D1OPEN-D1)(4),=X'40202120'
         ED    D2+(D1OPEN-D1)(4),WDEC+6
         SPACE 1
         ICM   R2,15,PGDGLIM
         BZ    PRINT35
         SLR   R1,R1
         IC    R1,0(R2)
         CVD   R1,WDEC
         MVC   D2+(D1EXT-D1)(4),=X'40202120'
         ED    D2+(D1EXT-D1)(4),WDEC+6
PRINT35  DS    0H
         ICM   R2,15,PGDGATTR
         BZ    PRINT39
         MVC   D2+(D1TRKA-D1)(L'D1TRKA),=C'NOEMP '
         MVC   D2+(D1TRKU-D1)(L'D1TRKU),=C'NOSCR '
         TM    0(R2),X'80'         IS IT EMPTY FLAG
         BZ    PRINT36              NO
&TRKALN  SETA  L'D1TRKA
&TRKULN  SETA  L'D1TRKU
         MVC   D2+(D1TRKA-D1)(&TRKALN),=CL&TRKALN.'  EMP'
PRINT36  DS    0H
         TM    0(R2),X'40'         IS IT SCRATCH FLAG
         BZ    PRINT39              NO
         MVC   D2+(D1TRKU-D1)(&TRKULN),=CL&TRKULN.'  SCR'
PRINT39  DS    0H
         SPACE 1
         MVI   WGDGNAME,C' '
         PUT   WDCBPRT,D2
PRINT40  DS    0H                  NTH PRINT OF DSN
         OI    WFLAG2,$2PRTDSN     WE PRINTED THIS DSN
         PUT   WDCBPRT,D1             WRITE THE DETAIL-LINE
PRINT80  DS    0H
*--------------------------------------------------------------------*
*              LOOP THRU ALL VOLSERS                                 *
*--------------------------------------------------------------------*
         LTR   R9,R9               NO VOLSER ENTRIES
         BZ    PRINT90              YES, BYPASS
         LA    R6,CTVLLEN(,R6)     NEXT CATVOL ENTRY
         BCT   R9,VOLLOOP          AND LOOP
PRINT90  DS    0H
         B     READLOOP               GO GET ANOTHER RECORD
ENDOFJOB DS    0H
         TM    WDCBPRT+X'30',X'10' WAS IT OPENED
         BZ    ENDJ100
         CLOSE WDCBPRT,MF=(E,WCLOSE)  CLOSE THE PRINTER
ENDJ100  DS    0H
         TM    WDCBCARD+X'30',X'10' WAS IT OPENED
         BZ    ENDJ110
         CLOSE WDCBCARD,MF=(E,WCLOSE) CLOSE THE READER FILE
ENDJ110  DS    0H
RETURN   DS    0H
         L     R1,WVOLTBL@
         L     R0,WVOLTBSZ
         FREEMAIN R,LV=(0),A=(1)
         L     R1,WSTKTBL@
         FREEMAIN R,LV=WSTKTBLL,A=(1),SP=0
         LR    R1,R10
         L     R13,SAVEAREA+4         RESTORE LINK REG
         FREEMAIN R,LV=WORKLEN,A=(1),SP=0
         RETURN (14,12),T,RC=(15)     RETURN TO CALLER
ABEND001 DS    0H
         ABEND 1,DUMP
ABEND002 DS    0H
         ABEND 2,DUMP
ERRCARD  DS    0H
         WTO   'DSDSM08 READER1 DD MISSING',ROUTCDE=11
         B     ABEND001
ERRPRT   DS    0H
         WTO   'DSDSM08 PRINTER1 DD MISSING',ROUTCDE=11
         B     ABEND001
*--------------------------------------------------------------------*
*              ERRORS                                                *
*--------------------------------------------------------------------*
ERROBT   DS    0H
*
         CVD   R15,WDEC
         OI    WDEC+7,X'0F'
         MVC   OBTWTO+8+10(4),MASK3
         ED    OBTWTO+8+10(4),WDEC+6
         MVC   OBTWTO+8+18(06),WVOLSER
         MVC   OBTWTO+8+27(44),WDSENT
OBTWTO   WTO   'OBTAIN RC= XXX, V=VVVVVV,D=                            X
                                   ',ROUTCDE=11
         B     READLOOP
         SPACE 3
*--------------------------------------------------------------------*
*                                                                    *
*              SUBROUTINE SECTION                                    *
*                                                                    *
*--------------------------------------------------------------------*
         SPACE 3
GETVOLS  DS    0H
*--------------------------------------------------------------------*
*              GET VOLUME LIST     BAL   R14,GETVOLS                 *
*--------------------------------------------------------------------*
         STM   R14,R12,12(R13)
         LA    R1,72(,R13)
         ST    R1,8(,R13)
         ST    R13,4(,R1)
         LR    R13,R1
         SPACE 2
         MVC   D1NAME(50),=CL50'   *** VOLUMES TO BE SELECTED ***'
         PUT   WDCBPRT,D1
         MVC   D1,BLINE
         PUT   WDCBPRT,D1
         LA    R8,VOLTBL           1ST VOLUME ENTRY
         LA    R9,VOLTBL#          # OF VOLUME ENTRIES
GETV0100 DS    0H
         LA    R4,60               MAX BLANK COLUMES
         GET   WDCBVOL             GET RECORD
         LR    R3,R1
GETV0120 DS    0H
         CLI   0(R3),C' '          SCAN FOR 1ST NON-BLANK
         BNE   GETV0140            GOT IT
         LA    R3,1(,R3)           NEXT CHAR
         BCT   R4,GETV0120         LOOP
         B     GETV0100
GETV0140 DS    0H
         CLI   0(R3),C'*'          COMMENT
         BE    GETV0100             YES
         SPACE 3
         S     R4,=F'1'
         BM    GETV0100
         LR    R1,R3               COPY START
         XC    WTRT(256),WTRT
         MVI   WTRT+C' ',4         STOP ON BLANK
         EX    R4,GETVTRT
         SR    R1,R3
         S     R1,=F'1'
         BNP   GETV0100
         MVC   D1,BLINE            PRINT INPUT RECORD
         EX    R1,GETMVC           MOVE IN DATA
         PUT   WDCBPRT,D1           AND PRINT
         SPACE 3
         CLC   =C'$NOCAND',0(R3)   PARM OF NOCAND
         BNE   GETV0150             NO
         OI    WFLAG1,$1NOCAND      YES, SET IT
         B     GETV0100
GETVTRT  TRT   0(0,R3),WTRT
GETMVC   MVC   D1NAME+07(00),0(R3)
GETV0150 DS    0H
         CLC   =C'$MIGR',0(R3)     PARM OF MIGRATE
         BNE   GETV0160             NO
         OI    WFLAG1,$1MIGR        YES, SET IT
         B     GETV0100
GETV0160 DS    0H
         CLC   =C'$START=',0(R3)   PARM OF START=
         BNE   GETV0170             NO
         OI    WFLAG1,$1START       YES, SET IT
         LA    R3,7(,R3)
         MVC   WSTART,BLINE
         LA    R0,44
         LR    R1,R3               SCAN TILL BLANK
GETV0162 DS    0H
         CLI   0(R1),C' '          IS IT BLANK YET
         BE    GETV0168             YES
         LA    R1,1(,R1)            NO, INCR
         BCT   R0,GETV0162         AND LOOP
GETV0168 DS    0H
         SR    R1,R3               GET DSN PREFIX LENGTH
         S     R1,=F'1'            -1 MOVE EXECUTE
         BZ    GETV0170
MVCSTART MVC   WSTART(0),0(R3)     MOVE IN START
         EX    R1,MVCSTART
         B     GETV0100
*
GETV0170 DS    0H
         CLC   =C'$TAPE',0(R3)     PARM OF MIGRATE
         BNE   GETV0179             NO
         OI    WFLAG1,$1TAPE        YES, SET IT
         B     GETV0100
GETV0179 DS    0H
*--------------------------------------------------------------------*
*              MUST BE A VOLSER                                      *
*--------------------------------------------------------------------*
GETV0200 DS    0H
         MVC   0(6,R8),0(R3)       MOVE IN VOLSER
         SPACE 1
         OI    WFLAG1,$1VOLS       WE GOT VOLUMES
*
         LA    R8,VOLTBLLN(,R8)    NEXT ENTRY
         BCT   R9,GETV0100         AND LOOP
         WTO   'DSM08001 VOLUME TABLE OVERFLOW',ROUTCDE=11
GETVEOF  DS    0H
         CLOSE WDCBVOL,MF=(E,WCLOSE)
         TM    WFLAG1,$1VOLS
         BO    GVOLRC00
         MVC   D1,BLINE
         MVC   D1NAME+07(6),=CL6'*ALL*'
         PUT   WDCBPRT,D1
         MVC   D1,BLINE
         B     GVOLRC00
GVOLRC00 DS    0H
         L     R13,4(,R13)
         RETURN (14,12),RC=0
         SPACE 3
CATREAD  DS    0H
*--------------------------------------------------------------------*
*              READ CATALOG        BAL   R14,CATREAD                 *
*                                  R1 =  DSNAME                      *
*--------------------------------------------------------------------*
         STM   R14,R12,12(R13)
         LA    R14,72(,R13)
         ST    R13,4(,R14)
         ST    R14,8(,R13)
         LR    R13,R14
         SPACE 3
         MVC   WCTGENT,0(R1)
*--------------------------------------------------------------------*
*              RE-INITIALIAZE CTGWA                                  *
*              FOR FULL SEARCH                                       *
*--------------------------------------------------------------------*
CATR0000 DS    0H
         LA    R0,WCTGWA
         L     R1,=A($WCTGWAL)
         SR    R15,R15
*        MVCL  R0,R14
         MVC   WCTGWA,=AL2($WCTGWAL,0)
         MVI   CPL1#PL,CPL1@PLN    NUMBER OF ENTRIES IN PL
         SLR   R1,R1
         IC    R1,CPL1#PL
         LA    R2,CPL1@PL
         S     R1,=F'1'
         BNP   CATR0120
CATR0100 DS    0H
         LA    R2,4(,R2)           SKIP MULTITYP
         L     R3,0(,R2)
         MVC   LENTNAME-FENTNAME(8,R3),=D'0' ZERO LENGTH AND PTR
         BCT   R1,CATR0100
CATR0120 DS    0H
*--------------------------------------------------------------------*
*              CALL CATALOG                                          *
*--------------------------------------------------------------------*
         LA    R1,CTGPL01             POINT TO CPL1
         SR    R0,R0                  CLEAR R0
CAT26    SVC   26                     EXECUTE SVC26
CAT26A   LTR   R15,R15
*        BNZ   CATERR99
         SPACE 2
         CLC   CTGPL01+20(2),=XL2'0'  ANY FEEDBACK?
         BE    CATR0200                NO, GOT ONE
         CLC   CTGPL01+20(2),=C'AH'   UNKNOWN CATALOG
         BE    CATERR                  YES, GOT ONE
         CLC   CTGPL01+20(2),=C'FE'   UNKNOWN CATALOG PARM
         BE    CATERR2                 YES, GOT ONE
         CLC   CTGPL01+20(2),=C'EG'   END OF CATALOG
         BE    CATRRC08                YES,
         CLC   CTGPL01+20(2),=C'FT'   RACF PROTECTED DSN
         BE    CATRRC12                YES,
         CLC   CTGPL01+20(2),=C'H2'   VVDS VOLUME UNAVAILABLE
         BE    CATR0200                YES,
         B     CATERR99
CATR0200 DS    0H
         L     R1,PENTYPE
         MVC   WDSENTT,0(R1)       COPY ENTYPE
*
         MVC   WDSENT,BLINE        BLANK IT OUT
         ICM   R1,15,LENTNAME
         BNP   CATRRC00
         L     R2,PENTNAME
         MVC   WCTGENT,0(R2)
         MVC   WDSENT,0(R2)
*
         LA    R1,WDSENT           DSNAME @
*        BAL   R14,STKPUSH         STACK PUSH
         CLI   WDSENTT,C'B'        IS IT A GDG BASE
         BE    CATR1000             YES
         B     CATRRC00
*
CATR1000 DS    0H                  GDG BASE FOUND
*--------------------------------------------------------------------*
*              COPY GDGNAME TO GDGTBL                                *
*--------------------------------------------------------------------*
*--------------------------------------------------------------------*
*              PUSH @ OF EACH DSN ON STACK                           *
*--------------------------------------------------------------------*
         MVC   WGDGNAME,WDSENT     COPY GDGNAME
         L     R2,LGDGNAME         LENGTH OF GDGNAME FIELDS
         LTR   R2,R2
         BZ    CATRRC00
         SRDL  R2,32               SHIFT TO R3
         D     R2,=F'49'           AND GET # OF ENTRIES
*              R3 = QUOTIENT
         ST    R3,WGDGNUM
         L     R1,PGDGNAME
         LA    R1,1(,R1)           POINT PASSED ENTTYPE
CATR1210 DS    0H                  R1 = DSNAME
         BAL   R14,STKPUSH         PUSH ON STACK
CATR1220 DS    0H
         LA    R1,49(,R1)          NEXT ENTRY
         BCT   R3,CATR1210
CATRRCH2 DS    0H                  VVDS VOLUME MISSING
         LA    R15,0
         B     CATRRCXX
CATRRC00 DS    0H
         LA    R15,0
         B     CATRRCXX
CATRRC04 DS    0H
         LA    R15,4
         B     CATRRCXX
CATRRC08 DS    0H                  END OF CATALOG
         LA    R15,8
         B     CATRRCXX
CATRRC12 DS    0H                  END OF CATALOG
         LA    R15,12
         B     CATRRCXX
CATRRC16 DS    0H                  RECOVERABLE DSN ERROR
         LA    R15,16
         B     CATRRCXX
CATRRCXX DS    0H
         L     R13,4(,R13)
         RETURN (14,12),RC=(15)
*--------------------------------------------------------------------*
*              SVC   26 ERROR                                        *
*--------------------------------------------------------------------*
CATERR   DS    0H
         MVC   D1,BLINE               CLEAR THE DETAIL LINE
         MVC   D1+2(40),=CL40'  *** UNKNOWN CATALOG ***'
         PUT   WDCBPRT,D1             WRITE BAD RETURN MESSAGE
         B     CATRRC04
CATERR2  DS    0H
         MVC   D1,BLINE               CLEAR THE DETAIL LINE
         MVC   D1+2(40),=CL40'  *** UNKNOWN CATALOG PARAMETER *** '
         PUT   WDCBPRT,D1             WRITE BAD RETURN MESSAGE
         B     CATRRC08
CATERR99 DS    0H
         LR    R2,R0
         MVC   D1,BLINE               CLEAR THE DETAIL LINE
         MVC   D1+1(2),CTGPL01+20     MOVE IN FEED BACK CODE
         MVC   D1+5(46),=CL46'BAD RC=XXX RSN=XXX FROM SVC 26 - PREVIOUS.
                DSN='
*
         CVD   R15,WDEC            RC=
         OI    WDEC+7,X'0F'
         UNPK  D1+5+7(3),WDEC+6(2)
*
         CVD   R2,WDEC             RSN=
         OI    WDEC+7,X'0F'
         UNPK  D1+5+15(3),WDEC+6(2)
*
         MVC   D1+5+46(44),WDSENT
         PUT   WDCBPRT,D1             WRITE BAD RETURN MESSAGE
         SPACE 1
         ICM   R1,15,LENTNAME
         BZ    CATERR98
         MVC   D1,BLINE               CLEAR THE DETAIL LINE
         L     R2,PENTNAME
         MVC   D1+5(46),=CL46'                                  CURRENT.
                DSN='
         MVC   D1+5+46(44),0(R2)
CATERR98 DS    0H
         SR    R15,R15                CLEAR REG 15
         LA    R15,10                 SET RETURN CODE TO 10
         B     CATRRCXX
         SPACE 3
STKPUSH  DS    0H
*--------------------------------------------------------------------*
*              PUSH ENTRY ON STACK BAL   R14,STKPUSH                 *
*              INPUT               R1 =  @ OF DSNAME                 *
*--------------------------------------------------------------------*
         STM   R14,R12,12(R13)
         SPACE 3
         L     R2,WSTKCURR         @ OF CURRENT
         CLI   0(R2),0             IS CURRENT DATA = 0
         BE    SPUSH100             YES, DONT INCR
         LA    R2,44(,R2)          NEXT STACK ADDR
SPUSH100 DS    0H
         MVC   0(44,R2),0(R1)      SAVE IN @ OF DSN
         ST    R2,WSTKCURR         NEW CURRENT ENTRY
         MVI   44(R2),0            ZERO NEXT ENTRY
         AP    WSTKNUM,=P'1'
         RETURN (14,12),RC=0
         SPACE 3
STKPOP   DS    0H
*--------------------------------------------------------------------*
*              POP ENTRY FROM STAC K   BAL R14,STKPOP                *
*              OUTPUT              WDSENT =    DSNAME                *
*--------------------------------------------------------------------*
         STM   R14,R12,12(R13)
         SPACE 3
         CP    WSTKNUM,=P'0'
         BE    SPOPRC04
         L     R2,WSTKCURR
         MVC   WDSENT,0(R2)        COPY DSNAME
         MVI   0(R2),0             ZERO THIS ENTRY
         C     R2,WSTKTOP          ARE WE AT THE TOP
         BE    SPOPRC00             YES
         SL    R2,=F'44'           BACK UP 4
         ST    R2,WSTKCURR         AND SAVE
SPOPRC00 DS    0H
         SP    WSTKNUM,=P'1'
         OI    WFLAG3,$3STKOFF     GETTING FROM STACK
         LA    R15,0
SPOPRCXX DS    0H
         RETURN (14,12),RC=(15)
SPOPRC04 DS    0H
         NI    WFLAG3,255-$3STKOFF NOT FROM STACK
         ZAP   WSTKNUM,=P'0'
         LA    R15,4
         B     SPOPRCXX
         EJECT
*--------------------------------------------------------------------*
*              DATA AREAS                                            *
*--------------------------------------------------------------------*
*
DSCBCAM  CAMLST SEARCH,2,3,4
*
MASK3    DC    X'40202120'             MASK - ZZZ
TRANS    DC    C'0123456789ABCDEF'
*
DSNTYPE  DS    0H
         DC    CL15'A NONVSAM'
DSNTYPEL EQU   *-DSNTYPE
         DC    CL15'B GDG BASE'
         DC    CL15'D VSAM DATA'
         DC    CL15'I VSAM INDEX'
         DC    CL15'G AIX'
GDGTYPE  DC    CL15'H GDG NAME'
         DC    CL15'C CLUSTER'
DSNTYPE# EQU   (*-DSNTYPE)/DSNTYPEL
TRTDLM   DC    256AL1(0)
         ORG   TRTDLM+C' '
         DC    AL1(4)
         ORG   TRTDLM+C'.'
         DC    AL1(8)
         ORG   ,
*
*****    BEGINNING OF SVC26 PARAMETER LIST
*
CTGPL01  DS    0F
         DC    B'00000110'     0      SVC26 OPTION 1
         DC    B'00010001'     1      SVC26 OPTION 2
         DC    B'10000001'     2      SVC26 OPTION 3
         DC    B'00000000'     3      SVC26 OPTION 4
CPL1ENT  DC    AL4(0) WCTGENT  4      ADDRESS OF DATA SET NAME
CPL1CAT  DC    AL4(0) WCTGCAT  8      ADDRESS OF CATALOG NAME
CPL1WA   DC    AL4(0) WCTGWA   12     ADDRESS OF WORK AREA
         DC    B'00100001'     16     DO LISTCAT FUNCTION
         DC    B'00000000'     17     ?????
CPL1ENTT DC    X'FF'           18     TYPE OF CAT REC
CPL1#PL  DC    AL1(CPL1@PLN)   19     NUMBER OF CTGFIELD'S
         DC    AL2(0)          20     FEED BACK AREA(NOT SUPERL)
         DC    AL2(0)          22     SUPERLOCATE FLAGS
         DC    AL4(0)          24     ADDRESS OF JSCB
CPL1@PL  EQU   *
         DC    AL4(FMULTI)            MULTI
         DC    AL4(FENTNAME)          ENTNAME
         DC    AL4(FENTYPE)           ENTYPE
         DC    AL4(FCATVOL)           CATVOL
         DC    AL4(FOPENIND)          OPENIND
         DC    AL4(FGDGNAME)          GDGNAMES
         DC    AL4(FGDGLIM)           GDGLIMIT
         DC    AL4(FGDGATTR)          GDGATTR
         DC    AL4(FNOEXT)            NOEXTNT # OF EXTENTS
         DC    AL4(FITYPEXT)          EXTENT TYPE
         DC    AL4(FTRBAEXT)          TRKS-EXT INFO
         DC    AL4(FHURBADS)          HI USED RBA
         DC    AL4(FHARBADS)          HI ALLOC RBA
         DC    AL4(FDSATTR)           DSATTR
CPL1@PLN EQU   (*-CPL1@PL)/4
*
*****    END OF SVC26 PARAMETER LIST
*
*
*****    BEGINNING OF FIELD(S) TO BE RETURNED BY SVC26 INTO WCTGWA
*
MULTI    GENFPL MULTITYP,N=5       MAX LABEL LENGTH=7
ENTNAME  GENFPL ENTNAME
ENTYPE   GENFPL ENTYPE
OPENIND  GENFPL OPENIND
CATVOL   GENFPL CATVOL2
GDGNAME  GENFPL GDGNAME
GDGLIM   GENFPL GDGLIMIT
GDGATTR  GENFPL GDGATTR
NOEXT    GENFPL NOEXTNT
ITYPEXT  GENFPL ITYPEXT
TRBAEXT  GENFPL TRBAEXT
HURBADS  GENFPL HURBADS
HARBADS  GENFPL HARBADS
DSATTR   GENFPL DSATTR
*
*****    END OF FIELD(S) TO BE RETURNED BY SVC26 INTO WCTGWA
*
*
*****    END OF SVC26 USER WORK AREA
*
*
MTYPES   DC    Y(L'MTYPELST)       INFO FOR
MTYPELST DC    C'ABDHI'              MULTITYP
MTYPES#  EQU   *-MTYPELST              # OF FIELDS
MTYPELN  EQU   *-MTYPES                LENGTH OF MTYPES
*
*
*
         LTORG ,
*--------------------------------------------------------------------*
*              THIS MUST BE THE LAST THING BEFORE DSECTS             *
*              DUE TO A USING ON STATS,                              *
*--------------------------------------------------------------------*
STX1CAT  DC    CL(L'ST01CAT)' ENTRIES'
STX1PROC DC    CL(L'ST01PROC)' PRINTED'
STX1MISS DC    CL(L'ST01MISS)' MISSING'
STX1DEVT DC    CL(L'ST01DEVT)' BAD-DEV'
STX1MIGR DC    CL(L'ST01MIGR)' MIGRATE'
STX1TRKA DC    CL(L'ST01TRKA)' TRKS ALLOCATED'
STX1TRKU DC    CL(L'ST01TRKU)'      TRKS USED'
ST01     DS    0C
         DC    C' ## '
ST01CAT  DC    C' NNNNNNN'
         DC    C'  '
ST01PROC DC    C' NNNNNNN'
         DC    C'  '
ST01MISS DC    C' NNNNNNN'
         DC    C'  '
ST01DEVT DC    C' NNNNNNN'
         DC    C'  '
ST01MIGR DC    C' NNNNNNN'
         DC    C'  '
ST01TRKA DC    C' NNN,NNN,NNN,NNN '
         DC    C'  '
ST01TRKU DC    C' NNN,NNN,NNN,NNN '
ST01LEN  EQU   *-ST01
         SPACE 2
MVCTBL   DS    0F
         DC    A(XOPEN,XOPENL,WOPEN-WORK)
MVCTLEN  EQU   *-MVCTBL
         DC    A(XCLOSE,XCLOSEL,WCLOSE-WORK)
         DC    A(XDCBCARD,XDCBL,WDCBCARD-WORK)
         DC    A(XDCBPRT,XDCBL,WDCBPRT-WORK)
         DC    A(XDCBVOL,XDCBL,WDCBVOL-WORK)
         DC    A(0)
*
XOPEN    OPEN  (0),MF=L
XOPENL   EQU   *-XOPEN
*
XCLOSE   OPEN  (0),MF=L
XCLOSEL  EQU   *-XCLOSE
*
XDCBCARD DCB   DSORG=PS,MACRF=GM,DDNAME=READER1,EODAD=ENDOFJOB,        X
               RECFM=FB,LRECL=80
XDCBL    EQU   *-XDCBCARD
*
XDCBPRT  DCB   DSORG=PS,MACRF=PM,DDNAME=PRINTER1,                      X
               RECFM=FBA,LRECL=133
*
XDCBVOL  DCB   DSORG=PS,MACRF=GL,DDNAME=VOLUMES,EODAD=GETVEOF,         X
               RECFM=FB,LRECL=80
*
*--------------------------------------------------------------------*
*              DSECTS                                                *
*--------------------------------------------------------------------*
WORK     DSECT
*
SAVEAREA DS    (5*9)D                 SAVE AREA FOR CALLING PGM REGS
*
BLINE    DS    CL133' '            FILLED IN BY INITIALIZATION
DASH     DS    CL133'-'            ""
*--------------------------------------------------------------------*
*              INPUT CARD AREA                                       *
*--------------------------------------------------------------------*
CARDREC  DS    0CL80
CARDDIV  DS    CL2
         DS    CL78
*--------------------------------------------------------------------*
*              PRINT RECORD                                          *
*--------------------------------------------------------------------*
D1       DS    0CL133
         DS    C' '
D1NAME   DS    CL44' '              DATA SET NAME
         DS    CL2' '               CONTINUE CHARACTER
D1VOL    DS    CL6' '
         DS    CL1' '
D1STAT   DS    CL8' '
         DS    CL1' '
D1OPEN   DS    CL6' '
         DS    CL1' '
D1EXT    DS    CL4' '
         DS    CL1' '
D1TYPE   DS    CL(DSNTYPEL-2)' '
         DS    CL1' '
D1TRKA   DS    CL6' '              TRACK ALLOC
         DS    CL1' '
D1TRKU   DS    CL6' '              TRACK USED
         DS    CL1' '
         DS    CL(133-(*-D1))' '
D2       DS    CL133' '
*--------------------------------------------------------------------*
*              OBTAIN WORK AREAS                                     *
*--------------------------------------------------------------------*
*
OBTDSN   DS    CL44                    PLACE FOR DSNAME
OBTVOL   DS    CL6                     PLACE FOR VOLUME ID
*
DS1AREA  DS    0CL256 --+              PLACE FOR DSCB INFO
         DS    CL31     |              FILLER
DS1REFDT DS    CL3      |              DATE FILE WAS LAST REFERENCED
         DS    CL4      |              FILLER
DS1DSORG DS    CL2      |              DATASET ORGANIZATION
         DS    CL9      |              FILLER
DS1PTIND DS    CL1      |              PROTECTION INDICATOR
         DS    CL90     |              FILLER
DS1PTIN1 DS    CL1      |              PROTECTION INDICATOR
DS1PTIN2 DS    CL1      |              OPEN INDICATOR
         DS    0D       V              WDEC ALIGN
         DS    CL(L'DS1AREA-(*-DS1AREA)) FILL OUT WORK AREA
*--------------------------------------------------------------------*
*              VOLUME INCLUSION TABLE                                *
*--------------------------------------------------------------------*
*
VOLTBL   DS    0F
         DS    50CL6' '
VOLTBLLN EQU   6
VOLTBL#  EQU   (*-VOLTBL)/VOLTBLLN
*
*
WDEC     DS    2D'0'
WPARM    DS    A
WVOLSER  DS    CL6' '
WVOLDEVT DS    CL4' '
WNUMTRKA DS    PL6'0'              11 DIGITS
WNUMTRKU DS    PL6'0'              11 DIGITS
WNUMCAT  DS    PL4'0'               7 DIGITS
WNUMPROC DS    PL4'0'               7 DIGITS
WNUMMISS DS    PL4'0'               7 DIGITS
WNUMMIGR DS    PL4'0'               7 DIGITS
WNUMDEVT DS    PL4'0'               7 DIGITS
WNUMVOL  DS    A(0)
WTRKALLO DS    F
WCALL    DS    5F
WALIAS   DS    CL8
WALIASPV DS    CL8
WALIASCT DS    CL44
WSTART   DS    CL44' '
*
*--------------------------------------------------------------------*
*              FLAGS                                                 *
*--------------------------------------------------------------------*
WFLAG1   DS    X'00'               FLAG 1 OPTIONS
$1ALL    EQU   X'80'                DO ALL DSN, NOT JUST MISSING
$1OPEN   EQU   X'40'                ONLY SHOW OPEN DSN
$1VOLS   EQU   X'20'                VOLUMES READ IN
$1NOCAND EQU   X'10'                NO CANDIDATE VOLUMES
$1MIGR   EQU   X'08'                PRINT MIGRATED DSN
$1START  EQU   X'04'                START=
$1TAPE   EQU   X'02'                $TAPE OK
*
WFLAG2   DS    X'00'               FLAG 2 LOCAL FOR BINGO
$2PRTDSN EQU   X'80'                PRINTED THIS DSN ALREADY
$2MISS   EQU   X'40'                MISSING VOLSER
$2OPEN   EQU   X'20'                IS THIS DSN OPEN
$2MIGR   EQU   X'08'                IS THIS DSN MIGRATED
$2TAPE   EQU   X'04'                THIS IS ON TAPE, NOT MIGRATED
*
WFLAG3   DS    X'00'               FLAG 3 GLOBAL
$3STKOFF EQU   X'80'                THIS ENTRY OFF OF STACK
*
WSTKNUM  DS    A
WSTKCURR DS    A
WSTKTOP  DS    A
WSTKTBL@ DS    A
WSTKTBLL EQU   256*45
WTRT     DS    256X'00'
*--------------------------------------------------------------------*
*              SVC 26 DATA AREA                                      *
*--------------------------------------------------------------------*
WDSENTT  DS    CL1' '               ENTYPE
WDSENT   DS    CL44' '              DATA SET NAME
WDSENT43 EQU   WDSENT+43            LAST BYTE OF DATA SET NAME
WCTGENT  DS    CL44' '              CTG DSNAME
WCTGCAT  DS    CL44' '              CTG CATNAME
WGDGNAME DS    CL44' '              CURRENT/LAST GDGNAME
WGDGNUM  DS    A                    CURRENT GDG USED
*--------------------------------------------------------------------*
*              DCB AREA                                              *
*--------------------------------------------------------------------*
         DS    0F
WOPEN    DS    CL(XOPENL),0F
WCLOSE   DS    CL(XCLOSEL),0F
WDCBCARD DS    CL(XDCBL),0F
WDCBPRT  DS    CL(XDCBL),0F
WDCBVOL  DS    CL(XDCBL),0F
*--------------------------------------------------------------------*
*              UCBINFO WORK AREA                                     *
*--------------------------------------------------------------------*
         DS    0A                           VOLS OPERAND SUB-FIELDS
WVOLTBL@ DS    A
WVOLTBSZ DS    A
WDEVCNT  DS    A                   DEVICE COUNT
WDEVRETC DS    A                   RETURN CODE
WDEVRSNC DS    A                   REASON CODE
         UCBINFO MF=(L,WUCBINFO,0D)
*--------------------------------------------------------------------*
*              UCBSCAN WORK AREA                                     *
*--------------------------------------------------------------------*
         DS    0A                           VOLS OPERAND SUB-FIELDS
WUCBSVCW DS    0F'0',XL100                  UCBSCAN WORK AREA
WUCBMXT  DS    CL32' '                      UCBSCAN CMXTAREA
WUCBDEVN DS    CL4                          DEVNAME
WUCBDCEL DS    H'128'                       UCBSCAN DCELEN=128
WUCBDCE  DS    CL128' '                     UCBSCAN DCEAREA
WUCBCOPY DS    0F'0',CL64                   COPY OF RETURNED UCB
         DS    CL64                         JUST IN CASE
         UCBSCAN MF=(L,WUCBSCAN,0D)
*--------------------------------------------------------------------*
*              SVC 26 WORK AREA                                      *
*--------------------------------------------------------------------*
*
*        DEFINITION OF AMDSB (PAGES 167-168 DIAGNOSES REFERENCE)
*        SAME  ORDER AS IN CTGPL01
*
$WCTGWAL EQU   13000
WCTGWA   DS    0D
         DS    AL2($WCTGWAL)       LENGTH OF WORK AREA
         DS    AL2(0)              LENGTH OF WORK AREA USED
         DS    ($WCTGWAL-(*-WCTGWA))C
         SPACE 3
WORKLEN  EQU   *-WORK
         SPACE 3
*--------------------------------------------------------------------*
*              CATVOL2 RETURNED AREA                                 *
*--------------------------------------------------------------------*
CTVL     DSECT
CTVLID   DS    AL2                 VOLUME NUMBER
CTVLUNIT DS    XL4                 UNIT TYPE
CTVLVOL  DS    CL6                 VOLSER
CTVLFOX  DS    XL2                 X'FFFF'
CTVLSTAT DS    X                   VOLSER STAT
CTVLSPRI EQU   X'80'                VOLSTAT = PRIME
CTVLSCAN EQU   X'40'                VOLSTAT = CANDIDATE
CTVLSBAS EQU   X'02'                VOLSTAT = BASE
CTVLSASS EQU   X'01'                VOLSTAT = ASSOCIATE
CTVLFLGS DS    XL1                 OTHER FLAGS
CTVLLEN  EQU   *-CTVL
*
*--------------------------------------------------------------------*
*              VOLDEVT DSECT                                         *
*--------------------------------------------------------------------*
VOLDEVT  DSECT
VOLDVOL  DS    CL6                 VOLSER
VOLDUNIT DS    XL4                 UNIT TYPE
VOLDLEN  EQU   *-VOLDEVT
*--------------------------------------------------------------------*
*              IBM DSECTS                                            *
*--------------------------------------------------------------------*
*              UCB   - IOS UNIT CONTROL BLOCK
         PRINT NOGEN
*UCB     DSECT
         IEFUCBOB PREFIX=YES
         PRINT GEN
*--------------------------------------------------------------------*
*              REGISTER EQUATES                                      *
*--------------------------------------------------------------------*
*
R0       EQU   0
R1       EQU   1                     PARAMETER LIST
R2       EQU   2                     BASE REGISTER 1
R3       EQU   3                     BASE REGISTER 2
R4       EQU   4
R5       EQU   5
R6       EQU   6                     DECIMAL CONVERSION WORK REGISTER
R7       EQU   7
R8       EQU   8                     MAXIMUM NUMBER OF LINES PER PAGE
R9       EQU   9                     NUMBER OF LINES PRINTED
R10      EQU   10                    LINE COUNT INCREMENTOR
R11      EQU   11
R12      EQU   12                    BRANCH AND LINK REGISTER
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END   DSDSM08
