*--------------------------------------------------------------------*
*            TSO COMMAND TO LIST OUT THE APF LIBRARIES               *
*                                                                    *
*                 SUPPORTS DYNAMIC APF DEFINITIONS                   *
*                                                                    *
* ATTRIB:      AMODE31 RMODE24 RENT REUSE                            *
*                                                                    *
* WRITTEN BY:  K.M. (SAM) BASS (SBASS,SJB,KBASS,KMB)                 *
*                                                                    *
*              CONVERTED TO PUTLINE OUTPUT  (S.GOLOB - 03/21/2011)   *
*                                                                    *
* FLAGS:       'M'     MUST BE MISCATALOGED                          *
*              '?'     DATASET MISSING                               *
*--------------------------------------------------------------------*
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------- *
APFLIST  AMODE 31
APFLIST  RMODE 24
APFLIST  CSECT
         SAVE  (14,12),T,APFLIST_&SYSDATC._&SYSTIME.
         LR    R12,R15
         USING APFLIST,R12
         L     R0,=A(WORKLEN)
         GETMAIN RU,LV=(0),LOC=BELOW
         ST    R1,8(,R13)          STORE OUR SAVE AREA
         LR    R2,R1
         LR    R3,R0               ZERO
         SLR   R15,R15               AREA
         MVCL  R2,R14              ...
*
         ST    R13,4(,R1)          SAVE THEIR'S IN OUR'S
         LR    R13,R1
         USING WORK,R13
*
         L     R3,X'10'
         USING CVT,R3
         L     R4,CVTAUTHL         @ OF APF TABLE
         CL    R4,=X'7FFFF001'     IS IT DYNAMIC
         BE    DYNAMIC              YES
         CL    R4,=X'00000000'     IS IT DYNAMIC
         BE    DYNAMIC              YES
STATIC   DS    0H
         MVC   WTYPE,=CL7'STATIC'
         LH    R5,0(,R4)           GET # OF ENTRIES
         LA    R4,2(,R4)           PASSED PREFIX
         LR    R1,R5
         SPACE 2
         BAL   R9,TITLES
         SPACE 2
*--------------------------------------------------------------------*
*              STATIC APF LIBRARIES                                  *
*--------------------------------------------------------------------*
STATIC10 DS    0H
         SR    R2,R2
         IC    R2,0(R4)            GET THIS LENGTH
         ST    R2,WDSNLEN          LENGTH OF DSN
*
         MVC   WDSNAME,BLANKS      BLANK DSNAME
         SH    R2,=H'7'            -1 -LENGTH(VOL)
         BNP   EXIT
         MVC   WDSNAME(0),7(R4)
         EX    R2,*-6              MOVE IN DSNAME
*
         MVC   WDSNVOL,1(R4)       MOVE IN VOLSER
         MVI   WDSNSMS,C' '
*
         BAL   R9,MSGRTN
*
         LA    R4,1(,R4)           PASSED AL1(ENTLEN)
         AL    R4,WDSNLEN          PASSED TOTAL LENGTH
         BCT   R5,STATIC10
         B     EXIT
*--------------------------------------------------------------------*
*              DYNAMIC APF                                           *
*--------------------------------------------------------------------*
DYNAMIC  DS    0H
         MVC   WTYPE,=CL7'DYNAMIC'
         CSVAPF REQUEST=LIST,ANSAREA=WCSVWORK,ANSLEN==A(WCSVWRKL),     X
               MF=(E,WCSVAPF)
         LTR   R15,R15
         BNZ   DYNERR
         LA    R4,WCSVWORK
         USING APFHDR,R4
         L     R5,APFH#REC         # OF ENTRIES RETURNED
         L     R6,APFHOFF          OFFSET TO FIRST APFE
         DROP  R4
         ALR   R4,R6               ADDRESS OF 1ST APFE
         USING APFE,R4
         SPACE 1
         LR    R1,R5
         BAL   R9,TITLES
         SPACE 1
DYN00100 DS    0H
         MVC   WDSNVOL,APFEVOLUME
         MVC   WDSNAME,APFEDSNAME
         MVI   WDSNSMS,C' '        ASSUME NON-SMS
         TM    APFEFLAGS,APFESMS   IS IT SMS
         BZ    DYN00120             NO
         MVI   WDSNSMS,C'Y'         YES, SET FLAG
DYN00120 DS    0H
         BAL   R9,MSGRTN
         AH    R4,APFELEN          POINT AT NEXT ENTRY
         BCT   R5,DYN00100
         B     EXIT
*--------------------------------------------------------------------*
*              TITLE ROUTINE       BAL  R9,TITLES  R1=NUMBER         *
*--------------------------------------------------------------------*
TITLES   DS    0H
         CVD   R1,WDEC
         OI    WDEC+7,X'0F'
         MVC   WMSG,TITLE1
         MVC   WMSG+11(4),=X'40202021'
         ED    WMSG+11(4),WDEC+6
         MVC   WMSG+16(7),WTYPE
         APUT  WMSG,L'WMSG
         APUT  TITLE2,L'TITLE2
         ZAP   WDSNUM,=P'1'
         BR    R9
*--------------------------------------------------------------------*
*              MESSAGE ROUTINE     BAL   R9,MSGRTM                   *
*--------------------------------------------------------------------*
MSGRTN   DS    0H
         MVC   WMSG,BLANKS
         MVC   WMSG+$NUM(4),=X'40202120'
         ED    WMSG+$NUM(4),WDSNUM
         MVC   WMSG+$APFVOL(06),WDSNVOL
         MVC   WMSG+$SMS(1),WDSNSMS
         MVC   WMSG+$DSN(44),WDSNAME
*--------------------------------------------------------------------*
*              ISSUE LOCATE TO FIND VOLSER OF DATASET                *
*--------------------------------------------------------------------*
         MVI   WCAMWRK2,X'FF'
         MVC   WCAMWRK2+1(255),WCAMWRK2
         XC    WCAMLST,WCAMLST     ZERO WCAMLST
         MVC   WCAMLST(4),=XL4'44000000' LOCATE PARMS
         LA    R0,WDSNAME
         ST    R0,WCAMLST+4        @ OF DATASET
         LA    R0,WCAMWRK
         ST    R0,WCAMLST+12       @ OF WCAMLST WORK AREA
         SPACE 1
         LA    R1,WCAMLST
LOCATE   SVC   26                  LOCATE DATASET
         MVC   WMSG+$CATVOL(6),WCAMWRK+6
         SPACE 1
         MVI   WMSG+$FLAG,C' '
         CLC   WDSNVOL,WMSG+$CATVOL
         BE    APF00160
         MVI   WMSG+$FLAG,C'?'
         TM    WMSG+$CATVOL,X'BF'  ZERO OR BLANK CATVOL
         BE    APF00160
         SPACE 1
         CLC   =C'*SMS*',WDSNVOL   IS IT *SMS* TYPE
         BNE   APF00140             NO
         CLI   WDSNSMS,C'Y'        IS IT REALLY SMS MANAGED
         BNE   APF00140             NO, THEN 'M'
         MVI   WMSG+$FLAG,C' '      YES, BLANK FLAG
         B     APF00160
APF00140 DS    0H
         MVI   WMSG+$FLAG,C'M'     MUST BE MISCATALOGED
APF00160 DS    0H
         SPACE 1
         APUT  WMSG,L'WMSG
APF00180 DS    0H
         AP    WDSNUM,=P'1'
         BR    R9
*--------------------------------------------------------------------*
*              RETURNS                                               *
*--------------------------------------------------------------------*
DYNERR   DS    0H
EXIT     DS    0H
         LR    R1,R13
         L     R13,4(,R13)
         L     R0,=A(WORKLEN)
         FREEMAIN RU,A=(1),LV=(0)
         RETURN (14,12),RC=0
*--------------------------------------------------------------------*
*              D A T A   A R E A S                                   *
*--------------------------------------------------------------------*
$NUM     EQU   1
$APFVOL  EQU   6,6
$CATVOL  EQU   $APFVOL+7,6
$FLAG    EQU   $CATVOL+7,1
$SMS     EQU   $FLAG+3,1
$DSN     EQU   $SMS+3,44
TITLE1   DC    CL72'*** LIST OF XXX ....... APF LIBRARIES ***'
TITLE2   DC    CL72'  ### APFVOL CATVOL F SMS DSNAME......'
BLANKS   DC    CL72' '
         LTORG ,
*--------------------------------------------------------------------*
*              DSECTS                                                *
*--------------------------------------------------------------------*
WORK     DSECT
WSAVE    DS    9D
WDEC     DS    2D'0'
WDSNUM   DS    PL2'0'
WDSNLEN  DS    A(0)
WDSNAME  DS    CL44' '
WDSNVOL  DS    CL6' '
WDSNSMS  DS    CL1' '
WTYPE    DS    CL7' '
WMSG     DS    CL72' '
         DS    0D                  ALIGNMENT
WCAMLST  DS    XL256'0',0D
WCAMWRK  DS    XL256'00',0D
WCAMWRK2 DS    XL256'00',0D        NEEDED FOR WCAMWRK OVERLAY
WCSVAPFX CSVAPF MF=(L,WCSVAPF)
WCSVWORK DS    (1000)CL60
WCSVWRKL EQU   *-WCSVWORK
         DS    0D
WORKLEN  EQU   *-WORK
*--------------------------------------------------------------------*
*              DSECTS                                                *
*--------------------------------------------------------------------*
         CVT   DSECT=YES,LIST=NO
         CSVAPFAA ,
         YREGS  ,
         END   ,
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   128                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
