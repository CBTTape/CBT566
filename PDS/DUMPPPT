         TITLE 'DUMPPPT - Show all entries in Current PPT'
DUMPPPT  CSECT                     Module entry point
DUMPPPT  AMODE 31
DUMPPPT  RMODE ANY
*
* Body of non-reentrant module which prints program names in the PPT
*
         STM   14,12,12(13)            Standard module linkage
         LR    12,15
         USING DUMPPPT,12
         ST    13,SAVEAREA+4
         LR    2,13
         LA    13,SAVEAREA
         ST    13,8(,2)
*
* -- >       Test if this command is being run APF Authorized
         STM   R15,R1,SAVE14T1     Now save registers and test if APF
         XR    R15,R15                  authorized.
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         LM    R15,R1,SAVE14T1     Restore registers used by TESTAUTH.
* -- >                             We're authorized. Go Key 0.
         MODESET MODE=SUP,KEY=ZERO     Need supervisor state, key 0/1
*
* Set up for looking at PPT entries
*
         LA    2,PPTENT                Point to copy of PPT entry
         USING PPTENTRY,2              Set up addressability
         XC    SCNTOKEN,SCNTOKEN       Clear token
NEWLINE  DS    0H
         LA    3,TEXT1
         MVC   TEXT1,=CL80' '
*
LOOP     DS    0H                      Loop getting PPT entries
         IEFPPSCN REQUEST=NEXT,TOKEN=SCNTOKEN,PPTINFO=PPTE
         LTR   15,15                   Check whether entry was returned
         BNZ   ENDLOOP
         MVC   0(8,3),PPTNAME          Copy program name to message
*--------------------------------------------------------------------*
*              GET ATTRIBUTES                                        *
*--------------------------------------------------------------------*
         LA    R3,9(,R3)           POINT TO FIRST ATTR SPOT
         LA    R10,PPTATTRI
LOOPATTR DS    0H
         CLI   0(R10),X'FF'        ATTR DONE?
         BE    ATTRDONE
         IC    R15,0(R10)          GET TEST BIT
         EX    R15,ATTRTM          TM    PPTBYTE1,*-*
         BZ    ATTR0800
ATTR0100 DS    0H
         MVC   00(08,R3),1(R10)    MOVE IN ATTR TEXT
         TM    0(R10),PPTSKEY      IS THIS KEY
         BZ    ATTR0200
         IC    R15,PPTKEY          GET PPTKEY
         SRL   R15,4                SHIFT DOWN TO LOW DIGIT
         STC   R15,04(,R3)         PUT IN MESSAGE
         OI    04(R3),X'F0'        MAKE DISPLAYABLE
         TR    04(1,R3),TRANS-240
ATTR0200 DS    0H
ATTR0800 DS    0H
         LA    R3,09(,R3)
         LA    R10,PPTATTLN(,R10)  NEXT PPT ATTRIB
         B     LOOPATTR
ATTRTM   TM    PPTBYTE1,0          EXECUTED TEST PPT FLAG BYTE
ATTRDONE DS    0H
         WTO   TEXT=ENTRYTXT,ROUTCDE=11
         B     NEWLINE                 Get next entry, if any
*
ENDLOOP  DS    0H                      Finished with PPT
         WTO   TEXT=ENTRYTXT
         IEFPPSCN REQUEST=END,TOKEN=SCNTOKEN
         MODESET MODE=PROB,KEY=NZERO   Return to problem state
*        LA    1,=C'NONE'
*        SVC   242
*
*  Return to the calling program with the return code last passed by
*  IEFPPSCN.
*
GOBACKX  DS    0H
         L     13,SAVEAREA+4           Return linkage
         L     14,12(,13)
         LM    0,12,20(13)
         BR    14
NOTAUTH  DS    0H
         WTO   TEXT=ERRORTXT,ROUTCDE=11
         B     GOBACKX
PPTATTRI DS    0CL09               FIRST BYTE OF PROPERTIES
         DC    X'80',CL08'NOCANCEL'
PPTATTLN EQU   *-PPTATTRI
         DC    X'40',CL08'KEY(X)' KEY IN PPTKEY
         DC    X'20',CL08'NONSWAP'
         DC    X'10',CL08'PRIV'
         DC    X'08',CL08'SYST'
         DC    X'04',CL08'NODSI'
         DC    X'02',CL08'PASS'
         DC    32X'FF'
TRANS    DC    C'0123456789ABCDEF'
*
****          LOCAL STORAGE DEFINITIONS         ****
SCNTOKEN DC    A(0)                    PPT SCAN TOKEN
PPTE     DC    AL2(L'PPTENTRY)         LENGTH OF A PPT ENTRY
PPTENT   DS    CL(L'PPTENTRY)          PPT ENTRY RETURN AREA
SAVEAREA DC    18F'0'
SAVE14T1 DS    5F
TEXTM    DC    CL80' '
*
*  THE FOLLOWING AREAS ARE USED TO PRINT THE PROGRAM NAME WITHIN THE
*  PPT.  ADDITIONAL FORMATTING IS REQUIRED TO MAKE ALL THE
*  INFORMATION READABLE.
*
ENTLEN   EQU   9
ENTRYTXT DS    0F                      AREA FOR PRINTING
TEXTL    DC    Y(L'TEXT1)              MESSAGE LENGTH
TEXT1    DC    CL80' '
ERRORTXT DS    0F                      AREA FOR PRINTING
TERRL    DC    Y(L'TERR1)              MESSAGE LENGTH
TERR1    DC    CL40'DUMPPPT Program must be Authorized'
*
*  THE FOLLOWING MAPPING MACROS ARE REQUIRED FOR THE IEFPPSCN MACRO.
*
         CVT DSECT=YES
         IEFJESCT
         IEFZB610
         YREGS ,
         END   DUMPPPT
