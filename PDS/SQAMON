         PUNCH ' SETCODE AC(1) '
*--------------------------------------------------------------------*
*              PROGRAM TO MONITOR SQA AND CSA SIZE                   *
*              MUST RUN V=R                                          *
*              WRITE MESSAGE IF SQA/ESQA CHANGES ANY                 *
*                               CSA CHANGES BY  12K OR               *
*                              ECSA CHANGES BY 100K OR               *
*                               CSA/ECSA FREE IS < 50K               *
*              PARM=NN  2 DIGIT NUMBER FOR SLEEP TIME IN SECONDS     *
*--------------------------------------------------------------------*
SQAMON   AMODE 31
SQAMON   CSECT
         SAVE  (14,12)
         LR    R12,R15             BASE REG
         USING SQAMON,R12
         ST    R13,SAVE+4          SAVE AREA
         LA    R13,SAVE               CONVENTIONS
         L     R1,0(0,R1)          PARM ADDR
         SPACE 2
         MVZ   TIME+4(2),2(R1)     CHECK PARM FOR NUMERIC
         CLC   TIME+4(2),=C'00'    PARM NUMERIC
         BNE   ABEND               NO, GO ABEND
         MVC   TIME+4(2),2(R1)     MOVE IN 2 DIGIT SECONDS
         MVC   ABND(1),4(R1)       SET ABEND IND
*        LA    R1,=C'AUTH'
*        SVC   245
MODESET  MODESET KEY=ZERO,MODE=SUP
         USING CVT,R4
         L     R4,16               CVT ADDR
         L     R4,CVTGDA           GDA ADDR
         DROP  R4
         USING GDA,R4
         SPACE 3
EXTRACT  EXTRACT MODIFY,FIELDS=COMM
         L     R2,MODIFY           POINT AT MODIFY FIELD.
         LA    R8,4(R2)            GET CIB ADDRESS IN R8.
         CLC   =F'0',0(R8)         STARTED FROM CONSOLE?
         BE    GETCIB              YES: SKIP FREE.
         QEDIT ORIGIN=(R8)         NO:  FREE CIB.
         SPACE 3
GETCIB   EQU   *                   HERE TO GET CIB.
         QEDIT ORIGIN=(R8),CIBCTR=1 GET CIB FOR STOP/MODIFY.
         MVC   ECBLIST,0(R2)       SET ECB ADDRESS.
         OI    ECBLIST,X'80'
         SPACE 3
DQESTART DS    0H
         L     R9,GDACSASZ         CSA SIZE
         SL    R9,GDACSACV         MINUS CSA CONVERTED TO SQA
         ST    R9,CSASZ1           CSA SIZE
         MVC   SQASPILL,GDACSACV   SQA SPILLAGE
         SPACE 1
         L     R9,GDAECSAS         ECSA SIZE
         ST    R9,CSASZ2           ECSA SIZE
         SPACE 1
         L     R3,GDASQASZ         SQA SIZE
         A     R3,GDACSACV         ADD CSA CONVERTED TO SQA
         ST    R3,SQASZ1
         SPACE 1
         L     R3,GDAESQAS         ESQA SIZE
         ST    R3,SQASZ2           ESQA SIZE
         SPACE 1
DQELOOP  DS    0H
         SPACE 3
*--------------------------------------------------------------------*
*              SUM UP FREE CSA                                       *
*--------------------------------------------------------------------*
         SPACE 1                                                    SJB
CSA10000 DS    0H
         L     R10,GDAFBQCF        1ST CSA FBQE                     SJB
         USING FBQE,R10                                             SJB
         SLR   R11,R11             CLEAR COUNTER                    SJB
CSA10100 DS    0H                  NEXT FBQE                        SJB
         A     R11,FBQESIZE        OK, ADD IT IN                    SJB
         C     R10,GDAFBQCL        IS THIS THE LAST ONE             SJB
         BE    CSA10800             YES                             SJB
         L     R10,FBQENEXT        NEXT CSA FBQE
         LTR   R10,R10             DONE
         BNZ   CSA10100             NO                              SJB
CSA10800 DS    0H
         ST    R11,CSAFREE1
         SPACE 1
CSA20000 DS    0H
         L     R10,GDAEFBCF        1ST CSA FBQE                     SJB
         USING FBQE,R10                                             SJB
         SLR   R11,R11             CLEAR COUNTER                    SJB
CSA20100 DS    0H                  NEXT FBQE                        SJB
         A     R11,FBQESIZE        OK, ADD IT IN                    SJB
         C     R10,GDAEFBCL        IS THIS THE LAST ONE             SJB
         BE    CSA20800             YES                             SJB
         L     R10,FBQENEXT        NEXT CSA FBQE
         LTR   R10,R10             DONE
         BNZ   CSA20100             NO                              SJB
CSA20800 DS    0H
         ST    R11,CSAFREE2
         SPACE 3
PWAIT    L     R7,ECBLIST          POINT TO ECB.
         MVI   FLAG,X'00'          ZERO FLAG                        SJB
         TM    0(R7),X'40'         COMPLETED?
         BO    MODIFIED            YES: GO SEE WHAT THEY WANT.
*                                                                   SJB
SQACHK   DS    0H
         CLC   SQASZ1,SQASZO1      SIZE CHANGE YET
         BE    SQACHK2              NO                              SJB
         BAL   R2,SQADIS1          YES, GO DISPLAY SQA SIZE         SJB
SQACHK2  DS    0H
         CLC   SQASZ2,SQASZO2      SIZE CHANGE YET
         BE    SQACHK3              NO                              SJB
         BAL   R2,SQADIS2          YES, GO DISPLAY SQA SIZE         SJB
SQACHK3  DS    0H
*                                                                   SJB
CSACHK1  DS    0H                  GET OLD CSAFREE1                 SJB
         CLC   CSAFREE1,=A(50*1024) IS IT <= 50K                    SJB
         BNH   CSACHK1D            YES, DISPLAY                     SJB
         L     R1,CSAFREO1         GET OLD CSAFREE1                 SJB
         S     R1,CSAFREE1         GET THE DIFFERENCE  OLD-NEW      SJB
         LPR   R1,R1               GET ABSOLUTE                     SJB
         C     R1,=A(12*1024)      >= 12K DIFFERENCE                SJB
         BL    CSACHK2             NO, GO WAIT                      SJB
CSACHK1D BAL   R2,CSADIS1          YES, GO DISPLAY CSA SIZE         SJB
*                                                                   SJB
*                                                                   SJB
CSACHK2  DS    0H                  GET OLD CSAFREE2                 SJB
         CLC   CSAFREE2,=A(50*1024) IS IT <= 50K                    SJB
         BNH   CSACHK2D            YES, DISPLAY                     SJB
         L     R1,CSAFREO2         GET OLD CSAFREE2                 SJB
         S     R1,CSAFREE2         GET THE DIFFERENCE  OLD-NEW      SJB
         LPR   R1,R1               GET ABSOLUTE                     SJB
         C     R1,=A(100*1024)     >=100K DIFFERENCE                SJB
         BL    CSACHK3             NO, GO WAIT                      SJB
CSACHK2D BAL   R2,CSADIS2          YES, GO DISPLAY CSA SIZE         SJB
*                                                                   SJB
CSACHK3  TM    FLAG,$DISPLAY       WAS A DISPLAY DONE               SJB
         BO    ECBCHK              YES                              SJB
         B     WAIT                GO WAIT                          SJB
*                                                                   SJB
         SPACE 3
MODIFIED L     R8,MODIFY           GET POINTER IN R8.
         L     R2,4(R8)            POINT AT CIB.
         USING CIBDSECT,R2         GET ADDRESSABILITY TO CIB.
         TM    CIBVERB,CIBMODFY    NO:  MODIFY?
         BO    MODFY               YES: CHECK IT.
         TM    CIBVERB,CIBSTOP     NO:  STOP?
         BO    EOJ                 YES: GO STOP.
         SPACE 3
         ABEND 99,DUMP             SHOULD NEVER GET HERE.
         SPACE 3
MODFY    CLC   =CL4'SIZE',CIBDATA  SIZE REQESTED?
         NOP   INVAL               YES: OK.
         BAL   R2,SQADIS1          DISPLAY SQA                      SJB
         BAL   R2,SQADIS2          DISPLAY ESQA                     SJB
         BAL   R2,CSADIS1          DISPLAY CSA                      SJB
         BAL   R2,CSADIS2          DISPLAY ECSA                     SJB
         B     ECBCHK                                               SJB
INVAL    MVC   INVALID+8+9(4),CIBDATA MOVE REPLY INTO MESSAGE.
INVALID  WTO   'SQAMON - XXXX IS AN INVALID REQUEST.',                 X
               ROUTCDE=(1,11),DESC=3
         B     RESETCIB
         SPACE 3
ECBCHK   L     R7,ECBLIST          POINT TO ECB.
         TM    0(R7),X'40'         POSTED
         BZ    ABNDCHK             NO WTOR
         SPACE 3
RESETCIB LA    R8,4(R8)            BUMP POINTER.
         L     R1,0(R8)            ADDRESS OF CIB IN REG1.
         QEDIT ORIGIN=(R8),BLOCK=(R1) RELEASE LAST CIB AREA.
         SPACE 3
WAIT     STIMER WAIT,DINTVL=TIME     WAIT 10 SECS
         B     DQESTART            CHECK SQA SIZE AGAIN
         EJECT
SQADIS1  DS    0H
         L     R3,SQASZ1           SET NEW SQA SIZE
         ST    R3,SQASZO1
         SRL   R3,10               DIVIDE BY 1024
         CVD   R3,DOUBLE           CONVERT SIZE TO DECIMAL
         MVC   SQAWTO1+27(8),=X'4020212020202020'
         ED    SQAWTO1+27(8),DOUBLE+4
         L     R3,SQASPILL         SQA SPILLAGE INTO CSA
         SRL   R3,10               DIVIDE BY 1024
         CVD   R3,DOUBLE           CONVERT SIZE TO DECIMAL
         MVC   SQAWTO1+44(8),=X'4020212020202020'
         ED    SQAWTO1+44(8),DOUBLE+4
SQAWTO1  WTO   'SQAMON - SQA SIZE - XXXXXXXK; SPILL= XXXXXXXK',        X
               ROUTCDE=(1,11),DESC=3
         OI    FLAG,$DISPLAY       INDICATE DISPLAY DONE            SJB
         BR    R2                                                   SJB
         SPACE 1
SQADIS2  DS    0H
         L     R3,SQASZ2           SET NEW SQA SIZE
         ST    R3,SQASZO2          SET NEW SQA SIZE
         SRL   R3,10               DIVIDE BY 1024
         CVD   R3,DOUBLE           CONVERT SIZE TO DECIMAL
         MVC   SQAWTO2+27(8),=X'4020212020202020'
         ED    SQAWTO2+27(8),DOUBLE+4
SQAWTO2  WTO   'SQAMON -ESQA SIZE - XXXXXXXK',                         X
               ROUTCDE=(1,11),DESC=3
         SPACE 1
         OI    FLAG,$DISPLAY       INDICATE DISPLAY DONE            SJB
         BR    R2                                                   SJB
         EJECT
*--------------------------------------------------------------------*
*              DISPLAY CSA1 SIZE   BAL   R2,CSADIS1                  *
*--------------------------------------------------------------------*
CSADIS1  DS    0H                  SET NEW CSA SIZE                 SJB
         L     R11,CSAFREE1
         ST    R11,CSAFREO1        SET NEW CSA SIZE
         SRL   R11,10              DIVIDE BY 1024                   SJB
         CVD   R11,DOUBLE          CONVERT SIZE TO DECIMAL          SJB
         MVC   CSAWTO1+27(8),=X'4020212020202020'                   SJB
         ED    CSAWTO1+27(8),DOUBLE+4                               SJB
         SPACE 1
         L     R0,CSASZ1           TOTAL-SQASPILL
         LR    R3,R0
         SRL   R3,10               DIVIDE BY 1024
         SL    R0,CSAFREE1         - FREE = USED
         SRL   R0,10               DIVIDE BY 1024
         MH    R0,=H'10000'        100.00%
         SRDA  R0,32               MOVE TO R1
         DR    R0,R3               DIVIDE BY CSASZ1
         CVD   R1,DOUBLE           CONVERT SIZE TO DECIMAL          SJB
         MVC   CSAWTO1+44(7),=X'402021204B2020'                     SJB
         ED    CSAWTO1+44(7),DOUBLE+5                               SJB
CSAWTO1  WTO   'SQAMON - CSA FREE - XXXXXXXK; USED = XXX.XX% ',        X
               ROUTCDE=(1,11),DESC=3                                SJB
         OI    FLAG,$DISPLAY       INDICATE DISPLAY DONE            SJB
         BR    R2
         SPACE 1                                                    SJB
*--------------------------------------------------------------------*
*              DISPLAY CSA2 SIZE   BAL   R2,CSADIS2                  *
*--------------------------------------------------------------------*
CSADIS2  DS    0H                  SET NEW CSA SIZE                 SJB
         L     R11,CSAFREE2
         ST    R11,CSAFREO2        SET NEW CSA SIZE
         SRL   R11,10              DIVIDE BY 1024                   SJB
         CVD   R11,DOUBLE          CONVERT SIZE TO DECIMAL          SJB
         MVC   CSAWTO2+27(8),=X'4020212020202020'                   SJB
         ED    CSAWTO2+27(8),DOUBLE+4                               SJB
         SPACE 1
         L     R0,CSASZ2           TOTAL-SQASPILL
         LR    R3,R0
         SRL   R3,10               DIVIDE BY 1024
         SL    R0,CSAFREE2         - FREE = USED
         SRL   R0,10               DIVIDE BY 1024
         MH    R0,=H'10000'        100.00%
         SRDA  R0,32               MOVE TO R1
         DR    R0,R3               DIVIDE BY CSASZ1
         CVD   R1,DOUBLE           CONVERT SIZE TO DECIMAL          SJB
         MVC   CSAWTO2+44(7),=X'402021204B2020'                     SJB
         ED    CSAWTO2+44(7),DOUBLE+5                               SJB
CSAWTO2  WTO   'SQAMON -ECSA FREE - XXXXXXXK; USED = XXX.XX% ',        X
               ROUTCDE=(1,11),DESC=3                                SJB
         SPACE 1                                                    SJB
         OI    FLAG,$DISPLAY       INDICATE DISPLAY DONE            SJB
         BR    R2                                                   SJB
         EJECT
ABEND    ABEND 77
         SPACE 3
ABNDCHK  CLI   ABND,C'S'           SLIP TRAP ABEND REQUESTED
         BNE   WAIT                NO, CONTINUE
         L     R1,=X'C0073000'     TAKE ABEND
         SVC   13
         SPACE 3
EOJ      DS    0H
         MODESET KEY=NZERO,MODE=PROB
*        LA    R1,=C'NONE'
*        SVC   245
         L     R13,SAVE+4
         RETURN (14,12),RC=0
         EJECT
         LTORG
SAVE     DS    18F
         DS    0D
DOUBLE   DC    2F'0'
*                01234567'
*TIME            HHMMSSTH'
TIME     DC    C'00000010'          .1 SECONDS
CSAFREE1 DC    F'0'                CSA FREE                         SJB
CSAFREE2 DC    F'0'                ECSA FREE                        SJB
CSAFREO1 DC    F'0'                OLD CSA FREE                     SJB
CSAFREO2 DC    F'0'                OLD ECSA FREE                    SJB
CSASZ1   DC    F'0'                CSA SIZE                         SJB
CSASZ2   DC    F'0'                ECSA SIZE                        SJB
SQASPILL DC    F'0'                SPILLAGE INTO CSA
SQASZO1  DC    F'0'                OLD SQA SIZE
SQASZO2  DC    F'0'                OLD ESQA SIZE
SQASZ1   DC    F'0'                SQA SIZE
SQASZ2   DC    F'0'                ESQA SIZE
MODIFY   DS    F
ECBLIST  DC    A(0)
WTORECB  DC    X'40000000'
REPLY    DC    CL4' '
ABND     DC    C' '
FLAG     DC    X'00'                                                SJB
$DISPLAY EQU   X'80'                                                SJB
         EJECT
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         DSECT
CIBDSECT IEZCIB
         EJECT                                                      SJB
         IHAGDA                                                     SJB
         EJECT                                                      SJB
         IHADQE                                                     SJB
         EJECT                                                      SJB
         IHAFBQE                                                    SJB
         PRINT NOGEN
         CVT   DSECT=YES
         END
