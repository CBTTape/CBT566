*---------------------------------------------------------------------*
*        PROGRAM ID - DSCPPL - FIND/BUILD TSO CPPL                    *
*                                  RENT,REUS                          *
*        PURPOSE :                                                    *
*                                                                     *
*              BUILD A TSO CPPL IF R1 POINTS TO A PROGRAM             *
*              PARM FROM TSO 'CALL' OR JCL 'EXEC'                     *
*                                                                     *
*                                                                     *
*        INPUT                                                        *
*              R1  = @ OF TSO CPPL OR PARM FROM TSO 'CALL' OR         *
*                      JCL 'EXEC' CARD.                               *
*              R15 = @ OF PROCESS ENTRY POINT                         *
*                                                                     *
*        OUTPUT                                                       *
*              R1  = @ OF CPPL                                        *
*              R15 = 0  IF INPUT R1 WAS A CPPL                        *
*                  = 4  IF INPUT R1 WAS A PARM                        *
*                  = 8 ????                                           *
*                                                                     *
*                                                                     *
*    REGISTER AND LINKAGE CONVENTION:                                 *
*      R11 - R1                                                       *
*      R12 - BASE REGISTER FOR THIS PROGRAM                           *
*      R13 - SAVE AREA                                                *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT ,
DSCPPL   CSECT
         SAVE  (14,12),T,DSCPPL_&SYSDATC._&SYSTIME
         LR    R12,R15
         USING DSCPPL,R12
         LR    R11,R1              PARAM
         GETMAIN R,LV=LWORK
         ST    R13,4(,R1)
*        ST    R1,8(,R13)          DONT CHAIN OURS IN
         LR    R13,R1
         LR    R9,R11              PARAM USED AS CPPL
         LTR   R11,R11             PARAM
         BZ    CPL01100            IF ZERO, GO BUILD CPPL
         SPACE 3
         USING WRKDSECT,R10
         USING CPPL,R9             CPPL USING
         USING CBUF,R8             CBUF USING
         USING UPT,R7              UPT  USING
         USING PSCB,R6             PSCB USING
         USING ECT,R5              ECT  USING
         TM    CPPLCBUF,X'80'      IF ON, ASSUME PARAM.
         BO    CPL01100            YES, PARAM, GO BUILD CPPL
*--------------------------------------------------------------------*
*              DO FUTHER CHECKS TO VERIFY R1 POINTS TO CPPL          *
*--------------------------------------------------------------------*
         CLC   CPPLCBUF,=F'0'      CBUF @ ZERO
         BE    CPL01100
         CLC   CPPLUPT,=F'0'       UPT @ ZERO
         BE    CPL01100
         CLC   CPPLPSCB,=F'0'      PSCB @ ZERO
         BE    CPL01100
         CLC   CPPLECT,=F'0'       ECT @ ZERO
         BE    CPL01100
*
         L     R8,CPPLCBUF
         CLC   CBUFLEN,=H'256'     BUFFER LENGTH > 256
         BNL   CPL01100
         NC    CBUFOFF,=X'7FFF'
         NC    CBUFLEN,=X'7FFF'
         CLC   CBUFOFF,CBUFLEN     OFFSET >= BUFFER LEN
         BNL   CPL01100
*
         B     EXITCPPL            MUST BE A CPPL
         EJECT ,
*--------------------------------------------------------------------*
*              NO CPPL PASSED TO ROUTINE                             *
*--------------------------------------------------------------------*
CPL01000 DS    0H                  PARAM PASSED
CPL01100 DS    0H                  SOMETHING PASSED
         GETMAIN R,LV=WRKDLEN,SP=1
         LR    R10,R1              @ OF WRK DSECT
         MVC   WRKLEN,=A(WRKDLEN)  SAVE LENGTH OF GETMAIN
         SPACE 3
         LR    R0,R10              @ OF WRK DSECT
         LA    R1,WRKDLEN          LENGTH OF WRK DSECT
         XR    R14,R14
         XR    R15,R15
         MVCL  R0,R14              ZERO WRK DSECT
         SPACE 3
*--------------------------------------------------------------------*
*              FIND LWA TO GET PSCB AND ECT ADDRESS                  *
*--------------------------------------------------------------------*
         LA    R9,WRKCPPL          CPPL
         SPACE 3
         L     R4,PSAAOLD-PSA(R0)       GET ASCB ADDRESS
         ICM   R4,15,ASCBASXB-ASCB(R4)  GET ASXB ADDRESS
         BZ    CPL02000                 BIF ZERO
         SPACE 1
         ICM   R4,15,ASXBLWA-ASXB(R4)   GET LWA ADDRESS
         BZ    CPL02000                 BIF ZERO
         LA    R4,0(,R4)           CLEAR HI-ORDER BYTE
         USING LWA,R4
         SPACE 1
         C     R4,LWAPPTR          TEST IF VALAID LWA PTR
         BNE   CPL02000            BIF NOT EQUAL
         SPACE 1
         CLC   LWALWA,=CL8'   LWA  ' LWA CONTROL BLOCK ID
         BNE   CPL02000            BIF NOT EQUAL
         SPACE 3
         ICM   R6,15,LWAPSCB       GET PSCB ADDRESS
         BZ    CPL01120            BIF ZERO
         ST    R6,CPPLPSCB         STORE PSCB ADDRESS
         OI    WRKFLAG,WRK$TSO     MUST BE TSO
         SPACE 2
CPL01120 DS    0H
         ICM   R5,15,LWAECT        GET ECT  ADDRESS
         BZ    CPL01130            BIF ZERO
         ST    R5,CPPLECT          STORE ECT ADDRESS
         OI    WRKFLAG,WRK$TSO     MUST BE TSO
         DROP  R4                  DROP LWA
CPL01130 DS    0H
CPL02000 DS    0H
*--------------------------------------------------------------------*
*              BUILD CPPL                                            *
*--------------------------------------------------------------------*
         LA    R8,WRKCBUF
         ST    R8,CPPLCBUF         CBUF ADDRESS
         BAL   R14,BLDCBUF         GO BUILD CBUF
         SPACE 2
         SPACE 2
         ICM   R6,15,CPPLPSCB      PSCB PRESENT
         BNZ   CPL02100            YES,
         LA    R6,WRKPSCB          PSCB
         ST    R6,CPPLPSCB         OUR PSCB
         BAL   R14,BLDPSCB         GO BUILD PSCB
         SPACE 2
CPL02100 DS    0H                  REG5
         SPACE 2
         ICM   R5,15,CPPLECT       ECT PRESENT
         BNZ   CPL02200            YES,
         LA    R5,WRKECT           ECT
         ST    R5,CPPLECT          OUR ECT
         BAL   R14,BLDECT          GO BUILD ECT
         SPACE 2
CPL02200 DS    0H                  REG7
         SPACE 2
*                                  UPT BUILD AFTER PSCB
         ICM   R7,15,CPPLUPT       UPT PRESENT IN CPPL
         BNZ   CPL02300            YES, NEXT
*
         ICM   R7,15,PSCBUPT       UPT PRESENT IN PSCB
         BZ    CPL02210            NOPE, GO BUILD
*
         STCM  R7,15,CPPLUPT       STORE UPT IN CPPL
         B     CPL02300
CPL02210 DS    0H
         LA    R7,WRKUPT
         ST    R7,CPPLUPT          UPT  ADDRESS
         BAL   R14,BLDUPT          GO BUILD UPT
CPL02300 DS    0H
*
         B     EXITPARM
         SPACE 3
EXITPARM DS    0H
         TM    WRKFLAG,WRK$TSO     IS IT TSO
         BO    EXITP100             YES, EXIT
         LA    R2,UPT
         LA    R3,ECT
         LA    R4,WRKECB
         MVC   WRKSTK,STK
         STM   R2,R4,WRKIOPL
         LA    R0,WRKSTK
         ST    R0,WRKIOPL+12
         SPACE 2
         STACK ENVIRON=CREATE,                                         X
               MF=(E,WRKIOPL)      CREATE ENVIRONMENT
EXITP100 DS    0H
         LA    R1,WRKCPPL
         L     R13,4(,R13)
         LM    R14,R15,12(R13)     RESTORE REGISTERS
         LM    R2,R12,28(R13)      RESTORE REGISTERS
         LA    R15,4
         BR    R14
EXITCPPL DS    0H
         LR    R1,R13
         L     R13,4(,R13)
         FREEMAIN R,LV=LWORK,A=(1)
         RETURN (14,12),RC=0
         EJECT
*--------------------------------------------------------------------*
*              BUILD CBUF                                            *
*--------------------------------------------------------------------*
BLDCBUF  DS    0H
         TM    0(R11),X'80'        POSSIBLE PARM
         BZ    CBUF0200            NOPE
         L     R2,0(R11)           GET @ OF POSSIBLE LENGTH
         SR    R1,R1               ZERO FOR ICM
         ICM   R1,3,0(R2)          GET LENGTH
         BZ    CBUF0200            BIF 0 LENGTH
         CH    R1,=H'256'          MAX LENGTH = 256
         BH    CBUF0200            > MAX
         SPACE 3
         LA    R0,4(,R1)
         STCM  R0,3,CBUFLEN        STORE LENGTH + 4
         XC    CBUFOFF,CBUFOFF     ZERO OFFSET
         BCTR  R1,0                -1 FOR EX
         MVC   CBUFFER(*-*),2(R2)  DUMMY MOVE
         EX    R1,*-6              MOVE IN DATA
         BR    R14
         SPACE 3
CBUF0200 DS    0H
         MVC   CBUFLEN,=H'5'
         XC    CBUFOFF,CBUFOFF
         MVI   CBUFFER,C' '
         BR    R14
         SPACE 3
*--------------------------------------------------------------------*
*              BUILD UPT                                             *
*--------------------------------------------------------------------*
BLDUPT   DS    0H
         MVC   UPTPREFX,PSCBUSER
         MVC   UPTPREFL,PSCBUSRL
         BR    R14
*--------------------------------------------------------------------*
*              BUILD PSCB                                            *
*--------------------------------------------------------------------*
BLDPSCB  DS    0H
         TM    WRKFLAG,WRK$TSO     IS THIS TSO
         BO    PSCB0100            YES
         L    1,16           POINT AT CVT
         L    1,0(1)         POINT AT TCB
         L    1,4(1)         POINT AT TCBNEXT
         L    1,12(1)        POINT AT TIOT
         MVC   WRKJOBN(24),0(1)  MOVE JOB/STEP INFORMATION TO &JOB
         MVC   PSCBUSER(7),WRKJOBN MOVE IN JOBNAME AS USERID
PSCB0100 DS    0H
         LA    R1,7
         LA    R2,PSCBUSER+6       @ OF LAST BYTE
PSCB0110 TM    0(R2),X'BF'         ZERO OR BLANK
         BNZ   PSCB0120             YES
         BCTR  R2,0                 NO, +1
         BCT   R1,PSCB0110         LOOP
PSCB0120 DS    0H
         STC   R1,PSCBUSRL         SAVE LENGTH
         SPACE 1
         MVC   PSCBGPNM,=CL8'SYSALLDA'
         SPACE 1
         MVI   PSCBATR1,PSCBJCL
         SPACE 1
         MVC   PSCBSUBH(4),=CL4'AAAA'
         SPACE 1
         MVC   PSCBDEST,=CL8'LOCAL'
         SPACE 1
         LA    R0,WRKRLGB          RELOGON BUFFER
         ST    R0,PSCBRLGB
         SPACE 1
         LA    R0,WRKUPT           UPT ADDRESS
         ST    R0,PSCBUPT
         SPACE 1
         MVC   PSCBUPTL,=AL2(UPTDLEN) LENGTH OF UPT
         BR    R14
*--------------------------------------------------------------------*
*              BUILD ECT                                             *
*--------------------------------------------------------------------*
BLDECT   DS    0H
         BR    R14
*--------------------------------------------------------------------*
*              DATA                                                  *
*--------------------------------------------------------------------*
STK      STACK MF=L
STKLEN   EQU   *-STK
         LTORG ,
WORK     DSECT
SAVE     DS    9D
LWORK    EQU   *-WORK
         EJECT
WRKDSECT DSECT
WRKLEN   DS    F
WRKCPPL  DS    CL(CPPLDLEN)        CPPL
         DS    0F
WRKCBUF  DS    CL(CBUFDLEN)        CBUF
         DS    0F
WRKUPT   DS    CL(UPTDLEN)         UPT
         DS    0F
WRKPSCB  DS    CL(PSCBDLEN)        PSCB
         DS    0F
WRKECT   DS    CL(ECTDLEN)         ECT
         DS    0F
WRKRLGB  DS    CL(RLGBDLEN)        RLGB
         DS    0F
WRKIOPL  DS    4F
         DS    0F
WRKSTK   DS    CL(STKLEN)
WRKECB   DS    A
WRKFLAG  DS    X
WRK$TSO  EQU   X'80'
WRKJOBN  DS    CL24
         DS    0F
WRKDLEN  EQU   *-WRKDSECT          WORK LENGTH
         EJECT
         IKJCPPL ,
CPPLDLEN EQU   *-CPPL
         SPACE 3
CBUF     DSECT ,
CBUFLEN  DS    H                   TOTAL LENGTH OF BUFFER AREA
CBUFOFF  DS    H                   OFFSET TO START OF OPERANDS
CBUFFER  DS    CL256               COMMAND BUFFER TEXT
CBUFDLEN EQU   *-CBUF
         SPACE 3
         IKJUPT ,                  USER PROFILE TABLE
UPTDLEN  EQU   *-UPT
         SPACE 3
         IKJPSCB ,                 PROTECTED STEP CONTROL BLOCK
PSCBDLEN EQU   *-PSCB
         SPACE 3
         IKJECT ,                  TSO EVENT CONTROL TABLE
ECTDLEN  EQU   *-ECT
         SPACE 3
         IKJRLGB ,                 TSO RELOGON BUFFER
RLGBDLEN EQU   *-RLGB
         SPACE 3
LWA      DSECT
LWAPPTR  EQU   LWA+X'00',4         @ OF LWA
LWALWA   EQU   LWA+X'04',8         '   LWA  '
LWAPSCB  EQU   LWA+X'18',4         @ OF PSCB
LWAECT   EQU   LWA+X'20',4         @ OF ECT
         PRINT NOGEN
         SPACE 3
         IHAASCB ,
         SPACE 3
         IHAASXB ,
         SPACE 3
         IHAPSA  ,
         YREGS  ,
         END   ,
